<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>且听风吟，御剑于心！ • Posts by &#34;linux&#34; tag</title>
        <link>https://leezhao415.github.io</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Sun, 20 Feb 2022 23:06:52 +0800</pubDate>
        <lastBuildDate>Sun, 20 Feb 2022 23:06:52 +0800</lastBuildDate>
        <category>人工智能/CV</category>
        <category>Transformer/DETR(CV)</category>
        <category>人工智能</category>
        <category>数据集</category>
        <category>大数据框架</category>
        <category>编程工具</category>
        <category>NLP</category>
        <category>模型部署</category>
        <category>数据结构与算法</category>
        <category>Python数据分析</category>
        <category>网络通信</category>
        <category>YOLOX</category>
        <category>CV算法</category>
        <category>VSLAM</category>
        <category>NCNN部署</category>
        <category>YOLOX目标检测</category>
        <category>多模态</category>
        <category>目标检测（人脸检测）</category>
        <category>目标跟踪</category>
        <category>深度学习</category>
        <category>CV未来</category>
        <category>且读文摘</category>
        <category>NLP-BERT</category>
        <category>自然语言处理NLP</category>
        <category>IOU</category>
        <category>OpenCV之DNN模块</category>
        <category>深度模型</category>
        <category>激活函数</category>
        <category>NLP-模型优化</category>
        <category>梯度更新</category>
        <category>概述</category>
        <category>人脸识别</category>
        <category>名人名言</category>
        <category>寒窑赋</category>
        <category>NLP/评估指标</category>
        <category>度量学习</category>
        <category>智能家居</category>
        <category>机器学习/损失函数</category>
        <category>机器学习</category>
        <category>CV/目标检测工具箱</category>
        <category>模型性能指标</category>
        <category>科研项目成果</category>
        <category>计算机顶会</category>
        <category>表面缺陷检测</category>
        <category>计算机视觉CV</category>
        <category>网络编程</category>
        <category>NLP/数据增强工具</category>
        <category>AIGC前沿</category>
        <category>计算机视觉</category>
        <category>模型优化</category>
        <category>三维建模</category>
        <category>计算机视觉库</category>
        <category>深度学习环境配置</category>
        <category>知识蒸馏</category>
        <category>多任务学习模型</category>
        <category>数据库原理</category>
        <category>算法</category>
        <category>操作系统</category>
        <category>深度模型（目标检测）</category>
        <category>视频理解</category>
        <category>ReID</category>
        <category>MOT</category>
        <category>NLP-发展史</category>
        <category>编程语言</category>
        <category>CV数据集</category>
        <category>Linux</category>
        <category>PaddlePaddle</category>
        <item>
            <guid isPermalink="true">https://leezhao415.github.io/2022/02/20/%E3%80%90%E7%B2%BE%E5%8D%8E%E3%80%91Linux%E6%9C%80%E5%BC%BA%E6%80%BB%E7%BB%93/</guid>
            <title>【精华】Linux最强总结</title>
            <link>https://leezhao415.github.io/2022/02/20/%E3%80%90%E7%B2%BE%E5%8D%8E%E3%80%91Linux%E6%9C%80%E5%BC%BA%E6%80%BB%E7%BB%93/</link>
            <category>人工智能</category>
            <category>Linux</category>
            <pubDate>Sun, 20 Feb 2022 23:06:52 +0800</pubDate>
            <description><![CDATA[ &lt;meta name=&#34;referrer&#34; content=&#34;no-referrer&#34;&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;文章目录&lt;/strong&gt;&lt;/p&gt;
&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%89%8D%E8%A8%80&#34;&gt;前言&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#linux-%E5%9F%BA%E7%A1%80&#34;&gt;Linux 基础&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F&#34;&gt;操作系统&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BB%80%E4%B9%88%E6%98%AF-linux&#34;&gt;什么是 Linux&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#1linux-%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8%E4%B8%8E-linux-%E5%8F%91%E8%A1%8C%E5%A5%97%E4%BB%B6%E7%9A%84%E5%8C%BA%E5%88%AB&#34;&gt;（1）Linux 系统内核与 Linux 发行套件的区别&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#2linux-%E5%AF%B9%E6%AF%94-windows&#34;&gt;（2）Linux 对比 Windows&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#3linux-%E7%B3%BB%E7%BB%9F%E7%A7%8D%E7%B1%BB&#34;&gt;（3）Linux 系统种类&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BB%88%E7%AB%AF%E8%BF%9E%E6%8E%A5%E9%98%BF%E9%87%8C%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8&#34;&gt;终端连接阿里云服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#shell&#34;&gt;Shell&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#shell-%E7%9A%84%E7%A7%8D%E7%B1%BB&#34;&gt;Shell 的种类&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%91%BD%E4%BB%A4&#34;&gt;命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F&#34;&gt;快捷方式&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%87%E4%BB%B6%E5%92%8C%E7%9B%AE%E5%BD%95&#34;&gt;文件和目录&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%87%E4%BB%B6%E7%9A%84%E7%BB%84%E7%BB%87&#34;&gt;文件的组织&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9F%A5%E7%9C%8B%E8%B7%AF%E5%BE%84&#34;&gt;查看路径&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B5%8F%E8%A7%88%E5%92%8C%E5%88%87%E6%8D%A2%E7%9B%AE%E5%BD%95&#34;&gt;浏览和切换目录&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B5%8F%E8%A7%88%E5%92%8C%E5%88%9B%E5%BB%BA%E6%96%87%E4%BB%B6&#34;&gt;浏览和创建文件&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%87%E4%BB%B6%E7%9A%84%E5%A4%8D%E5%88%B6%E5%92%8C%E7%A7%BB%E5%8A%A8&#34;&gt;文件的复制和移动&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%87%E4%BB%B6%E7%9A%84%E5%88%A0%E9%99%A4%E5%92%8C%E9%93%BE%E6%8E%A5&#34;&gt;文件的删除和链接&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%94%A8%E6%88%B7%E4%B8%8E%E6%9D%83%E9%99%90&#34;&gt;用户与权限&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%94%A8%E6%88%B7&#34;&gt;用户&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BE%A4%E7%BB%84%E7%9A%84%E7%AE%A1%E7%90%86&#34;&gt;群组的管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86&#34;&gt;文件权限管理&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9F%A5%E6%89%BE%E6%96%87%E4%BB%B6&#34;&gt;查找文件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#locate&#34;&gt;locate&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#find&#34;&gt;find&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%BD%AF%E4%BB%B6%E4%BB%93%E5%BA%93&#34;&gt;软件仓库&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#yum-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4&#34;&gt;yum 常用命令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%88%87%E6%8D%A2-centos-%E8%BD%AF%E4%BB%B6%E6%BA%90&#34;&gt;切换 CentOS 软件源&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%98%85%E8%AF%BB%E6%89%8B%E5%86%8C&#34;&gt;阅读手册&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#man&#34;&gt;man&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#help&#34;&gt;help&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#linux-%E8%BF%9B%E9%98%B6&#34;&gt;Linux 进阶&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%87%E6%9C%AC%E6%93%8D%E4%BD%9C&#34;&gt;文本操作&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#grep&#34;&gt;grep&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sort&#34;&gt;sort&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wc&#34;&gt;wc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#uniq&#34;&gt;uniq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#cut&#34;&gt;cut&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%87%8D%E5%AE%9A%E5%90%91-%E7%AE%A1%E9%81%93-%E6%B5%81&#34;&gt;重定向 管道 流&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%87%8D%E5%AE%9A%E5%90%91&#34;&gt;重定向&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AE%A1%E9%81%93&#34;&gt;管道  &lt;code&gt;|&lt;/code&gt; &lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%B5%81&#34;&gt;流&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B&#34;&gt;查看进程&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#w&#34;&gt;w&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ps&#34;&gt;ps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#top&#34;&gt;top&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#kill&#34;&gt;kill&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%AE%A1%E7%90%86%E8%BF%9B%E7%A8%8B&#34;&gt;管理进程&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E8%BF%9B%E7%A8%8B%E7%8A%B6%E6%80%81&#34;&gt;进程状态&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%89%8D%E5%8F%B0%E8%BF%9B%E7%A8%8B-%E5%90%8E%E5%8F%B0%E8%BF%9B%E7%A8%8B&#34;&gt;前台进程 &amp;amp; 后台进程&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%AE%88%E6%8A%A4%E8%BF%9B%E7%A8%8B&#34;&gt;守护进程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%96%87%E4%BB%B6%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B&#34;&gt;文件压缩解压&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#tar&#34;&gt;tar&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#gzip-gunzip&#34;&gt;gzip / gunzip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#tar-%E5%BD%92%E6%A1%A3%E5%8E%8B%E7%BC%A9&#34;&gt;tar 归档 + 压缩&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#zcat-zless-zmore&#34;&gt;zcat、zless、zmore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#zipunzip&#34;&gt;zip/unzip&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E8%BD%AF%E4%BB%B6&#34;&gt;编译安装软件&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85&#34;&gt;编译安装&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%BD%91%E7%BB%9C&#34;&gt;网络&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#ifconfig&#34;&gt;ifconfig&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#host&#34;&gt;host&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#ssh-%E8%BF%9E%E6%8E%A5%E8%BF%9C%E7%A8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8&#34;&gt;ssh 连接远程服务器&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#wget&#34;&gt;wget&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%A4%87%E4%BB%BD&#34;&gt;备份&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#scp&#34;&gt;scp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#rsync&#34;&gt;rsync&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E7%B3%BB%E7%BB%9F&#34;&gt;系统&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#halt&#34;&gt;halt&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#reboot&#34;&gt;reboot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#poweroff&#34;&gt;poweroff&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#vim-%E7%BC%96%E8%BE%91%E5%99%A8&#34;&gt;Vim 编辑器&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#vim-%E6%98%AF%E4%BB%80%E4%B9%88&#34;&gt;Vim 是什么？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#vim-%E5%B8%B8%E7%94%A8%E6%A8%A1%E5%BC%8F&#34;&gt;Vim 常用模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C&#34;&gt;基本操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E6%A0%87%E5%87%86%E6%93%8D%E4%BD%9C&#34;&gt;标准操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E9%AB%98%E7%BA%A7%E6%93%8D%E4%BD%9C&#34;&gt;高级操作&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#vim-%E9%85%8D%E7%BD%AE&#34;&gt;Vim 配置&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;span id=&#34;前言&#34;&gt; 前言&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;Linux 的学习对于一个程序员的重要性是不言而喻的。前端开发相比后端开发，接触  &lt;code&gt;Linux&lt;/code&gt;  机会相对较少，因此往往容易忽视它。但是学好它却是程序员必备修养之一。&lt;/p&gt;
&lt;p&gt;如果本文对你有所帮助，请点个👍 吧。&lt;/p&gt;
&lt;p&gt;作者使用的是阿里云服务器  &lt;code&gt;ECS&lt;/code&gt;  （最便宜的那种）  &lt;code&gt;CentOS 7.7&lt;/code&gt;  64 位。当然你也可以在自己的电脑安装虚拟机，虚拟机中再去安装  &lt;code&gt;CentOS&lt;/code&gt;  系统（这就完全免费了）。至于它的安装教程可以去谷歌搜索下，相关教程非常多。&lt;/p&gt;
&lt;h3&gt;&lt;span id=&#34;linux-基础&#34;&gt; Linux 基础&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&#34;操作系统&#34;&gt; 操作系统&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;操作系统  &lt;code&gt;Operating System&lt;/code&gt;  简称  &lt;code&gt;OS&lt;/code&gt;  ，是软件的一部分，它是硬件基础上的第一层软件，是硬件和其它软件沟通的桥梁。&lt;/p&gt;
&lt;p&gt;操作系统会控制其他程序运行，管理系统资源，提供最基本的计算功能，如管理及配置内存、决定系统资源供需的优先次序等，同时还提供一些基本的服务程序。&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTD4n0ncQjcEBWMHpWI4woibE4Cj9ic31PyOS1K6wQ0AaxKoIsBkpDe34jg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34;&gt;&lt;/center&gt;
&lt;h4&gt;&lt;span id=&#34;什么是-linux&#34;&gt; 什么是 Linux&lt;/span&gt;&lt;/h4&gt;
&lt;h5&gt;&lt;span id=&#34;1linux-系统内核与-linux-发行套件的区别&#34;&gt; （1）Linux 系统内核与 Linux 发行套件的区别&lt;/span&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Linux&lt;/code&gt;  系统内核指的是由  &lt;code&gt;Linus Torvalds&lt;/code&gt;  负责维护，提供硬件抽象层、硬盘及文件系统控制及多任务功能的系统核心程序。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Linux&lt;/code&gt;  发行套件系统是我们常说的  &lt;code&gt;Linux&lt;/code&gt;  操作系统，也即是由  &lt;code&gt;Linux&lt;/code&gt;  内核与各种常用软件的集合产品。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;总结：真正的  &lt;code&gt;Linux&lt;/code&gt;  指的是系统内核，而我们常说的  &lt;code&gt;Linux&lt;/code&gt;  指的是 “发行版完整的包含一些基础软件的操作系统”。&lt;/strong&gt;&lt;/p&gt;
&lt;h5&gt;&lt;span id=&#34;2linux-对比-windows&#34;&gt; （2）Linux 对比 Windows&lt;/span&gt;&lt;/h5&gt;
&lt;ol&gt;
&lt;li&gt;稳定且有效率；&lt;/li&gt;
&lt;li&gt;免费（或少许费用）；&lt;/li&gt;
&lt;li&gt;漏洞少且快速修补；&lt;/li&gt;
&lt;li&gt;多任务多用户；&lt;/li&gt;
&lt;li&gt;更加安全的用户与文件权限策略；&lt;/li&gt;
&lt;li&gt;适合小内核程序的嵌入系统；&lt;/li&gt;
&lt;li&gt;相对不耗资源。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;&lt;span id=&#34;3linux-系统种类&#34;&gt; （3）Linux 系统种类&lt;/span&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;红帽企业版  &lt;code&gt;Linux&lt;/code&gt;  ： &lt;code&gt;RHEL&lt;/code&gt;  是全世界内使用最广泛的  &lt;code&gt;Linux&lt;/code&gt;  系统。它具有极强的性能与稳定性，是众多生成环境中使用的（收费的）系统。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Fedora&lt;/code&gt;  ：由红帽公司发布的桌面版系统套件，用户可以免费体验到最新的技术或工具，这些技术或工具在成熟后会被加入到  &lt;code&gt;RHEL&lt;/code&gt;  系统中，因此  &lt;code&gt;Fedora&lt;/code&gt;  也成为  &lt;code&gt;RHEL&lt;/code&gt;  系统的试验版本。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;CentOS&lt;/code&gt;  ：通过把  &lt;code&gt;RHEL&lt;/code&gt;  系统重新编译并发布给用户免费使用的  &lt;code&gt;Linux&lt;/code&gt;  系统，具有广泛的使用人群。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Deepin&lt;/code&gt;  ：中国发行，对优秀的开源成品进行集成和配置。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Debian&lt;/code&gt;  ：稳定性、安全性强，提供了免费的基础支持，在国外拥有很高的认可度和使用率。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ubuntu&lt;/code&gt;  ：是一款派生自  &lt;code&gt;Debian&lt;/code&gt;  的操作系统，对新款硬件具有极强的兼容能力。 &lt;code&gt;Ubuntu&lt;/code&gt;  与  &lt;code&gt;Fedora&lt;/code&gt;  都是极其出色的  &lt;code&gt;Linux&lt;/code&gt;  桌面系统，而且  &lt;code&gt;Ubuntu&lt;/code&gt;  也可用于服务器领域。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;span id=&#34;终端连接阿里云服务器&#34;&gt; 终端连接阿里云服务器&lt;/span&gt;&lt;/h4&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDClToWrvMH9QGN8MpZSzHk2m7jvvx3cV0KYW9FjhQ7BWmaBM3Izk8Lw/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34;&gt;&lt;/center&gt;
&lt;p&gt;通过执行  &lt;code&gt;ssh root@121.42.11.34&lt;/code&gt;  命令，然后输入服务器连接密码就可以顺利登陆远程服务器。从现在开始我们就可以在本地电脑操作远程服务器。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;这个黑色的面板就是终端也就是  &lt;code&gt;Shell&lt;/code&gt;  （命令行环境）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;ssh root@xxx&lt;/code&gt;  这是一条命令，必须要在  &lt;code&gt;Shell&lt;/code&gt;  中才能执行。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4&gt;&lt;span id=&#34;shell&#34;&gt; Shell&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Shell&lt;/code&gt;  这个单词的原意是 “外壳”，跟  &lt;code&gt;kernel&lt;/code&gt; （内核）相对应，比喻内核外面的一层，即用户跟内核交互的对话界面。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Shell&lt;/code&gt;  是一个程序，提供一个与用户对话的环境。这个环境只有一个命令提示符，让用户从键盘输入命令，所以又称为命令行环境（  &lt;code&gt;command line interface&lt;/code&gt;  ，简写为  &lt;code&gt;CLI&lt;/code&gt;  ）。 &lt;code&gt;Shell&lt;/code&gt;  接收到用户输入的命令，将命令送入操作系统执行，并将结果返回给用户。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shell&lt;/code&gt;  是一个命令解释器，解释用户输入的命令。它支持变量、条件判断、循环操作等语法，所以用户可以用  &lt;code&gt;Shell&lt;/code&gt;  命令写出各种小程序，又称为  &lt;code&gt;Shell&lt;/code&gt;  脚本。这些脚本都通过  &lt;code&gt;Shell&lt;/code&gt;  的解释执行，而不通过编译。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Shell&lt;/code&gt;  是一个工具箱，提供了各种小工具，供用户方便地使用操作系统的功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;shell-的种类&#34;&gt; Shell 的种类&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;Shell&lt;/code&gt;  有很多种，只要能给用户提供命令行环境的程序，都可以看作是  &lt;code&gt;Shell&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;历史上，主要的  &lt;code&gt;Shell&lt;/code&gt;  有下面这些：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bourne Shell（sh）&lt;/li&gt;
&lt;li&gt;Bourne Again shell（bash）&lt;/li&gt;
&lt;li&gt;C Shell（csh）&lt;/li&gt;
&lt;li&gt;TENEX C Shell（tcsh）&lt;/li&gt;
&lt;li&gt;Korn shell（ksh）&lt;/li&gt;
&lt;li&gt;Z Shell（zsh）&lt;/li&gt;
&lt;li&gt;Friendly Interactive Shell（fish）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其中  &lt;code&gt;Bash&lt;/code&gt;  是目前最常用的  &lt;code&gt;Shell&lt;/code&gt;  。 &lt;code&gt;MacOS&lt;/code&gt;  中的默认  &lt;code&gt;Shell&lt;/code&gt;  就是  &lt;code&gt;Bash&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;通过执行  &lt;code&gt;echo $SHELL&lt;/code&gt;  命令可以查看到当前正在使用的  &lt;code&gt;Shell&lt;/code&gt;  。还可以通过  &lt;code&gt;cat /etc/shells&lt;/code&gt;  查看当前系统安装的所有  &lt;code&gt;Shell&lt;/code&gt;  种类。&lt;/p&gt;
&lt;h5&gt;&lt;span id=&#34;命令&#34;&gt; 命令&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;命令行提示符&#34;&gt; 命令行提示符&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;进入命令行环境以后，用户会看到  &lt;code&gt;Shell&lt;/code&gt;  的提示符。提示符往往是一串前缀，最后以一个美元符号  &lt;code&gt;$&lt;/code&gt;  结尾，用户可以在这个符号后面输入各种命令。&lt;/p&gt;
&lt;p&gt;执行一个简单的命令  &lt;code&gt;pwd&lt;/code&gt;  ：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@iZm5e8dsxce9ufaic7hi3uZ ~]# pwd&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;/root&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;命令解析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;root&lt;/code&gt; ：表示用户名；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;iZm5e8dsxce9ufaic7hi3uZ&lt;/code&gt; ：表示主机名；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;~&lt;/code&gt; ：表示目前所在目录为家目录，其中  &lt;code&gt;root&lt;/code&gt;  用户的家目录是  &lt;code&gt;/root&lt;/code&gt;  普通用户的家目录在  &lt;code&gt;/home&lt;/code&gt;  下；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;#&lt;/code&gt; ：指示你所具有的权限（  &lt;code&gt;root&lt;/code&gt;  用户为  &lt;code&gt;#&lt;/code&gt;  ，普通用户为  &lt;code&gt;$&lt;/code&gt;  ）。&lt;/li&gt;
&lt;li&gt;执行  &lt;code&gt;whoami&lt;/code&gt;  命令可以查看当前用户名；&lt;/li&gt;
&lt;li&gt;执行  &lt;code&gt;hostname&lt;/code&gt;  命令可以查看当前主机名；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于如何创建、切换、删除用户，在后面的用户与权限会具体讲解，这里先使用  &lt;code&gt;root&lt;/code&gt;  用户进行演示。&lt;/p&gt;
&lt;p&gt;[备注]  &lt;code&gt;root&lt;/code&gt;  是超级用户，具备操作系统的一切权限。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;命令格式&#34;&gt; 命令格式&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;command parameters（命令 参数）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;长短参数&#34;&gt; 长短参数&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;单个参数：ls -a（a 是英文 all 的缩写，表示“全部”）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;多个参数：ls -al（全部文件 + 列表形式展示）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;单个长参数：ls --all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;多个长参数：ls --reverse --all&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;长短混合参数：ls --all -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;参数值&#34;&gt; 参数值&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;短参数：command -p 10（例如：ssh root@121.42.11.34 -p 22）&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;长参数：command --paramters=10（例如：ssh root@121.42.11.34 --port=22）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;快捷方式&#34;&gt; 快捷方式&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;在开始学习  &lt;code&gt;Linux&lt;/code&gt;  命令之前，有这么一些快捷方式，是必须要提前掌握的，它将贯穿整个  &lt;code&gt;Linux&lt;/code&gt;  使用生涯。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过上下方向键 ↑ ↓ 来调取过往执行过的  &lt;code&gt;Linux&lt;/code&gt;  命令；&lt;/li&gt;
&lt;li&gt;命令或参数仅需输入前几位就可以用  &lt;code&gt;Tab&lt;/code&gt;  键补全；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + R&lt;/code&gt;  ：用于查找使用过的命令（ &lt;code&gt;history&lt;/code&gt;  命令用于列出之前使用过的所有命令，然后输入  &lt;code&gt;!&lt;/code&gt;  命令加上编号 (  &lt;code&gt;!2&lt;/code&gt;  ) 就可以直接执行该历史命令）；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + L&lt;/code&gt; ：清除屏幕并将当前行移到页面顶部；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + C&lt;/code&gt; ：中止当前正在执行的命令；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + U&lt;/code&gt; ：从光标位置剪切到行首；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + K&lt;/code&gt; ：从光标位置剪切到行尾；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + W&lt;/code&gt; ：剪切光标左侧的一个单词；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + Y&lt;/code&gt; ：粘贴  &lt;code&gt;Ctrl + U | K | Y&lt;/code&gt;  剪切的命令；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + A&lt;/code&gt; ：光标跳到命令行的开头；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + E&lt;/code&gt; ：光标跳到命令行的结尾；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + D&lt;/code&gt; ：关闭  &lt;code&gt;Shell&lt;/code&gt;  会话；&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;span id=&#34;文件和目录&#34;&gt; 文件和目录&lt;/span&gt;&lt;/h4&gt;
&lt;h5&gt;&lt;span id=&#34;文件的组织&#34;&gt; 文件的组织&lt;/span&gt;&lt;/h5&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDsdHVfdSgVaDqKCI68l8x9V4T8eaCrkpdP7pausTQ4IZroibUqVZ20rw/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34;&gt;&lt;/center&gt;
&lt;h5&gt;&lt;span id=&#34;查看路径&#34;&gt; 查看路径&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;pwd&#34;&gt; pwd&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;显示当前目录的路径&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDic7ib74ibBX4gicwXAjlAkicqJw39ZaMFfdJuicZWHlxLkahjzFofTJqvmLQ/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34; style=&#34;zoom:80%;&#34;&gt;&lt;/center&gt;
&lt;h6&gt;&lt;span id=&#34;which&#34;&gt; which&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;查看命令的可执行文件所在路径，  &lt;code&gt;Linux&lt;/code&gt;  下，每一条命令其实都对应一个可执行程序，在终端中输入命令，按回车的时候，就是执行了对应的那个程序，  &lt;code&gt;which&lt;/code&gt;  命令本身对应的程序也存在于  &lt;code&gt;Linux&lt;/code&gt;  中。&lt;/p&gt;
&lt;p&gt;总的来说一个命令就是一个可执行程序。&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTD5ovhJcC7k10uXt0vTF6EXiaUfdsytqEFXdVk9SS18CsicQxud4r4jsOw/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34; style=&#34;zoom:80%;&#34;&gt;&lt;/center&gt;
&lt;h5&gt;&lt;span id=&#34;浏览和切换目录&#34;&gt; 浏览和切换目录&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;ls&#34;&gt; ls&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;列出文件和目录，它是  &lt;code&gt;Linux&lt;/code&gt;  最常用的命令之一。&lt;/p&gt;
&lt;p&gt;【常用参数】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;  显示所有文件和目录包括隐藏的&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;  显示详细列表&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;  适合人类阅读的&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;  按文件最近一次修改时间排序&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;  显示文件的  &lt;code&gt;inode&lt;/code&gt;  （  &lt;code&gt;inode&lt;/code&gt;  是文件内容的标识）&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDk1zO8NTYSlUptStW4R7BWWEFthyR9ibS3siapAicwP6Cagzj4UDaIXGhw/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34; style=&#34;zoom:90%;&#34;&gt;&lt;/center&gt;
&lt;h6&gt;&lt;span id=&#34;cd&#34;&gt; cd&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;cd&lt;/code&gt;  是英语  &lt;code&gt;change directory&lt;/code&gt;  的缩写，表示切换目录。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cd / --&amp;gt; 跳转到根目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd ~ --&amp;gt; 跳转到家目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd .. --&amp;gt; 跳转到上级目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd ./home --&amp;gt; 跳转到当前目录的home目录下&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd /home/lion --&amp;gt; 跳转到根目录下的home目录下的lion目录&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;cd --&amp;gt; 不添加任何参数，也是回到家目录&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[注意] 输入 &lt;code&gt;cd /ho&lt;/code&gt;  + 单次  &lt;code&gt;tab&lt;/code&gt;  键会自动补全路径 + 两次  &lt;code&gt;tab&lt;/code&gt;  键会列出所有可能的目录列表。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;du&#34;&gt; du&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;列举目录大小信息。&lt;/p&gt;
&lt;p&gt;【常用参数】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-h&lt;/code&gt;  适合人类阅读的；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;  同时列举出目录下文件的大小信息；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-s&lt;/code&gt;  只显示总计大小，不显示具体信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;浏览和创建文件&#34;&gt; 浏览和创建文件&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;cat&#34;&gt; cat&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;一次性显示文件所有内容，更适合查看小的文件。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat cloud-init.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【常用参数】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;  显示行号。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;less&#34;&gt; less&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;分页显示文件内容，更适合查看大的文件。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;less cloud-init.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【快捷操作】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空格键：前进一页（一个屏幕）；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;b&lt;/code&gt;  键：后退一页；&lt;/li&gt;
&lt;li&gt;回车键：前进一行；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;y&lt;/code&gt;  键：后退一行；&lt;/li&gt;
&lt;li&gt;上下键：回退或前进一行；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt;  键：前进半页；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt;  键：后退半页；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;q&lt;/code&gt;  键：停止读取文件，中止  &lt;code&gt;less&lt;/code&gt;  命令；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt;  键：显示当前页面的内容是文件中的第几行到第几行以及一些其它关于本页内容的详细信息；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;  键：显示帮助文档；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/&lt;/code&gt;  键：进入搜索模式后，按  &lt;code&gt;n&lt;/code&gt;  键跳到一个符合项目，按  &lt;code&gt;N&lt;/code&gt;  键跳到上一个符合项目，同时也可以输入正则表达式匹配。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;head&#34;&gt; head&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;显示文件的开头几行（默认是 10 行）&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;head cloud-init.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【参数】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;  指定行数  &lt;code&gt;head cloud-init.log -n 2&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;tail&#34;&gt; tail&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;显示文件的结尾几行（默认是 10 行）&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tail cloud-init.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【参数】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;  指定行数  &lt;code&gt;tail cloud-init.log -n 2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;  会每过 1 秒检查下文件是否有更新内容，也可以用  &lt;code&gt;-s&lt;/code&gt;  参数指定间隔时间  &lt;code&gt;tail -f -s 4 xxx.log&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;touch&#34;&gt; touch&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;创建一个文件&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;touch new_file&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;mkdir&#34;&gt; mkdir&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;创建一个目录&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mkdir new_folder&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【常用参数】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;  递归的创建目录结构  &lt;code&gt;mkdir -p one/two/three&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;文件的复制和移动&#34;&gt; 文件的复制和移动&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;cp&#34;&gt; cp&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;拷贝文件和目录&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cp file file_copy --&amp;gt; file 是目标文件，file_copy 是拷贝出来的文件cp file one --&amp;gt; 把 file 文件拷贝到 one 目录下，并且文件名依然为 filecp file one/file_copy --&amp;gt; 把 file 文件拷贝到 one 目录下，文件名为file_copycp *.txt folder --&amp;gt; 把当前目录下所有 txt 文件拷贝到 folder 目录下&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【常用参数】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;  递归的拷贝，常用来拷贝一整个目录&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;mv&#34;&gt; mv&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;移动（重命名）文件或目录，与 cp 命令用法相似。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;mv file one --&amp;gt; 将 file 文件移动到 one 目录下mv new_folder one --&amp;gt; 将 new_folder 文件夹移动到one目录下mv *.txt folder --&amp;gt; 把当前目录下所有 txt 文件移动到 folder 目录下mv file new_file --&amp;gt; file 文件重命名为 new_file&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;文件的删除和链接&#34;&gt; 文件的删除和链接&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;rm&#34;&gt; rm&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;删除文件和目录，由于  &lt;code&gt;Linux&lt;/code&gt;  下没有回收站，一旦删除非常难恢复，因此需要谨慎操作&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;rm new_file  --&amp;gt; 删除 new_file 文件rm f1 f2 f3  --&amp;gt; 同时删除 f1 f2 f3 3个文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【常用参数】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;  向用户确认是否删除；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;  文件强制删除；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;  递归删除文件夹，著名的删除操作  &lt;code&gt;rm -rf&lt;/code&gt;  。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;ln&#34;&gt; ln&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;英文  &lt;code&gt;Link&lt;/code&gt;  的缩写，表示创建链接。&lt;/p&gt;
&lt;p&gt;学习创建链接之前，首先要理解链接是什么，我们先来看看  &lt;code&gt;Linux&lt;/code&gt;  的文件是如何存储的：&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Linux&lt;/code&gt;  文件的存储方式分为 3 个部分，文件名、文件内容以及权限，其中文件名的列表是存储在硬盘的其它地方和文件内容是分开存放的，每个文件名通过  &lt;code&gt;inode&lt;/code&gt;  标识绑定到文件内容。&lt;/p&gt;
&lt;p&gt;Linux 下有两种链接类型：硬链接和软链接。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;硬链接&#34;&gt; 硬链接&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;使链接的两个文件共享同样文件内容，就是同样的  &lt;code&gt;inode&lt;/code&gt;  ，一旦文件 1 和文件 2 之间有了硬链接，那么修改任何一个文件，修改的都是同一块内容，它的缺点是，只能创建指向文件的硬链接，不能创建指向目录的（其实也可以，但比较复杂）而软链接都可以，因此软链接使用更加广泛。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ln file1 file2  --&amp;gt; 创建 file2 为 file1 的硬链接&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDefy14gyK7BcCLpEdwOKzTXcOStZOVy1mfY4AS462pbQ6iaOj5pqEoNQ/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34;&gt;&lt;/center&gt;
&lt;p&gt;如果我们用  &lt;code&gt;rm file1&lt;/code&gt;  来删除  &lt;code&gt;file1&lt;/code&gt;  ，对  &lt;code&gt;file2&lt;/code&gt;  没有什么影响，对于硬链接来说，删除任意一方的文件，共同指向的文件内容并不会从硬盘上删除。只有同时删除了  &lt;code&gt;file1&lt;/code&gt;  与  &lt;code&gt;file2&lt;/code&gt;  后，它们共同指向的文件内容才会消失。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;软链接&#34;&gt; 软链接&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;软链接就类似  &lt;code&gt;windows&lt;/code&gt;  下快捷方式。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ln -s file1 file2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDnmrlUBQiaRyufJdTZnSoDUYlBgPQWnbGzyJl9NB9hPUfZtPOlQM5Yibg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34;&gt;&lt;/center&gt;
&lt;p&gt;执行  &lt;code&gt;ls -l&lt;/code&gt;  命名查看当前目录下文件的具体信息&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;total 0-rw-r--r-- 1 root root 0 Jan 14 06:29 file1lrwxrwxrwx 1 root root 5 Jan 14 06:42 file2 -&amp;gt; file1  # 表示file2 指向 file1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其实  &lt;code&gt;file2&lt;/code&gt;  只是  &lt;code&gt;file1&lt;/code&gt;  的一个快捷方式，它指向的是  &lt;code&gt;file1&lt;/code&gt;  ，所以显示的是  &lt;code&gt;file1&lt;/code&gt;  的内容，但其实  &lt;code&gt;file2&lt;/code&gt;  的  &lt;code&gt;inode&lt;/code&gt;  与  &lt;code&gt;file1&lt;/code&gt;  并不相同。如果我们删除了  &lt;code&gt;file2&lt;/code&gt;  的话，  &lt;code&gt;file1&lt;/code&gt;  是不会受影响的，但如果删除  &lt;code&gt;file1&lt;/code&gt;  的话，  &lt;code&gt;file2&lt;/code&gt;  就会变成死链接，因为指向的文件不见了。&lt;/p&gt;
&lt;h4&gt;&lt;span id=&#34;用户与权限&#34;&gt; 用户与权限&lt;/span&gt;&lt;/h4&gt;
&lt;h5&gt;&lt;span id=&#34;用户&#34;&gt; 用户&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;Linux&lt;/code&gt;  是一个多用户的操作系统。在  &lt;code&gt;Linux&lt;/code&gt;  中，理论上来说，我们可以创建无数个用户，但是这些用户是被划分到不同的群组里面的，有一个用户，名叫  &lt;code&gt;root&lt;/code&gt;  ，是一个很特殊的用户，它是超级用户，拥有最高权限。&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDx0E1bKqKcauyxXb4trTYbYe2v6EOn6fExWbmwCOleUUvPiatlHiaLJJg/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34;&gt;&lt;/center&gt;
&lt;p&gt;自己创建的用户是有限权限的用户，这样大大提高了  &lt;code&gt;Linux&lt;/code&gt;  系统的安全性，有效防止误操作或是病毒攻击，但是我们执行的某些命令需要更高权限时可以使用  &lt;code&gt;sudo&lt;/code&gt;  命令。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;sudo&#34;&gt; sudo&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;以  &lt;code&gt;root&lt;/code&gt;  身份运行命令&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo date  --&amp;gt; 当然查看日期是不需要sudo的这里只是演示，sudo 完之后一般还需要输入用户密码的&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;useradd-passwd&#34;&gt; useradd + passwd&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;useradd&lt;/code&gt;  添加新用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;passwd&lt;/code&gt;  修改用户密码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这两个命令需要  &lt;code&gt;root&lt;/code&gt;  用户权限&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;useradd lion --&amp;gt; 添加一个lion用户，添加完之后在 /home 路径下可以查看passwd lion --&amp;gt; 修改lion用户的密码&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;userdel&#34;&gt; userdel&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;删除用户，需要  &lt;code&gt;root&lt;/code&gt;  用户权限&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;userdel lion --&amp;gt; 只会删除用户名，不会从/home中删除对应文件夹userdel lion -r --&amp;gt; 会同时删除/home下的对应文件夹&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;su&#34;&gt; su&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;切换用户，需要  &lt;code&gt;root&lt;/code&gt;  用户权限&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo su --&amp;gt; 切换为root用户（exit 命令或 CTRL + D 快捷键都可以使普通用户切换为 root 用户）su lion --&amp;gt; 切换为普通用户su - --&amp;gt; 切换为root用户&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;群组的管理&#34;&gt; 群组的管理&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;Linux&lt;/code&gt;  中每个用户都属于一个特定的群组，如果你不设置用户的群组，默认会创建一个和它的用户名一样的群组，并且把用户划归到这个群组。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;groupadd&#34;&gt; groupadd&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;创建群组，用法和  &lt;code&gt;useradd&lt;/code&gt;  类似。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;groupadd friends&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;groupdel&#34;&gt; groupdel&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;删除一个已存在的群组&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;groupdel foo  --&amp;gt; 删除foo群组&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;groups&#34;&gt; groups&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;查看用户所在群组&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;groups lion  --&amp;gt; 查看 lion 用户所在的群组&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;usermod&#34;&gt; usermod&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;用于修改用户的账户。&lt;/p&gt;
&lt;p&gt;【常用参数】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;  对用户重命名。需要注意的是  &lt;code&gt;/home&lt;/code&gt;  中的用户家目录的名字不会改变，需要手动修改。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g&lt;/code&gt;  修改用户所在的群组，例如  &lt;code&gt;usermod -g friends lion&lt;/code&gt;  修改  &lt;code&gt;lion&lt;/code&gt;  用户的群组为  &lt;code&gt;friends&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-G&lt;/code&gt;  一次性让用户添加多个群组，例如  &lt;code&gt;usermod -G friends,foo,bar lion&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;   &lt;code&gt;-G&lt;/code&gt;  会让你离开原先的群组，如果你不想这样做的话，就得再添加  &lt;code&gt;-a&lt;/code&gt;  参数，意味着  &lt;code&gt;append&lt;/code&gt;  追加的意思。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;chgrp&#34;&gt; chgrp&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;用于修改文件的群组。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chgrp bar file.txt --&amp;gt; file.txt文件的群组修改为bar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;chown&#34;&gt; chown&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;改变文件的所有者，需要  &lt;code&gt;root&lt;/code&gt;  身份才能运行。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chown lion file.txt --&amp;gt; 把其它用户创建的file.txt转让给lion用户chown lion:bar file.txt --&amp;gt; 把file.txt的用户改为lion，群组改为bar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【常用参数】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;  递归设置子目录和子文件，  &lt;code&gt;chown -R lion:lion /home/frank&lt;/code&gt;  把  &lt;code&gt;frank&lt;/code&gt;  文件夹的用户和群组都改为  &lt;code&gt;lion&lt;/code&gt;  。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;文件权限管理&#34;&gt; 文件权限管理&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;chmod&#34;&gt; chmod&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;修改访问权限。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chmod 740 file.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【常用参数】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;  可以递归地修改文件访问权限，例如  &lt;code&gt;chmod -R 777 /home/lion&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;修改权限的确简单，但是理解其深层次的意义才是更加重要的。下面我们来系统的学习  &lt;code&gt;Linux&lt;/code&gt;  的文件权限。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@lion ~]# ls -ldrwxr-xr-x 5 root root 4096 Apr 13  2020 climblrwxrwxrwx 1 root root    7 Jan 14 06:41 hello2.c -&amp;gt; hello.c-rw-r--r-- 1 root root  149 Jan 13 06:14 hello.c&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中  &lt;code&gt;drwxr-xr-x&lt;/code&gt;  表示文件或目录的权限。让我们一起来解读它具体代表什么？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt;  ：表示目录，就是说这是一个目录，普通文件是  &lt;code&gt;-&lt;/code&gt;  ，链接是  &lt;code&gt;l&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;r&lt;/code&gt;  ： &lt;code&gt;read&lt;/code&gt;  表示文件可读。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;w&lt;/code&gt;  ： &lt;code&gt;write&lt;/code&gt;  表示文件可写，一般有写的权限，就有删除的权限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;x&lt;/code&gt;  ： &lt;code&gt;execute&lt;/code&gt;  表示文件可执行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;  ：表示没有相应权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;权限的整体是按用户来划分的，如下图所示：&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDNHjwSKdibbHRmf7PrjuxDSSGmlJcw3TibY3dxFU9hm783e6bibg3jzpsw/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34; style=&#34;zoom:80%;&#34;&gt;&lt;/center&gt;
&lt;p&gt;现在再来理解这句权限  &lt;code&gt;drwxr-xr-x&lt;/code&gt;  的意思：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;它是一个文件夹；&lt;/li&gt;
&lt;li&gt;它的所有者具有：读、写、执行权限；&lt;/li&gt;
&lt;li&gt;它的群组用户具有：读、执行的权限，没有写的权限；&lt;/li&gt;
&lt;li&gt;它的其它用户具有：读、执行的权限，没有写的权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在理解了权限，我们使用  &lt;code&gt;chmod&lt;/code&gt;  来尝试修改权限。 &lt;code&gt;chmod&lt;/code&gt;  它不需要是  &lt;code&gt;root&lt;/code&gt;  用户才能运行的，只要你是此文件所有者，就可以用  &lt;code&gt;chmod&lt;/code&gt;  来修改文件的访问权限。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;数字分配权限&#34;&gt; 数字分配权限&lt;/span&gt;&lt;/h6&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;权限&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;数字&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;r&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;w&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;x&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;因此要改变权限，只要做一些简单的加法就行：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chmod 640 hello.c # 分析6 = 4 + 2 + 0 表示所有者具有 rw 权限4 = 4 + 0 + 0 表示群组用户具有 r 权限0 = 0 + 0 + 0 表示其它用户没有权限对应文字权限为：-rw-r-----&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;用字母来分配权限&#34;&gt; 用字母来分配权限&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt;  ： &lt;code&gt;user&lt;/code&gt;  的缩写，用户的意思，表示所有者。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;g&lt;/code&gt;  ： &lt;code&gt;group&lt;/code&gt;  的缩写，群组的意思，表示群组用户。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;o&lt;/code&gt;  ： &lt;code&gt;other&lt;/code&gt;  的缩写，其它的意思，表示其它用户。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a&lt;/code&gt;  ： &lt;code&gt;all&lt;/code&gt;  的缩写，所有的意思，表示所有用户。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;+&lt;/code&gt;  ：加号，表示添加权限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;  ：减号，表示去除权限。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;=&lt;/code&gt;  ：等于号，表示分配权限。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;chmod u+rx file --&amp;gt; 文件file的所有者增加读和运行的权限chmod g+r file --&amp;gt; 文件file的群组用户增加读的权限chmod o-r file --&amp;gt; 文件file的其它用户移除读的权限chmod g+r o-r file --&amp;gt; 文件file的群组用户增加读的权限，其它用户移除读的权限chmod go-r file --&amp;gt; 文件file的群组和其他用户移除读的权限chmod +x file --&amp;gt; 文件file的所有用户增加运行的权限chmod u=rwx,g=r,o=- file --&amp;gt; 文件file的所有者分配读写和执行的权限，群组其它用户分配读的权限，其他用户没有任何权限&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4&gt;&lt;span id=&#34;查找文件&#34;&gt; 查找文件&lt;/span&gt;&lt;/h4&gt;
&lt;h5&gt;&lt;span id=&#34;locate&#34;&gt; locate&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;搜索包含关键字的所有文件和目录。后接需要查找的文件名，也可以用正则表达式。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;安装-locate&#34;&gt; 安装 locate&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;yum -y install mlocate --&amp;gt; 安装包updatedb --&amp;gt; 更新数据库locate file.txtlocate fil*.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[注意]  &lt;code&gt;locate&lt;/code&gt;  命令会去文件数据库中查找命令，而不是全磁盘查找，因此刚创建的文件并不会更新到数据库中，所以无法被查找到，可以执行  &lt;code&gt;updatedb&lt;/code&gt;  命令去更新数据库。&lt;/p&gt;
&lt;h5&gt;&lt;span id=&#34;find&#34;&gt; find&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;用于查找文件，它会去遍历你的实际硬盘进行查找，而且它允许我们对每个找到的文件进行后续操作，功能非常强大。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;find &amp;lt;何处&amp;gt; &amp;lt;何物&amp;gt; &amp;lt;做什么&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;何处：指定在哪个目录查找，此目录的所有子目录也会被查找。&lt;/li&gt;
&lt;li&gt;何物：查找什么，可以根据文件的名字来查找，也可以根据其大小来查找，还可以根据其最近访问时间来查找。&lt;/li&gt;
&lt;li&gt;做什么：找到文件后，可以进行后续处理，如果不指定这个参数，  &lt;code&gt;find&lt;/code&gt;  命令只会显示找到的文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;根据文件名查找&#34;&gt; 根据文件名查找&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;find -name &amp;quot;file.txt&amp;quot; --&amp;gt; 当前目录以及子目录下通过名称查找文件find . -name &amp;quot;syslog&amp;quot; --&amp;gt; 当前目录以及子目录下通过名称查找文件find / -name &amp;quot;syslog&amp;quot; --&amp;gt; 整个硬盘下查找syslogfind /var/log -name &amp;quot;syslog&amp;quot; --&amp;gt; 在指定的目录/var/log下查找syslog文件find /var/log -name &amp;quot;syslog*&amp;quot; --&amp;gt; 查找syslog1、syslog2 ... 等文件，通配符表示所有find /var/log -name &amp;quot;*syslog*&amp;quot; --&amp;gt; 查找包含syslog的文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;[注意]  &lt;code&gt;find&lt;/code&gt;  命令只会查找完全符合 “何物” 字符串的文件，而  &lt;code&gt;locate&lt;/code&gt;  会查找所有包含关键字的文件。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;根据文件大小查找&#34;&gt; 根据文件大小查找&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;find /var -size +10M --&amp;gt; /var 目录下查找文件大小超过 10M 的文件find /var -size -50k --&amp;gt; /var 目录下查找文件大小小于 50k 的文件find /var -size +1G --&amp;gt; /var 目录下查找文件大小查过 1G 的文件find /var -size 1M --&amp;gt; /var 目录下查找文件大小等于 1M 的文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;根据文件最近访问时间查找&#34;&gt; 根据文件最近访问时间查找&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;find -name &amp;quot;*.txt&amp;quot; -atime -7  --&amp;gt; 近 7天内访问过的.txt结尾的文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;仅查找目录或文件&#34;&gt; 仅查找目录或文件&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;find . -name &amp;quot;file&amp;quot; -type f  --&amp;gt; 只查找当前目录下的file文件find . -name &amp;quot;file&amp;quot; -type d  --&amp;gt; 只查找当前目录下的file目录&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;操作查找结果&#34;&gt; 操作查找结果&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;find -name &amp;quot;*.txt&amp;quot; -printf &amp;quot;%p - %u\n&amp;quot; --&amp;gt; 找出所有后缀为txt的文件，并按照 %p - %u\n 格式打印，其中%p=文件名，%u=文件所有者find -name &amp;quot;*.jpg&amp;quot; -delete --&amp;gt; 删除当前目录以及子目录下所有.jpg为后缀的文件，不会有删除提示，因此要慎用find -name &amp;quot;*.c&amp;quot; -exec chmod 600 &amp;#123;&amp;#125; \; --&amp;gt; 对每个.c结尾的文件，都进行 -exec 参数指定的操作，&amp;#123;&amp;#125; 会被查找到的文件替代，\; 是必须的结尾find -name &amp;quot;*.c&amp;quot; -ok chmod 600 &amp;#123;&amp;#125; \; --&amp;gt; 和上面的功能一直，会多一个确认提示&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4&gt;&lt;span id=&#34;软件仓库&#34;&gt; 软件仓库&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Linux&lt;/code&gt;  下软件是以包的形式存在，一个软件包其实就是软件的所有文件的压缩包，是二进制的形式，包含了安装软件的所有指令。 &lt;code&gt;Red Hat&lt;/code&gt;  家族的软件包后缀名一般为  &lt;code&gt;.rpm&lt;/code&gt;  ，  &lt;code&gt;Debian&lt;/code&gt;  家族的软件包后缀是  &lt;code&gt;.deb&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Linux&lt;/code&gt;  的包都存在一个仓库，叫做软件仓库，它可以使用  &lt;code&gt;yum&lt;/code&gt;  来管理软件包，  &lt;code&gt;yum&lt;/code&gt;  是  &lt;code&gt;CentOS&lt;/code&gt;  中默认的包管理工具，适用于  &lt;code&gt;Red Hat&lt;/code&gt;  一族。可以理解成  &lt;code&gt;Node.js&lt;/code&gt;  的  &lt;code&gt;npm&lt;/code&gt;  。&lt;/p&gt;
&lt;h5&gt;&lt;span id=&#34;yum-常用命令&#34;&gt; yum 常用命令&lt;/span&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;yum update | yum upgrade&lt;/code&gt;  更新软件包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yum search xxx&lt;/code&gt;  搜索相应的软件包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yum install xxx&lt;/code&gt;  安装软件包&lt;/li&gt;
&lt;li&gt;&lt;code&gt;yum remove xxx&lt;/code&gt;  删除软件包&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;切换-centos-软件源&#34;&gt; 切换 CentOS 软件源&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;有时候  &lt;code&gt;CentOS&lt;/code&gt;  默认的  &lt;code&gt;yum&lt;/code&gt;  源不一定是国内镜像，导致  &lt;code&gt;yum&lt;/code&gt;  在线安装及更新速度不是很理想。这时候需要将  &lt;code&gt;yum&lt;/code&gt;  源设置为国内镜像站点。国内主要开源的镜像站点是网易和阿里云。&lt;/p&gt;
&lt;p&gt;1、首先备份系统自带  &lt;code&gt;yum&lt;/code&gt;  源配置文件  &lt;code&gt;mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;2、下载阿里云的  &lt;code&gt;yum&lt;/code&gt;  源配置文件到  &lt;code&gt;/etc/yum.repos.d/CentOS7&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3、生成缓存&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;yum makecache&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4&gt;&lt;span id=&#34;阅读手册&#34;&gt; 阅读手册&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;Linux&lt;/code&gt;  命令种类繁杂，我们凭借记忆不可能全部记住，因此学会查用手册是非常重要的。&lt;/p&gt;
&lt;h5&gt;&lt;span id=&#34;man&#34;&gt; man&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;安装更新-man&#34;&gt; 安装更新 man&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sudo yum install -y man-pages --&amp;gt; 安装sudo mandb --&amp;gt; 更新&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;man-手册种类&#34;&gt; man 手册种类&lt;/span&gt;&lt;/h6&gt;
&lt;ol&gt;
&lt;li&gt;可执行程序或  &lt;code&gt;Shell&lt;/code&gt;  命令；&lt;/li&gt;
&lt;li&gt;系统调用（  &lt;code&gt;Linux&lt;/code&gt;  内核提供的函数）；&lt;/li&gt;
&lt;li&gt;库调用（程序库中的函数）；&lt;/li&gt;
&lt;li&gt;文件（例如  &lt;code&gt;/etc/passwd&lt;/code&gt;  ）；&lt;/li&gt;
&lt;li&gt;特殊文件（通常在  &lt;code&gt;/dev&lt;/code&gt;  下）；&lt;/li&gt;
&lt;li&gt;游戏；&lt;/li&gt;
&lt;li&gt;杂项（  &lt;code&gt;man(7)&lt;/code&gt;  ， &lt;code&gt;groff(7)&lt;/code&gt;  ）；&lt;/li&gt;
&lt;li&gt;系统管理命令（通常只能被  &lt;code&gt;root&lt;/code&gt;  用户使用）；&lt;/li&gt;
&lt;li&gt;内核子程序。&lt;/li&gt;
&lt;/ol&gt;
&lt;h6&gt;&lt;span id=&#34;man-数字-命令&#34;&gt; man + 数字 + 命令&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;输入 man + 数字 + 命令 / 函数，可以查到相关的命令和函数，若不加数字，  &lt;code&gt;man&lt;/code&gt;  默认从数字较小的手册中寻找相关命令和函数&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;man 3 rand  --&amp;gt; 表示在手册的第三部分查找 rand 函数man ls    --&amp;gt; 查找 ls 用法手册&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;man 手册核心区域解析：(以  &lt;code&gt;man pwd&lt;/code&gt;  为例)&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;NAME # 命令名称和简单描述     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwd -- return working directory nameSYNOPSIS # 使用此命令的所有方法     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;pwd [-L | -P]DESCRIPTION # 包括所有参数以及用法     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;The pwd utility writes the absolute pathname of the current working directory to the standard output.     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Some shells may provide a builtin pwd command which is similar or identical to this utility.  Consult the builtin(1) manual page.     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;The options are as follows:     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-L      Display the logical current working directory.     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;-P      Display the physical current working directory (all symbolic links resolved).     &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;If no options are specified, the -L option is assumed.SEE ALSO &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 扩展阅读相关命令     &lt;span class=&#34;built_in&#34;&gt;builtin&lt;/span&gt;(1), &lt;span class=&#34;built_in&#34;&gt;cd&lt;/span&gt;(1), csh(1), sh(1), getcwd(3)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;help&#34;&gt; help&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;man&lt;/code&gt;  命令像新华词典一样可以查询到命令或函数的详细信息，但其实我们还有更加快捷的方式去查询，  &lt;code&gt;command --help&lt;/code&gt;  或  &lt;code&gt;command -h&lt;/code&gt;  ，它没有  &lt;code&gt;man&lt;/code&gt;  命令显示的那么详细，但是它更加易于阅读。&lt;/p&gt;
&lt;h3&gt;&lt;span id=&#34;linux-进阶&#34;&gt; Linux 进阶&lt;/span&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;span id=&#34;文本操作&#34;&gt; 文本操作&lt;/span&gt;&lt;/h4&gt;
&lt;h5&gt;&lt;span id=&#34;grep&#34;&gt; grep&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;全局搜索一个正则表达式，并且打印到屏幕。简单来说就是，在文件中查找关键字，并显示关键字所在行。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;基础语法&#34;&gt; 基础语法&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;grep text file # text代表要搜索的文本，file代表供搜索的文件# 实例[root@lion ~]# grep path /etc/profilepathmunge () &amp;#123;    pathmunge /usr/sbin    pathmunge /usr/local/sbin    pathmunge /usr/local/sbin after    pathmunge /usr/sbin afterunset -f pathmunge&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;常用参数&#34;&gt; 常用参数&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;  忽略大小写，  &lt;code&gt;grep -i path /etc/profile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;  显示行号， &lt;code&gt;grep -n path /etc/profile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;  只显示搜索文本不在的那些行， &lt;code&gt;grep -v path /etc/profile&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;  递归查找，  &lt;code&gt;grep -r hello /etc&lt;/code&gt;  ，Linux 中还有一个 rgrep 命令，作用相当于  &lt;code&gt;grep -r&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;高级用法&#34;&gt; 高级用法&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;grep&lt;/code&gt;  可以配合正则表达式使用。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;grep -E path /etc/profile --&amp;gt; 完全匹配pathgrep -E ^path /etc/profile --&amp;gt; 匹配path开头的字符串grep -E [Pp]ath /etc/profile --&amp;gt; 匹配path或Path&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;sort&#34;&gt; sort&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;对文件的行进行排序。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;基础语法&#34;&gt; 基础语法&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sort name.txt # 对name.txt文件进行排序&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;实例用法&#34;&gt; 实例用法&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;为了演示方便，我们首先创建一个文件  &lt;code&gt;name.txt&lt;/code&gt;  ，放入以下内容：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ChristopherShawnTedRockNoahZacharyBella&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行  &lt;code&gt;sort name.txt&lt;/code&gt;  命令，会对文本内容进行排序。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;常用参数&#34;&gt; 常用参数&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;  将排序后的文件写入新文件，  &lt;code&gt;sort -o name_sorted.txt name.txt&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;  倒序排序，  &lt;code&gt;sort -r name.txt&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-R&lt;/code&gt;  随机排序，  &lt;code&gt;sort -R name.txt&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-n&lt;/code&gt;  对数字进行排序，默认是把数字识别成字符串的，因此 138 会排在 25 前面，如果添加了  &lt;code&gt;-n&lt;/code&gt;  数字排序的话，则 25 会在 138 前面。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;wc&#34;&gt; wc&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;word count&lt;/code&gt;  的缩写，用于文件的统计。它可以统计单词数目、行数、字符数，字节数等。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;基础语法&#34;&gt; 基础语法&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wc name.txt # 统计name.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;实例用法&#34;&gt; 实例用法&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@lion ~]# wc name.txt 13 13 91 name.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;第一个 13，表示行数；&lt;/li&gt;
&lt;li&gt;第二个 13，表示单词数；&lt;/li&gt;
&lt;li&gt;第三个 91，表示字节数。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;常用参数&#34;&gt; 常用参数&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;  只统计行数，  &lt;code&gt;wc -l name.txt&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;  只统计单词数，  &lt;code&gt;wc -w name.txt&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;  只统计字节数，  &lt;code&gt;wc -c name.txt&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;  只统计字符数，  &lt;code&gt;wc -m name.txt&lt;/code&gt;  。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;uniq&#34;&gt; uniq&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;删除文件中的重复内容。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;基础语法&#34;&gt; 基础语法&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;uniq name.txt # 去除name.txt重复的行数，并打印到屏幕上uniq name.txt uniq_name.txt # 把去除重复后的文件保存为 uniq_name.txt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【注意】它只能去除连续重复的行数。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;常用参数&#34;&gt; 常用参数&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;  统计重复行数，  &lt;code&gt;uniq -c name.txt&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;  只显示重复的行数，  &lt;code&gt;uniq -d name.txt&lt;/code&gt;  。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;cut&#34;&gt; cut&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;剪切文件的一部分内容。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;基础语法&#34;&gt; 基础语法&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cut -c 2-4 name.txt # 剪切每一行第二到第四个字符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;常用参数&#34;&gt; 常用参数&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;  用于指定用什么分隔符（比如逗号、分号、双引号等等）  &lt;code&gt;cut -d , name.txt&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-f&lt;/code&gt;  表示剪切下用分隔符分割的哪一块或哪几块区域，  &lt;code&gt;cut -d , -f 1 name.txt&lt;/code&gt;  。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;span id=&#34;重定向-管道-流&#34;&gt; 重定向 管道 流&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;在  &lt;code&gt;Linux&lt;/code&gt;  中一个命令的去向可以有 3 个地方：终端、文件、作为另外一个命令的入参。&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTD1eSiaktDCexxrKQS2UGrRCLy7rcK7vJ2aEGbXW7Cr3v7YF4g0XIeSPQ/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34;&gt;&lt;/center&gt;
&lt;p&gt;命令一般都是通过键盘输入，然后输出到终端、文件等地方，它的标准用语是  &lt;code&gt;stdin&lt;/code&gt;  、  &lt;code&gt;stdout&lt;/code&gt;  以及  &lt;code&gt;stderr&lt;/code&gt;  。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;标准输入  &lt;code&gt;stdin&lt;/code&gt;  ，终端接收键盘输入的命令，会产生两种输出；&lt;/li&gt;
&lt;li&gt;标准输出  &lt;code&gt;stdout&lt;/code&gt;  ，终端输出的信息（不包含错误信息）；&lt;/li&gt;
&lt;li&gt;标准错误输出  &lt;code&gt;stderr&lt;/code&gt;  ，终端输出的错误信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDncO7weX8F5ficdcN9leJ4zXLmpghaXN5wZQcgicJnQe1zo1oHT11ic5LA/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34; style=&#34;zoom: 67%;&#34;&gt;&lt;/center&gt;
&lt;h5&gt;&lt;span id=&#34;重定向&#34;&gt; 重定向&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;把本来要显示在终端的命令结果，输送到别的地方（到文件中或者作为其他命令的输入）。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;输出重定向-gt&#34;&gt; 输出重定向  &lt;code&gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&lt;/code&gt;  表示重定向到新的文件，  &lt;code&gt;cut -d , -f 1 notes.csv &amp;gt; name.csv&lt;/code&gt;  ，它表示通过逗号剪切  &lt;code&gt;notes.csv&lt;/code&gt;  文件（剪切完有 3 个部分）获取第一个部分，重定向到  &lt;code&gt;name.csv&lt;/code&gt;  文件。&lt;/p&gt;
&lt;p&gt;我们来看一个具体示例，学习它的使用，假设我们有一个文件  &lt;code&gt;notes.csv&lt;/code&gt;  ，文件内容如下：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Mark1,951/100,很不错1Mark2,952/100,很不错2Mark3,953/100,很不错3Mark4,954/100,很不错4Mark5,955/100,很不错5Mark6,956/100,很不错6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;执行命令： &lt;code&gt;cut -d , -f 1 notes.csv &amp;gt; name.csv&lt;/code&gt;  最后输出如下内容：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Mark1Mark2Mark3Mark4Mark5Mark6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;【注意】使用  &lt;code&gt;&amp;gt;&lt;/code&gt;  要注意，如果输出的文件不存在它会新建一个，如果输出的文件已经存在，则会覆盖。因此执行这个操作要非常小心，以免覆盖其它重要文件。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;输出重定向-gtgt&#34;&gt; 输出重定向  &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;表示重定向到文件末尾，因此它不会像  &lt;code&gt;&amp;gt;&lt;/code&gt;  命令这么危险，它是追加到文件的末尾（当然如果文件不存在，也会被创建）。&lt;/p&gt;
&lt;p&gt;再次执行  &lt;code&gt;cut -d , -f 1 notes.csv &amp;gt;&amp;gt; name.csv&lt;/code&gt;  ，则会把名字追加到  &lt;code&gt;name.csv&lt;/code&gt;  里面。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Mark1Mark2Mark3Mark4Mark5Mark6Mark1Mark2Mark3Mark4Mark5Mark6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们平时读的  &lt;code&gt;log&lt;/code&gt;  日志文件其实都是用这个命令输出的。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;输出重定向-2gt&#34;&gt; 输出重定向  &lt;code&gt;2&amp;gt;&lt;/code&gt;&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;标准错误输出&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat not_exist_file.csv &amp;gt; res.txt 2&amp;gt; errors.log&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;当我们  &lt;code&gt;cat&lt;/code&gt;  一个文件时，会把文件内容打印到屏幕上，这个是标准输出；&lt;/li&gt;
&lt;li&gt;当使用了  &lt;code&gt;&amp;gt; res.txt&lt;/code&gt;  时，则不会打印到屏幕，会把标准输出写入文件  &lt;code&gt;res.txt&lt;/code&gt;  文件中；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;2&amp;gt; errors.log&lt;/code&gt;  当发生错误时会写入  &lt;code&gt;errors.log&lt;/code&gt;  文件中。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;输出重定向-2gtgt&#34;&gt; 输出重定向  &lt;code&gt;2&amp;gt;&amp;gt;&lt;/code&gt;&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;标准错误输出（追加到文件末尾）同  &lt;code&gt;&amp;gt;&amp;gt;&lt;/code&gt;  相似。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;输出重定向-2gtamp1&#34;&gt; 输出重定向  &lt;code&gt;2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;标准输出和标准错误输出都重定向都一个地方&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat not_exist_file.csv &amp;gt; res.txt 2&amp;gt;&amp;amp;1  # 覆盖输出cat not_exist_file.csv &amp;gt;&amp;gt; res.txt 2&amp;gt;&amp;amp;1 # 追加输出&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;目前为止，我们接触的命令的输入都来自命令的参数，其实命令的输入还可以来自文件或者键盘的输入。&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDLhNHEp9WqTyZQcqbibV8yAiarT3ErFAYg1lMMOwuyZnzURicuf3NGbv4A/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34;&gt;&lt;/center&gt;
&lt;h6&gt;&lt;span id=&#34;输入重定向-lt&#34;&gt; 输入重定向  &lt;code&gt;&amp;lt;&lt;/code&gt;&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;&lt;/code&gt;  符号用于指定命令的输入。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cat &amp;lt; name.csv # 指定命令的输入为 name.csv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;虽然它的运行结果与  &lt;code&gt;cat name.csv&lt;/code&gt;  一样，但是它们的原理却完全不同。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cat name.csv&lt;/code&gt;  表示  &lt;code&gt;cat&lt;/code&gt;  命令接收的输入是  &lt;code&gt;notes.csv&lt;/code&gt;  文件名，那么要先打开这个文件，然后打印出文件内容。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cat &amp;lt; name.csv&lt;/code&gt;  表示  &lt;code&gt;cat&lt;/code&gt;  命令接收的输入直接是  &lt;code&gt;notes.csv&lt;/code&gt;  这个文件的内容，  &lt;code&gt;cat&lt;/code&gt;  命令只负责将其内容打印，打开文件并将文件内容传递给  &lt;code&gt;cat&lt;/code&gt;  命令的工作则交给终端完成。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;输入重定向-ltlt&#34;&gt; 输入重定向  &lt;code&gt;&amp;lt;&amp;lt;&lt;/code&gt;&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;将键盘的输入重定向为某个命令的输入。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;sort -n &amp;lt;&amp;lt; END # 输入这个命令之后，按下回车，终端就进入键盘输入模式，其中END为结束命令（这个可以自定义）wc -m &amp;lt;&amp;lt; END # 统计输入的单词&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;管道&#34;&gt; 管道  &lt;code&gt;|&lt;/code&gt;&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;把两个命令连起来使用，一个命令的输出作为另外一个命令的输入，英文是  &lt;code&gt;pipeline&lt;/code&gt;  ，可以想象一个个水管连接起来，管道算是重定向流的一种。&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDSd6NpWcibwMUvWm25t2mLy5ckHLtz4KZbGDFK6rgv3g1q0IrS0gK54w/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34;&gt;&lt;/center&gt;
&lt;p&gt;举几个实际用法案例：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cut -d , -f 1 name.csv | sort &amp;gt; sorted_name.txt # 第一步获取到的 name 列表，通过管道符再进行排序，最后输出到sorted_name.txt&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;du | sort -nr | head # du 表示列举目录大小信息# sort 进行排序,-n 表示按数字排序，-r 表示倒序# head 前10行文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;grep log -Ir /var/log | cut -d : -f 1 | sort | uniq# grep log -Ir /var/log 表示在log文件夹下搜索 /var/log 文本，-r 表示递归，-I 用于排除二进制文件&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; cut -d : -f 1 表示通过冒号进行剪切，获取剪切的第一部分&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; sort 进行排序&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; uniq 进行去重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;流&#34;&gt; 流&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;流并非一个命令，在计算机科学中，流  &lt;code&gt;stream&lt;/code&gt;  的含义是比较难理解的，记住一点即可：&lt;strong&gt;流就是读一点数据，处理一点点数据。其中数据一般就是二进制格式。&lt;/strong&gt; 上面提及的重定向或管道，就是把数据当做流去运转的。&lt;/p&gt;
&lt;p&gt;到此我们就接触了，流、重定向、管道等  &lt;code&gt;Linux&lt;/code&gt;  高级概念及指令。其实你会发现关于流和管道在其它语言中也有广泛的应用。 &lt;code&gt;Angular&lt;/code&gt;  中的模板语法中可以使用管道。 &lt;code&gt;Node.js&lt;/code&gt;  中也有  &lt;code&gt;stream&lt;/code&gt;  流的概念。&lt;/p&gt;
&lt;h4&gt;&lt;span id=&#34;查看进程&#34;&gt; 查看进程&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;在  &lt;code&gt;Windows&lt;/code&gt;  中通过  &lt;code&gt;Ctrl + Alt + Delete&lt;/code&gt;  快捷键查看软件进程。&lt;/p&gt;
&lt;h5&gt;&lt;span id=&#34;w&#34;&gt; w&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;帮助我们快速了解系统中目前有哪些用户登录着，以及他们在干什么。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@lion ~]# w 06:31:53 up 25 days,  9:53,  1 user,  load average: 0.00, 0.01, 0.05USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHATroot     pts/0    118.31.243.53    05:56    1.00s  0.02s  0.00s w 06:31:53：表示当前时间up 25 days, 9:53：表示系统已经正常运行了“25天9小时53分钟”1 user：表示一个用户load average: 0.00, 0.01, 0.05：表示系统的负载，3个值分别表示“1分钟的平均负载”，“5分钟的平均负载”，“15分钟的平均负载” USER：表示登录的用于 TTY：登录的终端名称为pts/0 FROM：连接到服务器的ip地址 LOGIN@：登录时间 IDLE：用户有多久没有活跃了 JCPU：该终端所有相关的进程使用的 CPU 时间，每当进程结束就停止计时，开始新的进程则会重新计时 PCPU：表示 CPU 执行当前程序所消耗的时间，当前进程就是在 WHAT 列里显示的程序 WHAT：表示当下用户正运行的程序是什么，这里我运行的是 w&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;ps&#34;&gt; ps&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;用于显示当前系统中的进程，  &lt;code&gt;ps&lt;/code&gt;  命令显示的进程列表不会随时间而更新，是静态的，是运行  &lt;code&gt;ps&lt;/code&gt;  命令那个时刻的状态或者说是一个进程快照。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;基础语法&#34;&gt; 基础语法&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@lion ~]# ps  PID TTY          TIME CMD 1793 pts/0    00:00:00 bash 4756 pts/0    00:00:00 ps  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;PID：进程号，每个进程都有唯一的进程号 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;TTY：进程运行所在的终端 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;TIME：进程运行时间 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;CMD：产生这个进程的程序名，如果在进程列表中看到有好几行都是同样的程序名，那么就是同样的程序产生了不止一个进程&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;常用参数&#34;&gt; 常用参数&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-ef&lt;/code&gt;  列出所有进程；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-efH&lt;/code&gt;  以乔木状列举出所有进程；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;  列出此用户运行的进程；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-aux&lt;/code&gt;  通过  &lt;code&gt;CPU&lt;/code&gt;  和内存使用来过滤进程  &lt;code&gt;ps -aux | less&lt;/code&gt;  ;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-aux --sort -pcpu&lt;/code&gt;  按  &lt;code&gt;CPU&lt;/code&gt;  使用降序排列，  &lt;code&gt;-aux --sort -pmem&lt;/code&gt;  表示按内存使用降序排列；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-axjf&lt;/code&gt;  以树形结构显示进程，  &lt;code&gt;ps -axjf&lt;/code&gt;  它和  &lt;code&gt;pstree&lt;/code&gt;  效果类似。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;top&#34;&gt; top&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;获取进程的动态列表。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;top - 07:20:07 up 25 days, 10:41,  1 user,  load average: 0.30, 0.10, 0.07Tasks:  67 total,   1 running,  66 sleeping,   0 stopped,   0 zombie%Cpu(s):  0.7 us,  0.3 sy,  0.0 ni, 99.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 stKiB Mem :  1882072 total,   552148 free,   101048 used,  1228876 buff/cacheKiB Swap:        0 total,        0 free,        0 used.  1594080 avail Mem   PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND                                                                                                         956 root      10 -10  133964  15848  10240 S  0.7  0.8 263:13.01 AliYunDun                                                                                                         1 root      20   0   51644   3664   2400 S  0.0  0.2   3:23.63 systemd                                                                                                           2 root      20   0       0      0      0 S  0.0  0.0   0:00.05 kthreadd                                                                                                          4 root       0 -20       0      0      0 S  0.0  0.0   0:00.00 kworker/0:0H&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;top - 07:20:07 up 25 days, 10:41, 1 user, load average: 0.30, 0.10, 0.07&lt;/code&gt;  相当  &lt;code&gt;w&lt;/code&gt;  命令的第一行的信息。&lt;/li&gt;
&lt;li&gt;展示的这些进程是按照使用处理器  &lt;code&gt;%CPU&lt;/code&gt;  的使用率来排序的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;kill&#34;&gt; kill&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;结束一个进程，  &lt;code&gt;kill + PID&lt;/code&gt;  。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;kill 956 # 结束进程号为956的进程kill 956 957 # 结束多个进程kill -9 7291 # 强制结束进程&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4&gt;&lt;span id=&#34;管理进程&#34;&gt; 管理进程&lt;/span&gt;&lt;/h4&gt;
&lt;h5&gt;&lt;span id=&#34;进程状态&#34;&gt; 进程状态&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;主要是切换进程的状态。我们先了解下  &lt;code&gt;Linux&lt;/code&gt;  下进程的五种状态：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;状态码  &lt;code&gt;R&lt;/code&gt;  ：表示正在运行的状态；&lt;/li&gt;
&lt;li&gt;状态码  &lt;code&gt;S&lt;/code&gt;  ：表示中断（休眠中，受阻，当某个条件形成后或接受到信号时，则脱离该状态）；&lt;/li&gt;
&lt;li&gt;状态码  &lt;code&gt;D&lt;/code&gt;  ：表示不可中断（进程不响应系统异步信号，即使用 kill 命令也不能使其中断）；&lt;/li&gt;
&lt;li&gt;状态码  &lt;code&gt;Z&lt;/code&gt;  ：表示僵死（进程已终止，但进程描述符依然存在，直到父进程调用  &lt;code&gt;wait4()&lt;/code&gt;  系统函数后将进程释放）；&lt;/li&gt;
&lt;li&gt;状态码  &lt;code&gt;T&lt;/code&gt;  ：表示停止（进程收到  &lt;code&gt;SIGSTOP&lt;/code&gt;  、  &lt;code&gt;SIGSTP&lt;/code&gt;  、  &lt;code&gt;SIGTIN&lt;/code&gt;  、  &lt;code&gt;SIGTOU&lt;/code&gt;  等停止信号后停止运行）。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;&lt;span id=&#34;前台进程-amp-后台进程&#34;&gt; 前台进程 &amp;amp; 后台进程&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;默认情况下，用户创建的进程都是前台进程，前台进程从键盘读取数据，并把处理结果输出到显示器。例如运行  &lt;code&gt;top&lt;/code&gt;  命令，这就是一个一直运行的前台进程。&lt;/p&gt;
&lt;p&gt;后台进程的优点是不必等待程序运行结束，就可以输入其它命令。在需要执行的命令后面添加  &lt;code&gt;&amp;amp;&lt;/code&gt;  符号，就表示启动一个后台进程。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;amp&#34;&gt; &amp;amp;&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;启动后台进程，它的缺点是后台进程与终端相关联，一旦关闭终端，进程就自动结束了。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;cp name.csv name-copy.csv &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;nohup&#34;&gt; nohup&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;使进程不受挂断（关闭终端等动作）的影响。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nohup cp name.csv name-copy.csv&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;nohup&lt;/code&gt;  命令也可以和  &lt;code&gt;&amp;amp;&lt;/code&gt;  结合使用。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;nohup cp name.csv name-copy.csv &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;bg&#34;&gt; bg&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;使一个 “后台暂停运行” 的进程，状态改为 “后台运行”。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;bg %1 # 不加任何参数的情况下，bg命令会默认作用于最近的一个后台进程，如果添加参数则会作用于指定标号的进程&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际案例 1：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1. 执行 grep -r &amp;quot;log&amp;quot; / &amp;gt; grep_log 2&amp;gt;&amp;amp;1 命令启动一个前台进程，并且忘记添加 &amp;amp; 符号2. ctrl + z 使进程状态转为后台暂停3. 执行 bg 将命令转为后台运行&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;实际案例 2：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;前端开发时我们经常会执行 yarn start 启动项目此时我们执行 ctrl + z 先使其暂停然后执行 bg 使其转为后台运行这样当前终端就空闲出来可以干其它事情了，如果想要唤醒它就使用 fg 命令即可（后面会讲）&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;jobs&#34;&gt; jobs&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;显示当前终端后台进程状态。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@lion ~]# jobs[1]+  Stopped                 top[2]-  Running                 grep --color=auto -r &amp;quot;log&amp;quot; / &amp;gt; grep_log 2&amp;gt;&amp;amp;1 &amp;amp;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;fg&#34;&gt; fg&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;fg&lt;/code&gt;  使进程转为前台运行，用法和  &lt;code&gt;bg&lt;/code&gt;  命令类似。&lt;/p&gt;
&lt;p&gt;我们用一张图来表示前后台进程切换：&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDgnWeQnSPINsVXl1gqdgtLZQC3HBKWQDwSNsniaS2B7ib7zMp92YuWIKw/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34; style=&#34;zoom:80%;&#34;&gt;&lt;/center&gt;
&lt;p&gt;我们可以使程序在后台运行，成为后台进程，这样在当前终端中我们就可以做其他事情了，而不必等待此进程运行结束。&lt;/p&gt;
&lt;h5&gt;&lt;span id=&#34;守护进程&#34;&gt; 守护进程&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;一个运行起来的程序被称为进程。在  &lt;code&gt;Linux&lt;/code&gt;  中有些进程是特殊的，它不与任何进程关联，不论用户的身份如何，都在后台运行，这些进程的父进程是  &lt;code&gt;PID&lt;/code&gt;  为 1 的进程，  &lt;code&gt;PID&lt;/code&gt;  为 1 的进程只在系统关闭时才会被销毁。它们会在后台一直运行等待分配工作。我们将这类进程称之为守护进程  &lt;code&gt;daemon&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;守护进程的名字通常会在最后有一个  &lt;code&gt;d&lt;/code&gt;  ，表示  &lt;code&gt;daemon&lt;/code&gt;  守护的意思，例如  &lt;code&gt;systemd&lt;/code&gt;  、 &lt;code&gt;httpd&lt;/code&gt;  。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;systemd&#34;&gt; systemd&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;systemd&lt;/code&gt;  是一个  &lt;code&gt;Linux&lt;/code&gt;  系统基础组件的集合，提供了一个系统和服务管理器，运行为  &lt;code&gt;PID 1&lt;/code&gt;  并负责启动其它程序。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@lion ~]# ps -auxUSER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMANDroot         1  0.0  0.2  51648  3852 ?        Ss   Feb01   1:50 /usr/lib/systemd/systemd --switched-root --system --deserialize 22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过命令也可以看到  &lt;code&gt;PID&lt;/code&gt;  为 1 的进程就是  &lt;code&gt;systemd&lt;/code&gt;  的系统进程。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;systemd&lt;/code&gt;  常用命令（它是一组命令的集合）：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;systemctl start nginx # 启动服务systemctl stop nginx # 停止服务systemctl restart nginx # 重启服务systemctl status nginx # 查看服务状态systemctl reload nginx # 重载配置文件(不停止服务的情况)systemctl enable nginx # 开机自动启动服务systemctl disable nginx # 开机不自动启动服务systemctl is-enabled nginx # 查看服务是否开机自动启动systemctl list-unit-files --type=service # 查看各个级别下服务的启动和禁用情况&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4&gt;&lt;span id=&#34;文件压缩解压&#34;&gt; 文件压缩解压&lt;/span&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;打包：是将多个文件变成一个总的文件，它的学名叫存档、归档。&lt;/li&gt;
&lt;li&gt;压缩：是将一个大文件（通常指归档）压缩变成一个小文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我们常常使用  &lt;code&gt;tar&lt;/code&gt;  将多个文件归档为一个总的文件，称为  &lt;code&gt;archive&lt;/code&gt;  。然后用  &lt;code&gt;gzip&lt;/code&gt;  或  &lt;code&gt;bzip2&lt;/code&gt;  命令将  &lt;code&gt;archive&lt;/code&gt;  压缩为更小的文件。&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDH8FkLNWyPgLEUI27YTA0z1aUKmSgTJWvVhmqtZxNKibkwpIa94LXVtQ/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34;&gt;&lt;/center&gt;
&lt;h5&gt;&lt;span id=&#34;tar&#34;&gt; tar&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;创建一个  &lt;code&gt;tar&lt;/code&gt;  归档。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;基础用法&#34;&gt; 基础用法&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tar -cvf sort.tar sort/ # 将sort文件夹归档为sort.tartar -cvf archive.tar file1 file2 file3 # 将 file1 file2 file3 归档为archive.tar&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;常用参数&#34;&gt; 常用参数&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-cvf&lt;/code&gt;  表示  &lt;code&gt;create&lt;/code&gt; （创建）+  &lt;code&gt;verbose&lt;/code&gt; （细节）+  &lt;code&gt;file&lt;/code&gt; （文件），创建归档文件并显示操作细节；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-tf&lt;/code&gt;  显示归档里的内容，并不解开归档；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-rvf&lt;/code&gt;  追加文件到归档，  &lt;code&gt;tar -rvf archive.tar file.txt&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-xvf&lt;/code&gt;  解开归档，  &lt;code&gt;tar -xvf archive.tar&lt;/code&gt;  。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;gzip-gunzip&#34;&gt; gzip / gunzip&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;“压缩 / 解压” 归档，默认用  &lt;code&gt;gzip&lt;/code&gt;  命令，压缩后的文件后缀名为  &lt;code&gt;.tar.gz&lt;/code&gt;  。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;gzip archive.tar # 压缩gunzip archive.tar.gz # 解压&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;tar-归档-压缩&#34;&gt; tar 归档 + 压缩&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;可以用  &lt;code&gt;tar&lt;/code&gt;  命令同时完成归档和压缩的操作，就是给  &lt;code&gt;tar&lt;/code&gt;  命令多加一个选项参数，使之完成归档操作后，还是调用  &lt;code&gt;gzip&lt;/code&gt;  或  &lt;code&gt;bzip2&lt;/code&gt;  命令来完成压缩操作。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tar -zcvf archive.tar.gz archive/ # 将archive文件夹归档并压缩tar -zxvf archive.tar.gz # 将archive.tar.gz归档压缩文件解压&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;zcat-zless-zmore&#34;&gt; zcat、zless、zmore&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;之前讲过使用  &lt;code&gt;cat less more&lt;/code&gt;  可以查看文件内容，但是压缩文件的内容是不能使用这些命令进行查看的，而要使用  &lt;code&gt;zcat、zless、zmore&lt;/code&gt;  进行查看。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;zcat archive.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;zipunzip&#34;&gt; zip/unzip&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;“压缩 / 解压”  &lt;code&gt;zip&lt;/code&gt;  文件（  &lt;code&gt;zip&lt;/code&gt;  压缩文件一般来自  &lt;code&gt;windows&lt;/code&gt;  操作系统）。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;命令安装&#34;&gt; 命令安装&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; Red Hat 一族中的安装方式yum install zip yum install unzip&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;基础用法&#34;&gt; 基础用法&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;unzip archive.zip # 解压 .zip 文件unzip -l archive.zip # 不解开 .zip 文件，只看其中内容zip -r sort.zip sort/ # 将sort文件夹压缩为 sort.zip，其中-r表示递归&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4&gt;&lt;span id=&#34;编译安装软件&#34;&gt; 编译安装软件&lt;/span&gt;&lt;/h4&gt;
&lt;p&gt;之前我们学会了使用  &lt;code&gt;yum&lt;/code&gt;  命令进行软件安装，如果碰到  &lt;code&gt;yum&lt;/code&gt;  仓库中没有的软件，我们就需要会更高级的软件安装 “源码编译安装”。&lt;/p&gt;
&lt;h5&gt;&lt;span id=&#34;编译安装&#34;&gt; 编译安装&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;简单来说，编译就是将程序的源代码转换成可执行文件的过程。大多数  &lt;code&gt;Linux&lt;/code&gt;  的程序都是开放源码的，可以编译成适合我们的电脑和操纵系统属性的可执行文件。&lt;/p&gt;
&lt;p&gt;基本步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;下载源代码&lt;/li&gt;
&lt;li&gt;解压压缩包&lt;/li&gt;
&lt;li&gt;配置&lt;/li&gt;
&lt;li&gt;编译&lt;/li&gt;
&lt;li&gt;安装&lt;/li&gt;
&lt;/ol&gt;
&lt;h6&gt;&lt;span id=&#34;实际案例&#34;&gt; 实际案例&lt;/span&gt;&lt;/h6&gt;
&lt;h6&gt;&lt;span id=&#34;1-下载&#34;&gt; 1、下载&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;我们来编译安装  &lt;code&gt;htop&lt;/code&gt;  软件，首先在它的官网下载源码：&lt;strong&gt;&lt;a href=&#34;http://bintray.com/htop/source%E2%80%A6&#34;&gt;bintray.com/htop/source…&lt;/a&gt;&lt;/strong&gt;[1]&lt;/p&gt;
&lt;p&gt;下载好的源码在本机电脑上使用如下命令同步到服务器上：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;scp 文件名 用户名@服务器ip:目标路径scp ~/Desktop/htop-3.0.0.tar.gz root@121.42.11.34:.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;也可以使用  &lt;code&gt;wegt&lt;/code&gt;  进行下载：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wegt+下载地址wegt https://bintray.com/htop/source/download_file?file_path=htop-3.0.0.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;2-解压文件&#34;&gt; 2、解压文件&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;tar -zxvf htop-3.0.0.tar.gz # 解压cd htop-3.0.0 # 进入目录&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;3-配置&#34;&gt; 3、配置&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;执行  &lt;code&gt;./configure&lt;/code&gt;  ，它会分析你的电脑去确认编译所需的工具是否都已经安装了。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;4-编译&#34;&gt; 4、编译&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;执行  &lt;code&gt;make&lt;/code&gt;  命令&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;5-安装&#34;&gt; 5、安装&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;执行  &lt;code&gt;make install&lt;/code&gt;  命令，安装完成后执行  &lt;code&gt;ls /usr/local/bin/&lt;/code&gt;  查看是否有  &lt;code&gt;htop&lt;/code&gt;  命令。如果有就可以执行  &lt;code&gt;htop&lt;/code&gt;  命令查看系统进程了。&lt;/p&gt;
&lt;h4&gt;&lt;span id=&#34;网络&#34;&gt; 网络&lt;/span&gt;&lt;/h4&gt;
&lt;h5&gt;&lt;span id=&#34;ifconfig&#34;&gt; ifconfig&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;查看  &lt;code&gt;ip&lt;/code&gt;  网络相关信息，如果命令不存在的话， 执行命令  &lt;code&gt;yum install net-tools&lt;/code&gt;  安装。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@lion ~]# ifconfigeth0: flags=4163&amp;lt;UP,BROADCAST,RUNNING,MULTICAST&amp;gt;  mtu 1500        inet 172.31.24.78  netmask 255.255.240.0  broadcast 172.31.31.255        ether 00:16:3e:04:9c:cd  txqueuelen 1000  (Ethernet)        RX packets 1592318  bytes 183722250 (175.2 MiB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 1539361  bytes 154044090 (146.9 MiB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0lo: flags=73&amp;lt;UP,LOOPBACK,RUNNING&amp;gt;  mtu 65536        inet 127.0.0.1  netmask 255.0.0.0        loop  txqueuelen 1000  (Local Loopback)        RX packets 0  bytes 0 (0.0 B)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 0  bytes 0 (0.0 B)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参数解析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;eth0&lt;/code&gt;  对应有线连接（对应你的有线网卡），就是用网线来连接的上网。 &lt;code&gt;eth&lt;/code&gt;  是  &lt;code&gt;Ethernet&lt;/code&gt;  的缩写，表示 “以太网”。有些电脑可能同时有好几条网线连着，例如服务器，那么除了  &lt;code&gt;eht0&lt;/code&gt;  ，你还会看到  &lt;code&gt;eth1&lt;/code&gt;  、  &lt;code&gt;eth2&lt;/code&gt;  等。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;lo&lt;/code&gt;  表示本地回环（  &lt;code&gt;Local Loopback&lt;/code&gt;  的缩写，对应一个虚拟网卡）可以看到它的  &lt;code&gt;ip&lt;/code&gt;  地址是  &lt;code&gt;127.0.0.1&lt;/code&gt;  。每台电脑都应该有这个接口，因为它对应着 “连向自己的链接”。这也是被称之为 “本地回环” 的原因。所有经由这个接口发送的东西都会回到你自己的电脑。看起来好像并没有什么用，但有时为了某些缘故，我们需要连接自己。例如用来测试一个网络程序，但又不想让局域网或外网的用户查看，只能在此台主机上运行和查看所有的网络接口。例如在我们启动一个前端工程时，在浏览器输入  &lt;code&gt;127.0.0.1:3000&lt;/code&gt;  启动项目就能查看到自己的  &lt;code&gt;web&lt;/code&gt;  网站，并且它只有你能看到。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;wlan0&lt;/code&gt;  表示无线局域网（上面案例并未展示）。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;host&#34;&gt; host&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;ip&lt;/code&gt;  地址和主机名的互相转换。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;软件安装&#34;&gt; 软件安装&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;yum install bind-utils&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;基础用法&#34;&gt; 基础用法&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;[root@lion ~]# host github.combaidu.com has address 13.229.188.59 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[root@lion ~]# host 13.229.188.5959.188.229.13.in-addr.arpa domain name pointer ec2-13-229-188-59.ap-southeast-1.compute.amazonaws.com.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;ssh-连接远程服务器&#34;&gt; ssh 连接远程服务器&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;通过非对称加密以及对称加密的方式（同  &lt;code&gt;HTTPS&lt;/code&gt;  安全连接原理相似）连接到远端服务器。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;ssh 用户@ip:port1、ssh root@172.20.10.1:22 # 端口号可以省略不写，默认是22端口2、输入连接密码后就可以操作远端服务器了&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;配置-ssh&#34;&gt; 配置 ssh&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;config&lt;/code&gt;  文件可以配置  &lt;code&gt;ssh&lt;/code&gt;  ，方便批量管理多个  &lt;code&gt;ssh&lt;/code&gt;  连接。&lt;/p&gt;
&lt;p&gt;配置文件分为以下几种：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全局  &lt;code&gt;ssh&lt;/code&gt;  服务端的配置： &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;全局  &lt;code&gt;ssh&lt;/code&gt;  客户端的配置： &lt;code&gt;/etc/ssh/ssh_config&lt;/code&gt; （很少修改）；&lt;/li&gt;
&lt;li&gt;当前用户  &lt;code&gt;ssh&lt;/code&gt;  客户端的配置： &lt;code&gt;~/.ssh/config&lt;/code&gt;  。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【服务端  &lt;code&gt;config&lt;/code&gt;  文件的常用配置参数】&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;服务端 config 参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Port&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;sshd 服务端口号（默认是 22）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;PermitRootLogin&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否允许以 root 用户身份登录（默认是可以）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;PasswordAuthentication&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否允许密码验证登录（默认是可以）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;PubkeyAuthentication&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否允许公钥验证登录（默认是可以）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;PermitEmptyPasswords&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;是否允许空密码登录（不安全，默认不可以）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;[注意] 修改完服务端配置文件需要重启服务  &lt;code&gt;systemctl restart sshd&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;【客户端  &lt;code&gt;config&lt;/code&gt;  文件的常用配置参数】&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;客户端 config 参数&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Host&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;别名&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;HostName&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;远程主机名（或 IP 地址）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;Port&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;连接到远程主机的端口&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;User&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;用户名&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;配置当前用户的  &lt;code&gt;config&lt;/code&gt;  ：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 创建configvim ~/.ssh/config&lt;span class=&#34;comment&#34;&gt;# 填写一下内容Host lion # 别名 HostName 172.x.x.x # ip 地址  Port 22 # 端口  User root # 用户&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样配置完成后，下次登录时，可以这样登录  &lt;code&gt;ssh lion&lt;/code&gt;  会自动识别为  &lt;code&gt;root&lt;/code&gt;  用户。&lt;/p&gt;
&lt;p&gt;[注意] 这段配置不是在服务器上，而是你自己的机器上，它仅仅是设置了一个别名。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;免密登录&#34;&gt; 免密登录&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;ssh&lt;/code&gt;  登录分两种，一种是基于口令（账号密码），另外一种是基于密钥的方式。&lt;/p&gt;
&lt;p&gt;基于口令，就是每次登录输入账号和密码，显然这样做是比较麻烦的，今天主要学习如何基于密钥实现免密登录。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（1）基于密钥验证原理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;客户机生成密钥对（公钥和私钥），把公钥上传到服务器，每次登录会与服务器的公钥进行比较，这种验证登录的方法更加安全，也被称为 “公钥验证登录”。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）具体实现步骤&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1、在客户机中生成密钥对（公钥和私钥）  &lt;code&gt;ssh-keygen&lt;/code&gt; （默认使用 RSA 非对称加密算法）&lt;/p&gt;
&lt;p&gt;运行完  &lt;code&gt;ssh-keygen&lt;/code&gt;  会在  &lt;code&gt;~/.ssh/&lt;/code&gt;  目录下，生成两个文件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;id_rsa.pub&lt;/code&gt;  ：公钥&lt;/li&gt;
&lt;li&gt;&lt;code&gt;id_rsa&lt;/code&gt;  ：私钥&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2、把客户机的公钥传送到服务&lt;/p&gt;
&lt;p&gt;执行  &lt;code&gt;ssh-copy-id root@172.x.x.x&lt;/code&gt; （ &lt;code&gt;ssh-copy-id&lt;/code&gt;  它会把客户机的公钥追加到服务器  &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;  的文件中）。&lt;/p&gt;
&lt;p&gt;执行完成后，运行  &lt;code&gt;ssh root@172.x.x.x&lt;/code&gt;  就可以实现免密登录服务器了。&lt;/p&gt;
&lt;p&gt;配合上面设置好的别名，直接执行  &lt;code&gt;ssh lion&lt;/code&gt;  就可以登录，是不是非常方便。&lt;/p&gt;
&lt;h5&gt;&lt;span id=&#34;wget&#34;&gt; wget&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;可以使我们直接从终端控制台下载文件，只需要给出文件的 HTTP 或 FTP 地址。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;wget [参数][URL地址]wget http://www.minjieren.com/wordpress-3.1-zh_CN.zip&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;wget&lt;/code&gt;  非常稳定，如果是由于网络原因下载失败，  &lt;code&gt;wget&lt;/code&gt;  会不断尝试，直到整个文件下载完毕。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;常用参数&#34;&gt; 常用参数&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;  继续中断的下载。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;span id=&#34;备份&#34;&gt; 备份&lt;/span&gt;&lt;/h4&gt;
&lt;h5&gt;&lt;span id=&#34;scp&#34;&gt; scp&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;它是  &lt;code&gt;Secure Copy&lt;/code&gt;  的缩写，表示安全拷贝。 &lt;code&gt;scp&lt;/code&gt;  可以使我们通过网络，把文件从一台电脑拷贝到另一台电脑。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;scp&lt;/code&gt;  是基于  &lt;code&gt;ssh&lt;/code&gt;  的原理来运作的，  &lt;code&gt;ssh&lt;/code&gt;  会在两台通过网络连接的电脑之间创建一条安全通信的管道，  &lt;code&gt;scp&lt;/code&gt;  就利用这条管道安全地拷贝文件。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;scp source_file destination_file # source_file 表示源文件，destination_file 表示目标文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其中  &lt;code&gt;source_file&lt;/code&gt;  和  &lt;code&gt;destination_file&lt;/code&gt;  都可以这样表示： &lt;code&gt;user@ip:file_name&lt;/code&gt;  ，  &lt;code&gt;user&lt;/code&gt;  是登录名，  &lt;code&gt;ip&lt;/code&gt;  是域名或  &lt;code&gt;ip&lt;/code&gt;  地址。 &lt;code&gt;file_name&lt;/code&gt;  是文件路径。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;scp file.txt root@192.168.1.5:/root # 表示把我的电脑中当前文件夹下的 file.txt 文件拷贝到远程电脑&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;scp root@192.168.1.5:/root/file.txt file.txt # 表示把远程电脑上的 file.txt 文件拷贝到本机&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;rsync&#34;&gt; rsync&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;rsync&lt;/code&gt;  命令主要用于远程同步文件。它可以同步两个目录，不管它们是否处于同一台电脑。它应该是最常用于 “增量备份” 的命令了。它就是智能版的  &lt;code&gt;scp&lt;/code&gt;  命令。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;软件安装&#34;&gt; 软件安装&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;yum install rsync&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;基础用法&#34;&gt; 基础用法&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;rsync -arv Images/ backups/ # 将Images 目录下的所有文件备份到 backups 目录下rsync -arv Images/ root@192.x.x.x:backups/ # 同步到服务器的backups目录下&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;常用参数&#34;&gt; 常用参数&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;  保留文件的所有信息，包括权限，修改日期等；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;  递归调用，表示子目录的所有文件也都包括；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;  冗余模式，输出详细操作信息。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;默认地，  &lt;code&gt;rsync&lt;/code&gt;  在同步时并不会删除目标目录的文件，例如你在源目录中删除一个文件，但是用  &lt;code&gt;rsync&lt;/code&gt;  同步时，它并不会删除同步目录中的相同文件。如果向删除也可以这么做： &lt;code&gt;rsync -arv --delete Images/ backups/&lt;/code&gt;  。&lt;/p&gt;
&lt;h4&gt;&lt;span id=&#34;系统&#34;&gt; 系统&lt;/span&gt;&lt;/h4&gt;
&lt;h5&gt;&lt;span id=&#34;halt&#34;&gt; halt&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;关闭系统，需要  &lt;code&gt;root&lt;/code&gt;  身份。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;halt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;reboot&#34;&gt; reboot&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;重启系统，需要  &lt;code&gt;root&lt;/code&gt;  身份。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;reboot&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h5&gt;&lt;span id=&#34;poweroff&#34;&gt; poweroff&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;直接运行即可关机，不需要  &lt;code&gt;root&lt;/code&gt;  身份。&lt;/p&gt;
&lt;h4&gt;&lt;span id=&#34;vim-编辑器&#34;&gt; Vim 编辑器&lt;/span&gt;&lt;/h4&gt;
&lt;h5&gt;&lt;span id=&#34;vim-是什么&#34;&gt; Vim 是什么？&lt;/span&gt;&lt;/h5&gt;
&lt;p&gt;&lt;code&gt;Vim&lt;/code&gt;  是从  &lt;code&gt;vi&lt;/code&gt;  发展出来的一个文本编辑器。其代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。和  &lt;code&gt;Emacs&lt;/code&gt;  并列成为类  &lt;code&gt;Unix&lt;/code&gt;  系统用户最喜欢的编辑器。&lt;/p&gt;
&lt;h5&gt;&lt;span id=&#34;vim-常用模式&#34;&gt; Vim 常用模式&lt;/span&gt;&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;交互模式&lt;/li&gt;
&lt;li&gt;插入模式&lt;/li&gt;
&lt;li&gt;命令模式&lt;/li&gt;
&lt;li&gt;可视模式&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;交互模式&#34;&gt; 交互模式&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;也成为正常模式，这是  &lt;code&gt;Vim&lt;/code&gt;  的默认模式，每次运行  &lt;code&gt;Vim&lt;/code&gt;  程序的时候，就会进入这个模式。&lt;/p&gt;
&lt;p&gt;例如执行  &lt;code&gt;vim name.txt&lt;/code&gt;  则会进入交互模式。&lt;/p&gt;
&lt;p&gt;交互模式特征：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在这个模式下，你不能输入文本；&lt;/li&gt;
&lt;li&gt;它可以让我们在文本间移动，删除一行文本，复制黏贴文本，跳转到指定行，撤销操作，等等。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;插入模式&#34;&gt; 插入模式&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;这个模式是我们熟悉的文本编辑器的模式，就是可以输入任何你想输入的内容。进入这个模式有几种方法，最常用的方法是按字母键  &lt;code&gt;i&lt;/code&gt;  （  &lt;code&gt;i、I、a、A、o、O&lt;/code&gt;  都可以进入插入模式，只是所处的位置不同），退出这种模式，只需要按下  &lt;code&gt;Esc&lt;/code&gt;  键。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;i, I&lt;/code&gt;  进入输入模式  &lt;code&gt;Insert mode&lt;/code&gt;  ： &lt;code&gt;i&lt;/code&gt;  为 “从目前光标所在处输入”，  &lt;code&gt;I&lt;/code&gt;  为 “在目前所在行的第一个非空格符处开始输入”；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;a, A&lt;/code&gt;  进入输入模式  &lt;code&gt;Insert mode&lt;/code&gt;  ： &lt;code&gt;a&lt;/code&gt;  为 “从目前光标所在的下一个字符处开始输入”，  &lt;code&gt;A&lt;/code&gt;  为 “从光标所在行的最后一个字符处开始输入”；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;o, O&lt;/code&gt;  进入输入模式  &lt;code&gt;Insert mode&lt;/code&gt;  ： &lt;code&gt;o&lt;/code&gt;  为 “在目前光标所在的下一行处输入新的一行”； &lt;code&gt;O&lt;/code&gt;  为在目前光标所在处的上一行输入新的一行。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;命令模式&#34;&gt; 命令模式&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;命令模式也称为底线命令模式，这个模式下可以运行一些命令例如 “退出”，“保存”，等动作。&lt;/p&gt;
&lt;p&gt;也可以用这个模式来激活一些  &lt;code&gt;Vim&lt;/code&gt;  配置，例如语法高亮，显示行号，等。甚至还可以发送一些命令给终端命令行，例如  &lt;code&gt;ls、cp&lt;/code&gt;  。&lt;/p&gt;
&lt;p&gt;为了进入命令模式，首先要进入交互模式，再按下冒号键。&lt;/p&gt;
&lt;p&gt;用一张图表示三种模式如何切换：&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://mmbiz.qpic.cn/mmbiz/9aPYe0E1fb12HhSLxYibr9w8y4GKAfhTDE2faicVK1YIhSu16FAo9aEgGbCIbhlYTZiaABdeciaNEwxJEU9W7ln6WA/640?wx_fmt=jpeg&amp;tp=webp&amp;wxfrom=5&amp;wx_lazy=1&amp;wx_co=1&#34; alt=&#34;图片&#34; style=&#34;zoom:80%;&#34;&gt;&lt;/center&gt;
&lt;h5&gt;&lt;span id=&#34;基本操作&#34;&gt; 基本操作&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;打开-vim&#34;&gt; 打开 Vim&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;在终端命令行中输入  &lt;code&gt;vim&lt;/code&gt;  回车后  &lt;code&gt;Vim&lt;/code&gt;  就会被运行起来，也可以用  &lt;code&gt;Vim&lt;/code&gt;  来打开一个文件，只需要在  &lt;code&gt;vim&lt;/code&gt;  后面再加文件名。如  &lt;code&gt;vim file.name&lt;/code&gt;  ，如果文件不存在，那么会被创建。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;插入&#34;&gt; 插入&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;进入文件之后，此时处于交互模式，可以通过输入  &lt;code&gt;i&lt;/code&gt;  进入插入模式。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;移动&#34;&gt; 移动&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;在  &lt;code&gt;Vim&lt;/code&gt;  的交互模式下，我们可以在文本中移动光标。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;h&lt;/code&gt;  向左移动一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;j&lt;/code&gt;  向下移动一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;k&lt;/code&gt;  向上移动一个字符&lt;/li&gt;
&lt;li&gt;&lt;code&gt;i&lt;/code&gt;  向右移动一个字符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当然也可以使用四个方向键进行移动，效果是一样的。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;跳至行首和行末&#34;&gt; 跳至行首和行末&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;行首：在交互模式下，为了将光标定位到一行的开始位置，只需要按下数字键  &lt;code&gt;0&lt;/code&gt;  即可，键盘上的  &lt;code&gt;Home&lt;/code&gt;  键也有相同效果。&lt;/li&gt;
&lt;li&gt;行末：在交互模式下，为了将光标定位到一行的末尾，只需要按下美元符号键  &lt;code&gt;$&lt;/code&gt;  即可，键盘上的  &lt;code&gt;End&lt;/code&gt;  键也有相同效果。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;按单词移动&#34;&gt; 按单词移动&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;在交互模式下，按字母键  &lt;code&gt;w&lt;/code&gt;  可以一个单词一个单词的移动。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;退出文件&#34;&gt; 退出文件&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;在交互模式下，按下冒号键  &lt;code&gt;:&lt;/code&gt;  进入命令模式，再按下  &lt;code&gt;q&lt;/code&gt;  键，就可以退出了。&lt;/p&gt;
&lt;p&gt;如果在退出之前又修改了文件，就直接想用  &lt;code&gt;:q&lt;/code&gt;  退出  &lt;code&gt;Vim&lt;/code&gt;  ，那么  &lt;code&gt;Vim&lt;/code&gt;  会显示一个红字标明错误信息。此时我们有两个选择：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;保存并退出  &lt;code&gt;:wq&lt;/code&gt;  或  &lt;code&gt;:x&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;不保存且退出  &lt;code&gt;:q!&lt;/code&gt;  。&lt;/li&gt;
&lt;/ol&gt;
&lt;h5&gt;&lt;span id=&#34;标准操作&#34;&gt; 标准操作&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;删除字符&#34;&gt; 删除字符&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;在交互模式下，将光标定位到一个你想要删除的字符上，按下字母键  &lt;code&gt;x&lt;/code&gt;  你会发现这个字符被删除了。&lt;/p&gt;
&lt;p&gt;也可以一次性删除多个字符，只需要在按  &lt;code&gt;x&lt;/code&gt;  键之前输入数字即可。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;删除剪切单词行&#34;&gt; 删除（剪切）单词，行&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;删除一行：连按两次  &lt;code&gt;d&lt;/code&gt;  来删除光标所在的那一行。&lt;/li&gt;
&lt;li&gt;删除多行：例如先输入数字  &lt;code&gt;2&lt;/code&gt;  ，再按下  &lt;code&gt;dd&lt;/code&gt;  ，就会删除从光标所在行开始的两行。&lt;/li&gt;
&lt;li&gt;删除一个单词：将光标置于一个单词的首字母处，然后按下  &lt;code&gt;dw&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;删除多个单词：例如先按数字键  &lt;code&gt;2&lt;/code&gt;  再按  &lt;code&gt;dw&lt;/code&gt;  就可以删除两个单词了。&lt;/li&gt;
&lt;li&gt;从光标所在位置删除至行首： &lt;code&gt;d0&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;从光标所在位置删除至行末： &lt;code&gt;d$&lt;/code&gt;  。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;复制单词行&#34;&gt; 复制单词，行&lt;/span&gt;&lt;/h6&gt;
&lt;ul&gt;
&lt;li&gt;复制行：按两次  &lt;code&gt;y&lt;/code&gt;  会把光标所在行复制到内存中，和  &lt;code&gt;dd&lt;/code&gt;  类似，  &lt;code&gt;dd&lt;/code&gt;  用于 “剪切” 光标所在行。&lt;/li&gt;
&lt;li&gt;复制单词： &lt;code&gt;yw&lt;/code&gt;  会复制一个单词。&lt;/li&gt;
&lt;li&gt;复制到行末： &lt;code&gt;y$&lt;/code&gt;  是复制从光标所在处到行末的所有字符。&lt;/li&gt;
&lt;li&gt;复制到行首： &lt;code&gt;y0&lt;/code&gt;  是复制光标所在处到行首的所有字符。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;粘贴&#34;&gt; 粘贴&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;如果之前用  &lt;code&gt;dd&lt;/code&gt;  或者  &lt;code&gt;yy&lt;/code&gt;  剪切复制过来的，可以使用  &lt;code&gt;p&lt;/code&gt;  来粘贴。同样也可以使用  &lt;code&gt;数字+p&lt;/code&gt;  来表示复制多次。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;替换一个字符&#34;&gt; 替换一个字符&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;在交互模式下，将光标置于想要替换的字符上。按下  &lt;code&gt;r&lt;/code&gt;  键，接着输入你要替换的字符即可。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;撤销操作&#34;&gt; 撤销操作&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;如果要撤销最近的修改，只需要按下  &lt;code&gt;u&lt;/code&gt;  键，如果想要撤销最近四次修改，可以按下 4，再按下  &lt;code&gt;u&lt;/code&gt;  。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;重做&#34;&gt; 重做&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;取消撤销，也就是重做之前的修改使用  &lt;code&gt;ctrl + r&lt;/code&gt;  。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;跳转到指定行&#34;&gt; 跳转到指定行&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;Vim&lt;/code&gt;  编辑的文件中，每一行都有一个行号，行号从 1 开始，逐一递增。&lt;/p&gt;
&lt;p&gt;行号默认是不显示，如果需要它显示的话，可以进入命令模式，然后输入  &lt;code&gt;set nu&lt;/code&gt;  ，如果要隐藏行号的话，使用  &lt;code&gt;set nonu&lt;/code&gt;  。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;跳转到指定行： &lt;code&gt;数字+gg&lt;/code&gt;  ，例如  &lt;code&gt;7gg&lt;/code&gt;  ，表示跳转到第 7 行。&lt;/li&gt;
&lt;li&gt;要跳转到最后一行，按下  &lt;code&gt;G&lt;/code&gt;  。&lt;/li&gt;
&lt;li&gt;要跳转到第一行，按下  &lt;code&gt;gg&lt;/code&gt;  。&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;高级操作&#34;&gt; 高级操作&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;查找&#34;&gt; 查找&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;处于交互模式下，按下  &lt;code&gt;/&lt;/code&gt;  键，那么就进入查找模式，输入你要查找的字符串，然后按下回车。光标就会跳转到文件中下一个查找到的匹配处。如果字符串不存在，那么会显示  &lt;code&gt;&amp;quot;pattern not found&amp;quot;&lt;/code&gt;  。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt;  跳转到下一个匹配项；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;N&lt;/code&gt;  跳转到上一个匹配项。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;[注意] 用斜杠来进行的查找是从当前光标处开始向文件尾搜索，如果你要从当前光标处开始，向文件头搜索则使用  &lt;code&gt;?&lt;/code&gt;  ，当然也可以先按下  &lt;code&gt;gg&lt;/code&gt;  跳转到第一行在进行全文搜索。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;查找并替换&#34;&gt; 查找并替换&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;替换光标所在行第一个匹配的字符串：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 语法:s/旧字符串/新字符串&lt;span class=&#34;comment&#34;&gt;# 实例:s/one/two&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;替换光标所在行所有旧字符串为新字符串：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 语法:s/旧字符串/新字符串/g&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;替换第几行到第几行中所有字符串：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 语法:n,m s/旧字符串/新字符串/g&lt;span class=&#34;comment&#34;&gt;# 实例:2,4 s/one/two/g&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最常用的就是全文替换了：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;#&lt;/span&gt;&lt;span class=&#34;bash&#34;&gt; 语法:%s/旧字符串/新字符串/g&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;合并文件&#34;&gt; 合并文件&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;可以用冒号  &lt;code&gt;+r&lt;/code&gt;  (  &lt;code&gt;:r&lt;/code&gt;  ) 实现在光标处插入一个文件的内容。&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;:r filename # 可以用Tab键来自动补全另外一个文件的路径&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;分屏&#34;&gt; 分屏&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;&lt;code&gt;Vim&lt;/code&gt;  有一个特别便捷的功能那就是分屏，可以同时打开好几个文件，分屏之后，屏幕每一块被称为一个  &lt;code&gt;viewport&lt;/code&gt;  ，表示 “视口”。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;横向分屏  &lt;code&gt;:sp 文件名&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;垂直分屏  &lt;code&gt;:vsp 文件名&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;分屏模式下的快捷键&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Ctrl + w&lt;/code&gt;  再加  &lt;code&gt;Ctrl + w&lt;/code&gt;  ，表示从一个  &lt;code&gt;viewport&lt;/code&gt;  移动光标到另外一个  &lt;code&gt;viewport&lt;/code&gt;  ；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + w&lt;/code&gt;  再加 “方向键”，就可以移动到这个方向所处的下一个视口了；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + w&lt;/code&gt;  再加  &lt;code&gt;+&lt;/code&gt;  号，表示扩大当前视口；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + w&lt;/code&gt;  再加  &lt;code&gt;-&lt;/code&gt;  号，表示缩小当前视口；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + w&lt;/code&gt;  再加  &lt;code&gt;=&lt;/code&gt;  号，表示平均当前视口；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + w&lt;/code&gt;  再加  &lt;code&gt;r&lt;/code&gt;  键，会反向调换视口位置；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + w&lt;/code&gt;  再加  &lt;code&gt;q&lt;/code&gt;  键，会关闭当前视口；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + w&lt;/code&gt;  再加  &lt;code&gt;o&lt;/code&gt;  键，会关闭除当前视口以外的所有视口；&lt;/li&gt;
&lt;/ul&gt;
&lt;h6&gt;&lt;span id=&#34;运行外部命令&#34;&gt; 运行外部命令  &lt;code&gt;:!&lt;/code&gt;&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;在  &lt;code&gt;Vim&lt;/code&gt;  中可以运行一些终端命令，只要先输入  &lt;code&gt;:!&lt;/code&gt;  ，然后接命令名称。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;:!ls # 在Vim中打开的文件所在的目录运行ls命令&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h6&gt;&lt;span id=&#34;可视模式&#34;&gt; 可视模式&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;前面只讲了  &lt;code&gt;Vim&lt;/code&gt;  的三种模式，其实还有一种模式叫做可视模式。&lt;/p&gt;
&lt;p&gt;进入它的三种方式（都是从交互模式开始）：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;v&lt;/code&gt;  字符可视模式，进入后配合方向键选中字符后，然后再按  &lt;code&gt;d&lt;/code&gt;  键可以删除选中。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;V&lt;/code&gt;  行可视模式，进入后光标所在行默认被选中，然后再按  &lt;code&gt;d&lt;/code&gt;  键可以删除所在行。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Ctrl + v&lt;/code&gt;  块可视模式，它是可视模式最有用的功能了，配合  &lt;code&gt;d&lt;/code&gt;  和  &lt;code&gt;I&lt;/code&gt;  键可以实现删除选中的内容和插入内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时选中多行，并在选中行头部插入内容的具体操作步骤：&lt;/p&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1. ctrl + v 进入块可视模式&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2. 使用方向键进行选中（上下左右）假设选中5行&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3. 输入 I 键进行多行同时插入操作&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4. 插入完成后连续按两下 esc 键，实现多行同时插入相同字符&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;进入可视模式之后的操作键：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;d&lt;/code&gt;  键，表示删除选中；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt;  键，表示在选中之前插入；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;u&lt;/code&gt;  键，表示选中变为小写；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;U&lt;/code&gt;  键，表示选中变为大写；&lt;/li&gt;
&lt;/ul&gt;
&lt;h5&gt;&lt;span id=&#34;vim-配置&#34;&gt; Vim 配置&lt;/span&gt;&lt;/h5&gt;
&lt;h6&gt;&lt;span id=&#34;选项参数&#34;&gt; 选项参数&lt;/span&gt;&lt;/h6&gt;
&lt;p&gt;在  &lt;code&gt;Vim&lt;/code&gt;  被启动后，可以运行一些指令来激活一些选项参数，但是这些选项参数的配置在退出  &lt;code&gt;Vim&lt;/code&gt;  时会被忘记，例如前面讲解的激活行号。如果希望所在的配置是永久性的，那么需要在家目录（  &lt;code&gt;cd ~&lt;/code&gt;  ）创建一个  &lt;code&gt;Vim&lt;/code&gt;  的配置文件  &lt;code&gt;.vimrc&lt;/code&gt;  。&lt;/p&gt;
&lt;h6&gt;&lt;span id=&#34;vimrc&#34;&gt; .vimrc&lt;/span&gt;&lt;/h6&gt;
&lt;figure class=&#34;highlight shell&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;set number &amp;quot; 显示行号&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;syntax on &amp;quot; 激活语法高亮&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set showcmd &amp;quot; 实时看到输入的命令&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set ignorecase &amp;quot; 搜索时不区分大小写&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;set mouse=a &amp;quot; 激活鼠标，用鼠标选中时相当于进入可视模式&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;Vim&lt;/code&gt;  配置非常丰富，我们可以通过个性化配置把  &lt;code&gt;Vim&lt;/code&gt;  打造成属于自己的  &lt;code&gt;IDE&lt;/code&gt;  等等。在  &lt;code&gt;github&lt;/code&gt;  上也可以搜索到一些强大的  &lt;code&gt;Vim&lt;/code&gt;  配置文件。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
