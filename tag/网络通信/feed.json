{
    "version": "https://jsonfeed.org/version/1",
    "title": "且听风吟，御剑于心！ • All posts by \"网络通信\" tag",
    "description": "",
    "home_page_url": "https://leezhao415.github.io",
    "items": [
        {
            "id": "https://leezhao415.github.io/2021/04/19/URL%E5%8F%8AHTTP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/",
            "url": "https://leezhao415.github.io/2021/04/19/URL%E5%8F%8AHTTP%E5%8D%8F%E8%AE%AE%E8%AF%A6%E8%A7%A3/",
            "title": "URL及HTTP协议详解",
            "date_published": "2021-04-19T12:25:01.000Z",
            "content_html": "<meta name=\"referrer\" content=\"no-referrer\">\n<hr>\n<p><strong>文章目录</strong></p>\n<!-- toc -->\n<ul>\n<li><a href=\"#1-url\">1 URL</a></li>\n<li><a href=\"#2-http%E5%8D%8F%E8%AE%AE\">2 HTTP 协议</a></li>\n<li><a href=\"#3-http%E6%8A%A5%E6%96%87\">3 HTTP 报文</a></li>\n<li><a href=\"#4-http%E5%8D%8F%E8%AE%AE%E9%80%9A%E4%BF%A1\">4 HTTP 协议通信</a></li>\n</ul>\n<!-- tocstop -->\n<hr>\n<h3><span id=\"1-url\"> 1 URL</span></h3>\n<p><strong>统一资源定位符</strong>，(Uniform Resoure Locator) 通俗理解就是网络资源地址，通过 URL 能够找到对应的资源数据。</p>\n<p><strong>URL 地址</strong>：<a href=\"https://www.baidu.com/10/E178J2O489FH.html?page=1&amp;count=10\">https://www.baidu.com/10/E178J2O489FH.html?page=1&amp;count=10</a></p>\n<p>​               &lt;协议部分 +      域名       +           资源路径          +              查询参数&gt;</p>\n<ul>\n<li>\n<p><strong>协议部分</strong>: https://、http://、ftp://</p>\n</li>\n<li>\n<p><strong>域名</strong>：IP 地址的别名，它是用点进行分割使用英文字母和数字组成的名字，使用域名目的就是方便的记住某台主机 IP 地址。</p>\n</li>\n<li>\n<p><strong>参数说明：</strong>? 后面的 page 表示第一个参数，后面的参数都使用 &amp; 进行连接</p>\n</li>\n</ul>\n<h3><span id=\"2-http-协议\"> 2 HTTP 协议</span></h3>\n<ul>\n<li>\n<p>HTTP 协议的全称是 (HyperText Transfer Protocol)，<strong>超文本传输协议</strong>。</p>\n</li>\n<li>\n<p>超文本是指<strong>在文本数据的基础上还包括非文本数据</strong>，非文本数据有<strong>图片</strong>、<strong>音乐</strong>、<strong>视频</strong>等，而这些非文本数据会使用<strong>链接</strong>的方式进行加载显示，通俗来说超文本就是<strong>带有链接的文本数据</strong>也就是我们常说的<strong>网页数据</strong>。</p>\n<blockquote>\n<p>HTTP 协议的制作者是蒂姆・伯纳斯 - 李，1991 年设计出来的，HTTP 协议设计之前目的是传输网页数据的，现在允许传输任意类型的数据。</p>\n</blockquote>\n</li>\n<li>\n<p>传输 HTTP 协议格式的数据是基于 TCP 传输协议的，发送数据之前需要先建立连接。</p>\n</li>\n<li>\n<p><strong>TCP 传输协议</strong>是用来保证网络中传输的数据的安全性的，HTTP 协议是用来规定这些数据的具体格式的。</p>\n</li>\n<li>\n<p>HTTP 协议规定的数据格式是<strong>浏览器和 Web 服务器通信数据的格式</strong>，也就是说浏览器和 Web 服务器通信需要使用 HTTP 协议。</p>\n</li>\n</ul>\n<center><img src=\"https://img-blog.csdnimg.cn/20210412122210706.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" style=\"zoom:50%;\"></center>\n<h3><span id=\"3-http-报文\"> 3 HTTP 报文</span></h3>\n<ul>\n<li>\n<p><strong>HTTP 请求报文</strong></p>\n<ul>\n<li>\n<p><strong>GET</strong> 方式的请求报文：获取 Web 服务器数据</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---- 请求行 ----</span><br><span class=\"line\">GET /a/b/c HTTP/1.1  # GET请求方式 请求资源路径 HTTP协议版本</span><br><span class=\"line\">---- 请求头 -----</span><br><span class=\"line\">Host: www.itcast.cn  # 服务器的主机地址和端口号,默认是80</span><br><span class=\"line\">Connection: keep-alive # 和服务端保持长连接</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1 # 让浏览器升级不安全请求，使用https请求</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36  # 用户代理，也就是客户端的名称</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8 # 可接受的数据类型</span><br><span class=\"line\">Accept-Encoding: gzip, deflate # 可接受的压缩格式</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9 #可接受的语言</span><br><span class=\"line\">Cookie: pgv_pvi=1246921728; # 登录用户的身份标识</span><br><span class=\"line\">---- 空行 ----</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：每项数据之间使用:<strong>\\r\\n</strong></p>\n</blockquote>\n</li>\n<li>\n<p><strong>POST</strong> 方式的请求报文：向 Web 服务器提交数据</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---- 请求行 ----</span><br><span class=\"line\">POST /xmweb?host=mail.itcast.cn&amp;_t=1542884567319 HTTP/1.1 # POST请求方式 请求资源路径 HTTP协议版本</span><br><span class=\"line\">---- 请求头 ----</span><br><span class=\"line\">Host: mail.itcast.cn # 服务器的主机地址和端口号,默认是80</span><br><span class=\"line\">Connection: keep-alive # 和服务端保持长连接</span><br><span class=\"line\">Content-Type: application/x-www-form-urlencoded  # 告诉服务端请求的数据类型</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_4) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36 # 客户端的名称</span><br><span class=\"line\">---- 空行 ----</span><br><span class=\"line\">---- 请求体 ----</span><br><span class=\"line\">username=hello&amp;pass=hello # 请求参数</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：每项数据之间使用:<strong>\\r\\n</strong></p>\n</blockquote>\n</li>\n</ul>\n<p>总结：</p>\n<ul>\n<li>\n<p>一个 HTTP 请求报文可以由<strong>请求行</strong>、<strong>请求头</strong>、<strong>空行</strong>和<strong>请求体</strong> 4 个部分组成。</p>\n</li>\n<li>\n<p>请求行是由三部分组成: <strong>请求方式</strong> <strong>请求资源路径</strong> <strong>HTTP 协议版本</strong></p>\n</li>\n<li>\n<p>GET 方式的请求报文<strong>没有请求体</strong>，只有<strong>请求行</strong>、<strong>请求头</strong>、<strong>空行</strong>组成。</p>\n</li>\n<li>\n<p>POST 方式的请求报文可以有<strong>请求行</strong>、<strong>请求头</strong>、<strong>空行</strong>、<strong>请求体</strong>四部分组成。</p>\n<blockquote>\n<p>注意：POST 方式可以允许没有请求体，但是这种格式很少见。</p>\n</blockquote>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>HTTP 响应报文</strong></p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">--- 响应行/状态行 ---</span><br><span class=\"line\">HTTP/1.1 200 OK # HTTP协议版本 状态码 状态描述</span><br><span class=\"line\">--- 响应头 ---</span><br><span class=\"line\">Server: Tengine # 服务器名称</span><br><span class=\"line\">Content-Type: text/html; charset=UTF-8 # 内容类型</span><br><span class=\"line\">Connection: keep-alive # 和客户端保持长连接</span><br><span class=\"line\">Date: Fri, 23 Nov 2018 02:01:05 GMT # 服务端的响应时间</span><br><span class=\"line\">--- 空行 ---</span><br><span class=\"line\">--- 响应体 ---</span><br><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"meta-keyword\">html</span>&gt;</span><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">“en”</span>&gt;</span> …<span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span> # 响应给客户端的数据</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>注意：每项数据之间使用:<strong>\\r\\n</strong></p>\n</blockquote>\n<ul>\n<li>\n<p><strong>HTTP 状态码</strong>：表示 Web 服务器响应状态</p>\n<table>\n<thead>\n<tr>\n<th><strong>状态码</strong></th>\n<th><strong>说明</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>200</td>\n<td>服务器已成功处理了请求</td>\n</tr>\n<tr>\n<td>400</td>\n<td>错误的请求，请求地址或者参数有误</td>\n</tr>\n<tr>\n<td>404</td>\n<td>请求资源在服务器不存在</td>\n</tr>\n<tr>\n<td>500</td>\n<td>服务器内部源代码出现错误</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n<p>总结：</p>\n<ul>\n<li>一个 HTTP 响应报文是由<strong>响应行</strong>、<strong>响应头</strong>、<strong>空行</strong>和<strong>响应体</strong> 4 个部分组成。</li>\n<li>响应行是由三部分组成：<strong>HTTP 协议版本 状态码 状态描述</strong>，最常见的状态码是 200</li>\n</ul>\n</li>\n</ul>\n<h3><span id=\"4-http-协议通信\"> 4 HTTP 协议通信</span></h3>\n<ul>\n<li>\n<p>通信原理</p>\n<center><img src=\"https://img-blog.csdnimg.cn/20210412122210687.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" style=\"zoom: 67%;\"></center>\n</li>\n</ul>\n<blockquote>\n<p><strong>注意</strong>：每一次浏览器和服务器的数据通讯，都是成对出现的即请求和响应，</p>\n<p>同时每一次请求和响应都必须符合 HTTP 协议的格式</p>\n</blockquote>\n<ul>\n<li>\n<p>谷歌浏览器开发者工具的使用</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210412122337659.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>\n<p><strong>标签选项说明：</strong></p>\n<ul>\n<li>元素（Elements）：用于查看或修改 HTML 标签</li>\n<li>控制台（Console）：执行 JS 代码</li>\n<li>源代码（Sources）：查看静态资源文件，断点调试 JS 代码</li>\n<li>网络（Network）：查看 http 协议的通信过程</li>\n</ul>\n</li>\n<li>\n<p><strong>使用说明：</strong></p>\n<p>①点击 Network 标签选项</p>\n<p>②在浏览器地址栏输入百度的网址，就能看到请求百度首页的 HTTP 的通信过程</p>\n<p>③这里的每项记录都是请求 + 响应的一次过程</p>\n<center><img src=\"https://img-blog.csdnimg.cn/2021041212234280.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" style=\"zoom: 67%;\"></center>\n<ul>\n<li><strong>查看 HTTP 协议的通信过程</strong></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<center><img src=\"https://img-blog.csdnimg.cn/20210412122341357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\" style=\"zoom: 67%;\"></center>\n<p><strong>总结：</strong></p>\n<ul>\n<li>\n<p>谷歌浏览器的开发者工具是查看 http 协议的通信过程利器，通过<strong> Network</strong> 标签选项可以查看每一次的请求和响应的通信过程，调出开发者工具的通用方法是在网页右击选择检查。</p>\n</li>\n<li>\n<p><strong>Headers</strong> 选项总共有三部分组成:</p>\n<p>①<strong>General</strong>: 主要信息</p>\n<p>②<strong>Response Headers</strong>: 响应头</p>\n<p>③<strong>Request Headers</strong>: 请求头</p>\n</li>\n<li>\n<p><strong>Response</strong> 选项是查看响应体信息的</p>\n</li>\n</ul>\n",
            "tags": [
                "人工智能",
                "网络通信"
            ]
        }
    ]
}