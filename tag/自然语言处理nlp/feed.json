{
    "version": "https://jsonfeed.org/version/1",
    "title": "且听风吟，御剑于心！ • All posts by \"自然语言处理nlp\" tag",
    "description": "",
    "home_page_url": "https://leezhao415.github.io",
    "items": [
        {
            "id": "https://leezhao415.github.io/2021/07/28/%E3%80%90%E8%AF%A6%E8%A7%A3%E3%80%91BiLSTM-CRF%E6%A8%A1%E5%9E%8B/",
            "url": "https://leezhao415.github.io/2021/07/28/%E3%80%90%E8%AF%A6%E8%A7%A3%E3%80%91BiLSTM-CRF%E6%A8%A1%E5%9E%8B/",
            "title": "【详解】BiLSTM+CRF模型",
            "date_published": "2021-07-28T06:52:19.000Z",
            "content_html": "<meta name=\"referrer\" content=\"no-referrer\">\n<hr>\n<p><strong>文章目录</strong></p>\n<!-- toc -->\n<ul>\n<li><a href=\"#1-bilstm-crf%E6%A8%A1%E5%9E%8B%E7%94%A8%E9%80%94\">1 BiLSTM-CRF 模型用途</a></li>\n<li><a href=\"#2-bilstm-crf%E6%A8%A1%E5%9E%8B%E4%BB%8B%E7%BB%8D\">2 BiLSTM-CRF 模型介绍</a>\n<ul>\n<li><a href=\"#21-%E6%95%B0%E6%8D%AE%E6%A0%87%E7%AD%BE%E5%8F%8A%E6%A8%A1%E5%9E%8B%E6%9E%B6%E6%9E%84\">2.1 数据标签及模型架构</a></li>\n<li><a href=\"#22-bilstm%E6%A8%A1%E5%9E%8B\">2.2 BiLSTM 模型</a></li>\n<li><a href=\"#23-crf%E6%A8%A1%E5%9E%8B\">2.3 CRF 模型</a></li>\n<li><a href=\"#24-bilstm-crf%E6%A8%A1%E5%9E%8B%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0\">2.4 BiLSTM-CRF 模型代码实现</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n<hr>\n<h4><span id=\"1-bilstm-crf-模型用途\"> 1 BiLSTM-CRF 模型用途</span></h4>\n<ul>\n<li>\n<p>命名实体识别 (Named Entity Recognition，NER)</p>\n<ul>\n<li>\n<p>定义</p>\n<ul>\n<li>从一段自然语言文本中找出相关实体，并标注出其位置以及类型。</li>\n<li>是信息提取，问答系统，句法分析，机器翻译等应用领域的重要基础工具。</li>\n<li>在自然语言处理技术走向实用化的过程中占有重要地位。包含行业，领域专有名词，如人名，地名，公司名，机构名，日期，时间，疾病名，症状名，手术名称，软件名称等。</li>\n</ul>\n</li>\n<li>\n<p>命名实体识别问题实际上是 <code>序列标注问题</code></p>\n</li>\n</ul>\n<p>序列标注问题指的是模型的输入是一个序列，包括文字，时间等，输出也是一个序列。针对输入序列的每一个单元，输出一个特定的标签.</p>\n<p>以中文分词任务进行举例，例如输入序列是一串文字: “我是中国人”, 输出序列是一串标签: “OOBII”, 其中 &quot;BIO&quot; 组成了一种中文分词的标签体系: B 表示这个字是词的开始，I 表示词的中间到结尾，O 表示其他类型词。因此我们可以根据输出序列 &quot;OOBII&quot; 进行解码，得到分词结果 &quot;我 \\ 是 \\ 中国人&quot;。</p>\n<ul>\n<li>序列标注问题涵盖了自然语言处理中的很多任务，包括语音识别，中文分词，机器翻译，命名实体识别等，而常见的序列标注模型包括 HMM, CRF, RNN, LSTM, GRU 等模型。</li>\n<li>其中在命名实体识别技术上，目前主流的技术是通过 BiLSTM+CRF 模型进行序列标注。</li>\n</ul>\n</li>\n</ul>\n<h4><span id=\"2-bilstm-crf-模型介绍\"> 2 BiLSTM-CRF 模型介绍</span></h4>\n<h5><span id=\"21-数据标签及模型架构\"> 2.1 数据标签及模型架构</span></h5>\n<h6><span id=\"211-数据标签\"> 2.1.1 数据标签</span></h6>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">B-Person （人名的开始部分）</span><br><span class=\"line\"></span><br><span class=\"line\">I- Person （人名的中间部分）</span><br><span class=\"line\"></span><br><span class=\"line\">B-Organization （组织机构的开始部分）</span><br><span class=\"line\"></span><br><span class=\"line\">I-Organization （组织机构的中间部分）</span><br><span class=\"line\"></span><br><span class=\"line\">O （非实体信息）</span><br></pre></td></tr></table></figure>\n<h6><span id=\"212-模型架构\"> 2.1.2 模型架构</span></h6>\n<p>x 是包含了 5 个单词的一句话（W<sub>0</sub>,W<sub>1</sub>,W<sub>2</sub>,W<sub>3</sub>,W<sub>4</sub>）。还有，在句子 x 中 [W<sub>0</sub>,W<sub>1</sub>] 是人名，[W<sub>3</sub>] 是组织机构名称，其他都是 “O”。</p>\n<center><img src=\"https://img-blog.csdnimg.cn/c9b16f3f8a1f415bb78e389f41763270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center =500x\" alt=\"在这里插入图片描述\" style=\"zoom: 67%;\"></center>\n<ul>\n<li>句中的每个单词是一条包含词嵌入和字嵌入的词向量，词嵌入通常是事先训练好的，字嵌入则是随机初始化的。所有的嵌入都会随着训练的迭代过程被调整。</li>\n<li>BiLSTM-CRF 的输入是词嵌入向量，输出是每个单词对应的预测标签。</li>\n</ul>\n<center><img src=\"https://img-blog.csdnimg.cn/ff5c9af681af41e6888205eb7662bc3d.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center =600x\" alt=\"在这里插入图片描述\" style=\"zoom: 67%;\"></center>\n<ul>\n<li>BiLSTM 层的输入表示该单词对应各个类别的分数。如 W<sub>0</sub>，BiLSTM 节点的输出是<strong> 1.5 (B-Person), 0.9 (I-Person), 0.1 (B-Organization), 0.08 (I-Organization) and 0.05 (O)</strong>。这些分数将会是<strong> CRF 层的输入</strong>。</li>\n<li>所有的经 BiLSTM 层输出的分数将作为 CRF 层的输入，类别序列中分数最高的类别就是我们预测的最终结果。</li>\n</ul>\n<h5><span id=\"22-bilstm-模型\"> 2.2 BiLSTM 模型</span></h5>\n<h6><span id=\"221-bilstm-模型介绍及联系\"> 2.2.1 BiLSTM 模型介绍及联系</span></h6>\n<ul>\n<li>所谓的 BiLSTM，就是 (Bidirectional LSTM) 双向 LSTM. 单向的 LSTM 模型只能捕捉到从前向后传递的信息，而双向的网络可以同时捕捉正向信息和反向信息，使得对文本信息的利用更全面，效果也更好.</li>\n<li>在 BiLSTM 网络最终的输出层后面增加了一个线性层，用来将 BiLSTM 产生的隐藏层输出结果投射到具有某种表达标签特征意义的区间，具体如下图所示：</li>\n</ul>\n<center><img src=\"https://img-blog.csdnimg.cn/238333d60d9e447792641724c3995127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center =650x\" alt=\"在这里插入图片描述\" style=\"zoom: 67%;\"></center>\n<h6><span id=\"222-代码实现细节\"> 2.2.2 代码实现细节</span></h6>\n<ul>\n<li>BiLSTM 网络结构\n<ul>\n<li>设置隐藏层维度的时候，需要将 hidden_size // 2</li>\n<li>总共有 3 层需要构建，分别是词嵌入层，双向 LSTM 层，全连接线性层</li>\n<li>在代码层面，双向 LSTM 就是将 nn.LSTM () 中的参数 bidirectional 设置为 True</li>\n</ul>\n</li>\n<li>BiLSTM 网络的代码实现\n<ul>\n<li>构建类 BiLSTM 的初始化函数</li>\n<li>添加文本向量化的辅助函数，注意 padding 填充为相同长度的 Tensor</li>\n<li>要注意 forward 函数中不同张量的形状约定</li>\n</ul>\n</li>\n</ul>\n<h5><span id=\"23-crf-模型\"> 2.3 CRF 模型</span></h5>\n<h6><span id=\"231-crf-模型定义及联系\"> 2.3.1 CRF 模型定义及联系</span></h6>\n<ul>\n<li>\n<p>CRF (全称 Conditional Random Fields), 条件随机场。是给定输入序列的条件下，求解输出序列的条件概率分布模型.</p>\n</li>\n<li>\n<p>即使没有 CRF 层，我们照样可以训练一个基于 BiLSTM 的命名实体识别模型（因为 BiLSTM 模型的结果是单词对应各类别的分数，我们可以选择分数最高的类别作为预测结果。）</p>\n<p>例如 W<sub>0</sub>，“B-Person” 的分数最高（1.5），那么我们可以选定 “B-Person” 作为预测结果。同样的，W<sub>1</sub> 是 “I-Person”, W<sub>2</sub> 是 “O”,W<sub>3</sub> 是 “B-Organization” ，W<sub>4</sub> 是 “O”。</p>\n</li>\n<li>\n<p>但实际情况可能出现下列预测结果</p>\n<center><img src=\"https://img-blog.csdnimg.cn/b038d64b6c2e47f79cbeeab504aaffd4.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center =600x\" alt=\"在这里插入图片描述\" style=\"zoom: 67%;\"></center>\n</li>\n</ul>\n<h6><span id=\"232-crf-作用\"> 2.3.2 CRF 作用</span></h6>\n<p>CRF 层可以加入一些约束来保证最终预测结果是有效的（CRF 层可以学习到句子的约束条件）。这些约束可以在训练数据时被 CRF 层自动学习得到。</p>\n<p>可能的约束条件有：</p>\n<ul>\n<li>句子的开头应该是 “B-” 或 “O”，而不是 “I-”。</li>\n<li>“B-label1 I-label2 I-label3…”，在该模式中，类别 1,2,3 应该是同一种实体类别。比如，“B-Person I-Person” 是正确的，而 “B-Person I-Organization” 则是错误的。</li>\n<li>“O I-label” 是错误的，命名实体的开头应该是 “B-” 而不是 “I-”。</li>\n</ul>\n<p>有了这些有用的约束，错误的预测序列将会大大减少。</p>\n<h6><span id=\"233-crf-层的损失函数\"> 2.3.3 CRF 层的损失函数</span></h6>\n<p><strong>1 Emission Score（发射分数 / 状态分数）</strong></p>\n<p>发射概率，是指已知当前标签的情况下，对应所出现字符的概率。通俗理解就是当前标签比较可能出现的文字有哪些，及其对应出现的概率.</p>\n<center><img src=\"https://img-blog.csdnimg.cn/194572acbeb94b59944df0a11fc2c539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center =650x\" alt=\"在这里插入图片描述\" style=\"zoom: 67%;\"></center>\n<p>X<sub>i</sub>,<sub>yj</sub> 代表状态分数，i 是单词的位置索引，y<sub>j</sub> 是类别的索引。根据上表，</p>\n<center><img src=\"https://img-blog.csdnimg.cn/d8973a290d344120a83be0d7aae7bc97.png#pic_center =350x\" alt=\"在这里插入图片描述\" style=\"zoom: 67%;\"></center>\n<ul>\n<li>\n<p>表示单词<strong> W<sub>1</sub><strong> 被预测为</strong> B−Organization</strong> 的分数是 0.1。</p>\n<center><img src=\"https://img-blog.csdnimg.cn/bd521eaaa9244d8cb760aea84b8712f9.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center =500x\" alt=\"在这里插入图片描述\" style=\"zoom:50%;\"></center>\n<center><img src=\"https://img-blog.csdnimg.cn/c92ab1c94b174b3c99c02cb2eb347db8.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center =500x\" alt=\"在这里插入图片描述\" style=\"zoom:50%;\"></center>\n</li>\n</ul>\n<center><img src=\"https://img-blog.csdnimg.cn/afd0d55621e04d36ad22b9e6d9497b81.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center =600x\" alt=\"在这里插入图片描述\" style=\"zoom:50%;\"></center>\n<p><strong>2 Transition Score （转移分数）</strong></p>\n<p>我们用 t (y<sub>i</sub>,y<sub>j</sub>) 来表示转移分数。例如，t (B−Person,I−Person)=0.9 表示从类别 B−Person→I−Person 的分数是 0.9。因此，我们有一个所有类别间的转移分数矩阵。</p>\n<p>为了使转移分数矩阵更具鲁棒性，我们加上 START 和 END 两类标签。START 代表一个句子的开始（不是句子的第一个单词），END 代表一个句子的结束。</p>\n<p>下表是加上 START 和 END 标签的转移分数矩阵。</p>\n<center><img src=\"https://img-blog.csdnimg.cn/428eb6d59c8d4376b12e016306a43f3e.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center =600x\" alt=\"在这里插入图片描述\" style=\"zoom: 60%;\"></center>\n<p>如上表格所示，转移矩阵已经学习到一些有用的约束条件：</p>\n<ul>\n<li>句子的第一个单词应该是 “B-” 或 “O”，而不是 “I”。（从 “START”-&gt;“I-Person 或 I-Organization” 的转移分数很低）</li>\n<li>“B-label1 I-label2 I-label3…”，在该模式中，类别 1,2,3 应该是同一种实体类别。比如，“B-Person I-Person” 是正确的，而 “B-Person I-Organization” 则是错误的。（“B-Organization” -&gt; “I-Person” 的分数很低）</li>\n<li>“O I-label” 是错误的，命名实体的开头应该是 “B-” 而不是 “I-”。</li>\n</ul>\n<center><img src=\"https://img-blog.csdnimg.cn/f36b77d5fec74017b7a1f00888423305.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center =500x\" alt=\"在这里插入图片描述\" style=\"zoom:50%;\"></center>\n<p>要怎样得到这个转移矩阵呢？</p>\n<p>实际上，转移矩阵是 BiLSTM-CRF 模型的一个参数。在训练模型之前，你可以<strong>随机初始化转移矩阵</strong>的分数。这些分数将随着训练的迭代过程被更新，换句话说，CRF 层可以自己学到这些约束条件。</p>\n<p><strong>3 CRF 损失函数</strong></p>\n<p>CRF 损失函数由两部分组成，真实路径的分数 和 所有路径的总分数。真实路径的分数应该是所有路径中分数最高的。</p>\n<p>例如，我们的数据集中有如下几种类别：</p>\n<center><img src=\"https://img-blog.csdnimg.cn/5e20d266963e46c6929c155f9cd71f51.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center =600x\" alt=\"在这里插入图片描述\" style=\"zoom: 67%;\"></center>\n<p>一个包含 5 个单词的句子，可能的类别序列如下：</p>\n<ul>\n<li>\\1. START B-Person B-Person B-Person B-Person B-Person END</li>\n<li>\\2. START B-Person I-Person B-Person B-Person B-Person END</li>\n<li><strong>……</strong></li>\n<li><strong>10. START B-Person I-Person O B-Organization O END</strong></li>\n<li>N. O O O O O O O</li>\n</ul>\n<p>每种可能的路径的分数为 Pi，共有 N 条路径，则路径的总分是</p>\n<center><img src=\"https://img-blog.csdnimg.cn/537d04e7484b454cb687bc62f050e371.png#pic_center =450x\" alt=\"在这里插入图片描述\" style=\"zoom: 55%;\"></center>\n<p>，e 是常数 e。</p>\n<p>如果第十条路径是真实路径，也就是说第十条是正确预测结果，那么第十条路径的分数应该是所有可能路径里得分最高的。</p>\n<p>根据如下损失函数，在训练过程中，BiLSTM-CRF 模型的参数值将随着训练过程的迭代不断更新，使得真实路径所占的比值越来越大。</p>\n<center><img src=\"https://img-blog.csdnimg.cn/1487e85399d74614b1668f7a5e5b03ff.png#pic_center =300x\" alt=\"在这里插入图片描述\" style=\"zoom: 60%;\"></center>\n<h5><span id=\"24-bilstm-crf-模型代码实现\"> 2.4 BiLSTM-CRF 模型代码实现</span></h5>\n<h6><span id=\"241-bilstmcrf-模型的实现\"> 2.4.1 BiLSTM+CRF 模型的实现</span></h6>\n<ul>\n<li>第一步：导入工具包并完成辅助函数</li>\n<li>第二步：文本信息张量化</li>\n<li>第三步：创建类的初始化函数</li>\n<li>第四步：创建获取发射矩阵张量的函数</li>\n<li>第五步：计算前向传播分值的函数</li>\n<li>第六步：计算句子真实分值的函数</li>\n<li>第七步：维特比算法的实现</li>\n<li>第八步：完善 BiLSTM_CRF 类的全部功能</li>\n</ul>\n<h6><span id=\"242-模型训练的流程\"> 2.4.2 模型训练的流程</span></h6>\n<ul>\n<li>第一步：熟悉字符到数字编码的码表</li>\n<li>第二步：熟悉训练数据集的样式和含义解释</li>\n<li>第三步：完成字符到 id 的映射函数</li>\n<li>第四步：获取训练数据和验证数据的函数</li>\n<li>第五步：完成准确率和召回率的评估代码</li>\n<li>第六步：绘制损失曲线和评估曲线图</li>\n<li>第七步：完成训练模型的完整代码</li>\n<li>第八步：训练集和验证集损失曲线和指标数据曲线的分析</li>\n</ul>\n",
            "tags": [
                "人工智能",
                "自然语言处理NLP"
            ]
        }
    ]
}