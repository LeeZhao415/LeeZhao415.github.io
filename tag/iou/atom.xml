<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://leezhao415.github.io</id>
    <title>且听风吟，御剑于心！ • Posts by &#34;iou&#34; tag</title>
    <link href="https://leezhao415.github.io" />
    <updated>2021-08-28T08:45:30.000Z</updated>
    <category term="人工智能/CV" />
    <category term="Transformer/DETR(CV)" />
    <category term="人工智能" />
    <category term="大数据框架" />
    <category term="数据集" />
    <category term="编程工具" />
    <category term="NLP" />
    <category term="模型部署" />
    <category term="数据结构与算法" />
    <category term="Python数据分析" />
    <category term="网络通信" />
    <category term="YOLOX" />
    <category term="CV算法" />
    <category term="VSLAM" />
    <category term="YOLOX目标检测" />
    <category term="NCNN部署" />
    <category term="多模态" />
    <category term="目标跟踪" />
    <category term="目标检测（人脸检测）" />
    <category term="深度学习" />
    <category term="NLP-BERT" />
    <category term="CV未来" />
    <category term="且读文摘" />
    <category term="自然语言处理NLP" />
    <category term="IOU" />
    <category term="OpenCV之DNN模块" />
    <category term="NLP-模型优化" />
    <category term="深度模型" />
    <category term="激活函数" />
    <category term="梯度更新" />
    <category term="概述" />
    <category term="人脸识别" />
    <category term="名人名言" />
    <category term="寒窑赋" />
    <category term="NLP/评估指标" />
    <category term="度量学习" />
    <category term="智能家居" />
    <category term="机器学习/损失函数" />
    <category term="机器学习" />
    <category term="科研项目成果" />
    <category term="模型性能指标" />
    <category term="CV/目标检测工具箱" />
    <category term="表面缺陷检测" />
    <category term="计算机顶会" />
    <category term="计算机视觉CV" />
    <category term="网络编程" />
    <category term="NLP/数据增强工具" />
    <category term="AIGC前沿" />
    <category term="计算机视觉" />
    <category term="模型优化" />
    <category term="三维建模" />
    <category term="计算机视觉库" />
    <category term="深度学习环境配置" />
    <category term="知识蒸馏" />
    <category term="多任务学习模型" />
    <category term="数据库原理" />
    <category term="算法" />
    <category term="操作系统" />
    <category term="深度模型（目标检测）" />
    <category term="视频理解" />
    <category term="ReID" />
    <category term="MOT" />
    <category term="NLP-发展史" />
    <category term="编程语言" />
    <category term="CV数据集" />
    <category term="Linux" />
    <category term="PaddlePaddle" />
    <entry>
        <id>https://leezhao415.github.io/2021/08/28/%E3%80%90%E8%AF%A6%E8%A7%A3%E3%80%91IoU%E3%80%81GIoU%E3%80%81DIoU%E3%80%81CIoU%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/</id>
        <title>【详解】IoU、GIoU、DIoU、CIoU损失函数</title>
        <link rel="alternate" href="https://leezhao415.github.io/2021/08/28/%E3%80%90%E8%AF%A6%E8%A7%A3%E3%80%91IoU%E3%80%81GIoU%E3%80%81DIoU%E3%80%81CIoU%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0/"/>
        <content type="html">&lt;meta name=&#34;referrer&#34; content=&#34;no-referrer&#34;&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;文章目录&lt;/strong&gt;&lt;/p&gt;
&lt;!-- toc --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%80-iouintersection-over-union&#34;&gt;一、IOU (Intersection over Union)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BA%8C-giougeneralized-intersection-over-union&#34;&gt;二、GIOU (Generalized Intersection over Union)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%B8%89-dioudistance-iou&#34;&gt;三、DIoU (Distance-IoU)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E5%9B%9B-cioucomplete-iou&#34;&gt;四、CIoU (&lt;strong&gt;Complete-IoU&lt;/strong&gt;)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#%E4%BA%94-%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E5%9C%A8yolov3%E4%B8%8A%E7%9A%84%E6%80%A7%E8%83%BD%E8%AE%BA%E6%96%87%E6%95%88%E6%9E%9C&#34;&gt;五、损失函数在 YOLOv3 上的性能 (论文效果)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- tocstop --&gt;
&lt;hr&gt;
&lt;h3&gt;&lt;span id=&#34;一-iou-intersection-over-union&#34;&gt; 一、IOU (Intersection over Union)&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1. 特性 (优点)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;IoU 就是我们所说的&lt;strong&gt;交并比&lt;/strong&gt;，是目标检测中最常用的指标，在&lt;a href=&#34;https://zhuanlan.zhihu.com/p/62372897&#34;&gt; anchor-based 的方法&lt;/a&gt;中，他的作用不仅用来确定正样本和负样本，还可以用来评价输出框（predict box）和 ground-truth 的距离。&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://www.zhihu.com/equation?tex=IoU+%3D+%5Cfrac%7B%5Cleft%7C+A%5Ccap+B+%5Cright%7C%7D%7B%5Cleft%7C+A%5Ccup+B+%5Cright%7C%7D&#34; alt=&#34;[公式]&#34; style=&#34;zoom:90%;&#34;&gt;&lt;/center&gt;
&lt;ol&gt;
&lt;li&gt;可以说&lt;strong&gt;它可以反映预测检测框与真实检测框的检测效果。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;还有一个很好的特性就是&lt;strong&gt;尺度不变性&lt;/strong&gt;，也就是对尺度不敏感（scale invariant）， 在 regression 任务中，判断 predict box 和 gt 的距离最直接的指标就是 IoU。&lt;strong&gt;(满足非负性；同一性；对称性；三角不等性)&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;import&lt;/span&gt; numpy &lt;span class=&#34;keyword&#34;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Iou&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;box1, box2, wh=&lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; wh == &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	xmin1, ymin1, xmax1, ymax1 = box1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	xmin2, ymin2, xmax2, ymax2 = box2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	xmin1, ymin1 = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(box1[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]-box1[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]/&lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;), &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(box1[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]-box1[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]/&lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	xmax1, ymax1 = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(box1[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]+box1[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]/&lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;), &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(box1[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]+box1[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]/&lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	xmin2, ymin2 = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(box2[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]-box2[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]/&lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;), &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(box2[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]-box2[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]/&lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	xmax2, ymax2 = &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(box2[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]+box2[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]/&lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;), &lt;span class=&#34;built_in&#34;&gt;int&lt;/span&gt;(box2[&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]+box2[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;]/&lt;span class=&#34;number&#34;&gt;2.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 获取矩形框交集对应的左上角和右下角的坐标（intersection）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    xx1 = np.&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;([xmin1, xmin2])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    yy1 = np.&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;([ymin1, ymin2])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    xx2 = np.&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;([xmax1, xmax2])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    yy2 = np.&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;([ymax1, ymax2])	&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# 计算两个矩形框面积&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    area1 = (xmax1-xmin1) * (ymax1-ymin1) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    area2 = (xmax2-xmin2) * (ymax2-ymin2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inter_area = (np.&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, xx2-xx1])) * (np.&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;([&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, yy2-yy1]))　&lt;span class=&#34;comment&#34;&gt;#计算交集面积&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    iou = inter_area / (area1+area2-inter_area+&lt;span class=&#34;number&#34;&gt;1e-6&lt;/span&gt;) 　&lt;span class=&#34;comment&#34;&gt;#计算交并比&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; iou&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;2. 作为损失函数会出现的问题 (缺点)&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果两个框没有相交，根据定义，IoU=0，不能反映两者的距离大小（重合度）。同时因为 loss=0，没有梯度回传，无法进行学习训练。&lt;/li&gt;
&lt;li&gt;IoU 无法精确的反映两者的重合度大小。如下图所示，三种情况 IoU 都相等，但看得出来他们的重合度是不一样的，左边的图回归的效果最好，右边的最差。&lt;/li&gt;
&lt;/ol&gt;
&lt;center&gt;&lt;img src=&#34;https://pic2.zhimg.com/80/v2-95449558cb098ff9df8c4d31474bd091_1440w.jpg&#34; alt=&#34;img&#34; style=&#34;zoom:90%;&#34;&gt;&lt;/center&gt;
&lt;h3&gt;&lt;span id=&#34;二-giou-generalized-intersection-over-union&#34;&gt; 二、GIOU (Generalized Intersection over Union)&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1、来源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 CVPR2019 中，论文&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//arxiv.org/abs/1902.09630&#34;&gt;《Generalized Intersection over Union: A Metric and A Loss for Bounding Box Regression》arxiv.org/abs/1902.09630&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;的提出了 GIoU 的思想。由于 IoU 是&lt;strong&gt;比值&lt;/strong&gt;的概念，对目标物体的 scale 是不敏感的。然而检测任务中的 BBox 的回归损失 (MSE loss, l1-smooth loss 等）优化和 IoU 优化不是完全等价的，而且 Ln 范数对物体的 scale 也比较敏感，IoU 无法直接优化没有重叠的部分。&lt;/p&gt;
&lt;p&gt;这篇论文提出可以直接把 IoU 设为回归的 loss。&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://www.zhihu.com/equation?tex=GIoU+%3D+IoU+-+%5Cfrac%7B%5Cleft%7C++A_%7Bc%7D+-+U+%5Cright%7C%7D%7B%5Cleft%7C+A_%7Bc%7D+%5Cright%7C%7D&#34; alt=&#34;[公式]&#34; style=&#34;zoom:80%;&#34;&gt;&lt;/center&gt;
&lt;center&gt;&lt;img src=&#34;C:\Users\14767\AppData\Roaming\Typora\typora-user-images\image-20210828164108323.png&#34; alt=&#34;image-20210828164108323&#34; style=&#34;zoom:80%;&#34;&gt;&lt;/center&gt;
&lt;ul&gt;
&lt;li&gt;GIoU 对 scale 不敏感&lt;/li&gt;
&lt;li&gt;GIoU 是 IoU 的下界，在两个框无限重合的情况下，IoU=GIoU=1&lt;/li&gt;
&lt;li&gt;IoU 取值 [0,1]，但 GIoU 有对称区间，取值范围 [-1,1]。在两者重合的时候取最大值 1，在两者无交集且无限远的时候取最小值 - 1，因此 GIoU 是一个非常好的距离度量指标。&lt;/li&gt;
&lt;li&gt;与 IoU 只关注重叠区域不同，&lt;strong&gt;GIoU 不仅关注重叠区域，还关注其他的非重合区域&lt;/strong&gt;，能更好的反映两者的重合度。&lt;/li&gt;
&lt;/ul&gt;
&lt;center&gt;&lt;img src=&#34;https://pic3.zhimg.com/80/v2-71e809433f6b26fcf30b4aeb6578413a_1440w.jpg&#34; alt=&#34;img&#34; style=&#34;zoom: 33%;&#34;&gt;&lt;/center&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Giou&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;rec1,rec2&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;#分别是第一个矩形左右上下的坐标&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x1,x2,y1,y2 = rec1 &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    x3,x4,y3,y4 = rec2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    iou = Iou(rec1,rec2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    area_C = (&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(x1,x2,x3,x4)-&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(x1,x2,x3,x4))*(&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(y1,y2,y3,y4)-&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(y1,y2,y3,y4))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    area_1 = (x2-x1)*(y1-y2)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    area_2 = (x4-x3)*(y3-y4)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    sum_area = area_1 + area_2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    w1 = x2 - x1   &lt;span class=&#34;comment&#34;&gt;#第一个矩形的宽&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    w2 = x4 - x3   &lt;span class=&#34;comment&#34;&gt;#第二个矩形的宽&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    h1 = y1 - y2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    h2 = y3 - y4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    W = &lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(x1,x2,x3,x4)+w1+w2-&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(x1,x2,x3,x4)    &lt;span class=&#34;comment&#34;&gt;#交叉部分的宽&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    H = &lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(y1,y2,y3,y4)+h1+h2-&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(y1,y2,y3,y4)    &lt;span class=&#34;comment&#34;&gt;#交叉部分的高&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Area = W*H    &lt;span class=&#34;comment&#34;&gt;#交叉的面积&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    add_area = sum_area - Area    &lt;span class=&#34;comment&#34;&gt;#两矩形并集的面积&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    end_area = (area_C - add_area)/area_C    &lt;span class=&#34;comment&#34;&gt;#闭包区域中不属于两个框的区域占闭包区域的比重&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    giou = iou - end_area&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; giou&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;&lt;span id=&#34;三-diou-distance-iou&#34;&gt; 三、DIoU (Distance-IoU)&lt;/span&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;1、来源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;DIoU 要比 GIou 更加符合目标框回归的机制，&lt;strong&gt;将目标与 anchor 之间的距离，重叠率以及尺度都考虑进去&lt;/strong&gt;，使得目标框回归变得更加稳定，不会像 IoU 和 GIoU 一样出现训练过程中发散等问题。论文中&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//arxiv.org/pdf/1911.08287.pdf&#34;&gt;Distance-IoUarxiv.org/pdf/1911.08287.pdf&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;基于 IoU 和 GIoU 存在的问题，作者提出了两个问题：&lt;/p&gt;
&lt;p&gt;1. 直接最小化 anchor 框与目标框之间的归一化距离是否可行，以达到更快的收敛速度？&lt;/p&gt;
&lt;p&gt;2. 如何使回归在与目标框有重叠甚至包含时更准确、更快？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;center&gt;&lt;img src=&#34;https://www.zhihu.com/equation?tex=DIoU+%3D+IoU+-+%5Cfrac%7B%5Crho%5E%7B2%7D%28b%2Cb%5E%7Bgt%7D%29%7D%7Bc%5E%7B2%7D%7D&#34; alt=&#34;[公式]&#34; style=&#34;zoom:90%;&#34;&gt;&lt;/center&gt;
&lt;p&gt;其中，b, b&lt;sup&gt;gt&lt;/sup&gt; 分别代表了预测框和真实框的中心点，且&lt;em&gt; ρ&lt;/em&gt; 代表的是计算两个中心点间的欧式距离。 &lt;em&gt;c&lt;/em&gt; 代表的是能够同时包含预测框和真实框的&lt;strong&gt;最小闭包区域&lt;/strong&gt;的对角线距离。&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;https://pic3.zhimg.com/80/v2-1e4b54001c4abdf392fe9d4877c83972_1440w.jpg&#34; alt=&#34;img&#34; style=&#34;zoom:80%;&#34;&gt;&lt;/center&gt;
&lt;p&gt;DIoU 中对 anchor 框和目标框之间的归一化距离进行了建模&lt;/p&gt;
&lt;p&gt;附：&lt;/p&gt;
&lt;p&gt;YOLOV3 DIoU GitHub 项目地址：&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//github.com/Zzh-tju/DIoU-darknet&#34;&gt;github.com/Zzh-tju/DIoU-darknet&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、优点&lt;/strong&gt;&lt;/p&gt;
&lt;center&gt;&lt;img src=&#34;C:\Users\14767\AppData\Roaming\Typora\typora-user-images\image-20210828163809043.png&#34; alt=&#34;image-20210828163809043&#34; style=&#34;zoom:80%;&#34;&gt;&lt;/center&gt;
&lt;ul&gt;
&lt;li&gt;DIoU loss 可以直接最小化两个目标框的距离，因此比 GIoU loss 收敛快得多。&lt;/li&gt;
&lt;li&gt;对于包含两个框在水平方向和垂直方向上这种情况，DIoU 损失可以使回归非常快，而 GIoU 损失几乎退化为 IoU 损失。&lt;/li&gt;
&lt;li&gt;DIoU 还可以替换普通的 IoU 评价策略，应用于 NMS 中，使得 NMS 得到的结果更加合理和有效。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;实现代码：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;Diou&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;bboxes1, bboxes2&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rows = bboxes1.shape[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cols = bboxes2.shape[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dious = torch.zeros((rows, cols))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; rows * cols == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;span class=&#34;comment&#34;&gt;#&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; dious&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exchange = &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; bboxes1.shape[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &amp;gt; bboxes2.shape[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        bboxes1, bboxes2 = bboxes2, bboxes1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dious = torch.zeros((cols, rows))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        exchange = &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;# #xmin,ymin,xmax,ymax-&amp;gt;[:,0],[:,1],[:,2],[:,3]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    w1 = bboxes1[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] - bboxes1[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    h1 = bboxes1[:, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] - bboxes1[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    w2 = bboxes2[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] - bboxes2[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    h2 = bboxes2[:, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] - bboxes2[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    area1 = w1 * h1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    area2 = w2 * h2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    center_x1 = (bboxes1[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] + bboxes1[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]) / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    center_y1 = (bboxes1[:, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + bboxes1[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    center_x2 = (bboxes2[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] + bboxes2[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]) / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    center_y2 = (bboxes2[:, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + bboxes2[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inter_max_xy = torch.&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(bboxes1[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:],bboxes2[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:]) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inter_min_xy = torch.&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(bboxes1[:, :&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],bboxes2[:, :&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;]) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    out_max_xy = torch.&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(bboxes1[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:],bboxes2[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:]) &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    out_min_xy = torch.&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(bboxes1[:, :&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],bboxes2[:, :&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inter = torch.clamp((inter_max_xy - inter_min_xy), &lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inter_area = inter[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] * inter[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inter_diag = (center_x2 - center_x1)**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + (center_y2 - center_y1)**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    outer = torch.clamp((out_max_xy - out_min_xy), &lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    outer_diag = (outer[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] ** &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) + (outer[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] ** &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    union = area1+area2-inter_area&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dious = inter_area / union - (inter_diag) / outer_diag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dious = torch.clamp(dious,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;=-&lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; exchange:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dious = dious.T&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; dious&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;&lt;span id=&#34;四-ciou-complete-iou&#34;&gt; 四、CIoU (&lt;strong&gt;Complete-IoU&lt;/strong&gt;)&lt;/span&gt;&lt;/h3&gt;
&lt;center&gt;&lt;img src=&#34;C:\Users\14767\AppData\Roaming\Typora\typora-user-images\image-20210828163615875.png&#34; alt=&#34;image-20210828163615875&#34; style=&#34;zoom:80%;&#34;&gt;&lt;/center&gt;
&lt;p&gt;实现代码：&lt;/p&gt;
&lt;figure class=&#34;highlight python&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;bbox_overlaps_ciou&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;bboxes1, bboxes2&lt;/span&gt;):&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    rows = bboxes1.shape[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cols = bboxes2.shape[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cious = torch.zeros((rows, cols))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; rows * cols == &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; cious&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    exchange = &lt;span class=&#34;literal&#34;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; bboxes1.shape[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] &amp;gt; bboxes2.shape[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        bboxes1, bboxes2 = bboxes2, bboxes1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cious = torch.zeros((cols, rows))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        exchange = &lt;span class=&#34;literal&#34;&gt;True&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    w1 = bboxes1[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] - bboxes1[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    h1 = bboxes1[:, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] - bboxes1[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    w2 = bboxes2[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] - bboxes2[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    h2 = bboxes2[:, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] - bboxes2[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    area1 = w1 * h1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    area2 = w2 * h2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    center_x1 = (bboxes1[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] + bboxes1[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]) / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    center_y1 = (bboxes1[:, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + bboxes1[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    center_x2 = (bboxes2[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;] + bboxes2[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]) / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    center_y2 = (bboxes2[:, &lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;] + bboxes2[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]) / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inter_max_xy = torch.&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(bboxes1[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:],bboxes2[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inter_min_xy = torch.&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(bboxes1[:, :&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],bboxes2[:, :&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    out_max_xy = torch.&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt;(bboxes1[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:],bboxes2[:, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;:])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    out_min_xy = torch.&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;(bboxes1[:, :&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;],bboxes2[:, :&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inter = torch.clamp((inter_max_xy - inter_min_xy), &lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inter_area = inter[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] * inter[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    inter_diag = (center_x2 - center_x1)**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; + (center_y2 - center_y1)**&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    outer = torch.clamp((out_max_xy - out_min_xy), &lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;=&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    outer_diag = (outer[:, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;] ** &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;) + (outer[:, &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;] ** &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    union = area1+area2-inter_area&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    u = (inter_diag) / outer_diag&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    iou = inter_area / union&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;with&lt;/span&gt; torch.no_grad():&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        arctan = torch.atan(w2 / h2) - torch.atan(w1 / h1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        v = (&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt; / (math.pi ** &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)) * torch.&lt;span class=&#34;built_in&#34;&gt;pow&lt;/span&gt;((torch.atan(w2 / h2) - torch.atan(w1 / h1)), &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        S = &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; - iou&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        alpha = v / (S + v)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        w_temp = &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt; * w1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ar = (&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt; / (math.pi ** &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)) * arctan * ((w1 - w_temp) * h1)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cious = iou - (u + alpha * ar)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    cious = torch.clamp(cious,&lt;span class=&#34;built_in&#34;&gt;min&lt;/span&gt;=-&lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt;,&lt;span class=&#34;built_in&#34;&gt;max&lt;/span&gt; = &lt;span class=&#34;number&#34;&gt;1.0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; exchange:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        cious = cious.T&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; cious&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3&gt;&lt;span id=&#34;五-损失函数在-yolov3-上的性能-论文效果&#34;&gt; 五、损失函数在 YOLOv3 上的性能 (论文效果)&lt;/span&gt;&lt;/h3&gt;
&lt;center&gt;&lt;img src=&#34;https://pic2.zhimg.com/80/v2-9d958cbbf6b13cddceeeb296c2f9a735_1440w.jpg&#34; alt=&#34;img&#34; style=&#34;zoom: 33%;&#34;&gt;&lt;/center&gt;
&lt;p&gt;目标检测算法之 AAAI 2020 DIoU Loss 已开源 (YOLOV3 涨近 3 个点)：&lt;a href=&#34;https://link.zhihu.com/?target=https%3A//cloud.tencent.com/developer/article/1558533&#34;&gt;cloud.tencent.com/developer/article/1558533&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="人工智能" />
        <category term="IOU" />
        <updated>2021-08-28T08:45:30.000Z</updated>
    </entry>
</feed>
