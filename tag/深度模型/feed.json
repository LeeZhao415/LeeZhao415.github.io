{
    "version": "https://jsonfeed.org/version/1",
    "title": "且听风吟，御剑于心！ • All posts by \"深度模型\" tag",
    "description": "",
    "home_page_url": "https://leezhao415.github.io",
    "items": [
        {
            "id": "https://leezhao415.github.io/2022/01/20/%E3%80%90%E8%AF%A6%E8%A7%A3%E3%80%91YOLOX%E8%AE%AD%E7%BB%83Objects365%E6%8C%87%E5%AE%9A%E7%B1%BB%E5%88%AB%E6%95%B0%E6%8D%AE/",
            "url": "https://leezhao415.github.io/2022/01/20/%E3%80%90%E8%AF%A6%E8%A7%A3%E3%80%91YOLOX%E8%AE%AD%E7%BB%83Objects365%E6%8C%87%E5%AE%9A%E7%B1%BB%E5%88%AB%E6%95%B0%E6%8D%AE/",
            "title": "【详解】YOLOX训练Objects365指定类别数据",
            "date_published": "2022-01-20T13:06:12.000Z",
            "content_html": "<meta name=\"referrer\" content=\"no-referrer\">\n<hr>\n<p><strong>文章目录</strong></p>\n<!-- toc -->\n<ul>\n<li><a href=\"#%E4%B8%80yolox-%E8%AE%AD%E7%BB%83objects365_172\">（一）YOLOX 训练 Objects365_172</a>\n<ul>\n<li><a href=\"#1%E6%95%B0%E6%8D%AE%E9%9B%86%E9%A2%84%E5%A4%84%E7%90%86\">（1）数据集预处理</a></li>\n<li><a href=\"#2yolox%E8%AE%AD%E7%BB%83\">（2）YOLOX 训练</a></li>\n</ul>\n</li>\n<li><a href=\"#%E4%BA%8C%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\">（二）注意事项：</a>\n<ul>\n<li><a href=\"#1%E5%A4%9Agpu%E8%AE%AD%E7%BB%83%E9%97%AE%E9%A2%98%E5%8F%AF%E9%80%89\">（1）多 GPU 训练问题（可选）</a></li>\n<li><a href=\"#2%E8%AE%AD%E7%BB%83%E4%B8%AD%E7%94%9F%E6%88%90%E4%B8%B4%E6%97%B6%E6%A0%87%E7%AD%BE%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99%E9%97%AE%E9%A2%98\">（2）训练中生成临时标签文件报错问题</a></li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n<hr>\n<h4><span id=\"一yolox-训练-objects365_172\"> （一）YOLOX 训练 Objects365_172</span></h4>\n<h5><span id=\"1数据集预处理\"> （1）数据集预处理</span></h5>\n<h6><span id=\"lt1gt-数据集格式\"> &lt;1&gt; 数据集格式</span></h6>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">├─datasets</span><br><span class=\"line\">│  └─VOCdevkit</span><br><span class=\"line\">│      └─VOC2007</span><br><span class=\"line\">│          ├─Annotations</span><br><span class=\"line\">│          ├─ImageSets</span><br><span class=\"line\">│          │  └─Main</span><br><span class=\"line\">│          └─JPEGImages</span><br></pre></td></tr></table></figure>\n<h6><span id=\"lt2gt-数据集抽取\"> &lt;2&gt; 数据集抽取</span></h6>\n<ul>\n<li>从 Objects365 中抽取指定 172 类并转为 VOC 数据集类型 xml</li>\n</ul>\n<p>​      <code>obj365_main.py</code></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1ePq7KB1Ho5R-uNXK-XOa-Q\">https://pan.baidu.com/s/1ePq7KB1Ho5R-uNXK-XOa-Q</a> 提取码: 8008</p>\n<ul>\n<li>根据抽取的标签获取图片列表</li>\n</ul>\n<p>​      <code>img_list_txt.py</code></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1IyP7yEibYzR1UL_fZfbccg\">https://pan.baidu.com/s/1IyP7yEibYzR1UL_fZfbccg</a> 提取码: mgk3</p>\n<ul>\n<li>\n<p>根据图片列表抽取源数据</p>\n<p>img_list_txt.py</p>\n</li>\n</ul>\n<p>链接:<a href=\"https://pan.baidu.com/s/10C0TULHWCQ1YkjkVzY6jaQ\">https://pan.baidu.com/s/10C0TULHWCQ1YkjkVzY6jaQ</a> 提取码:ju1j</p>\n<ul>\n<li>生成 ImageSets 文件夹，切分 train、val、test、trainval</li>\n</ul>\n<p>​     <code>VOC_ImageSets_Main_txt.py</code></p>\n<p>链接: <a href=\"https://pan.baidu.com/s/1hHLI3-30nXb-kqEsNLnHEQ\">https://pan.baidu.com/s/1hHLI3-30nXb-kqEsNLnHEQ</a> 提取码: om41</p>\n<h5><span id=\"2yolox-训练\"> （2）YOLOX 训练</span></h5>\n<h6><span id=\"lt1gt-文件修改\"> &lt;1&gt; 文件修改</span></h6>\n<p>（1）  <code>yolox/data/datasets/voc_classes.py</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">VOC_CLASSES = (</span><br><span class=\"line\"><span class=\"string\">&quot;panda&quot;</span>,</span><br><span class=\"line\"><span class=\"string\">&quot;tiger&quot;</span>,</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n<p>（2）  <code>yolox/exp/yolox_base.py</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(self.num_classes可以不用修改，因为后面的exps/example/yolox_voc/yolox_voc_s.py会对self.num_classes进行重载)</span><br><span class=\"line\"></span><br><span class=\"line\">可选修改 self.num_classes修改为自己的类别数</span><br><span class=\"line\"></span><br><span class=\"line\">可选修改 self.inputsize, self.random_size 改变训练尺寸大小</span><br><span class=\"line\"></span><br><span class=\"line\">可选修改 self.test_size 改变测试的尺寸大小</span><br></pre></td></tr></table></figure>\n<p>（3）  <code>yolox/data/datasets/voc.py</code></p>\n<ul>\n<li>\n<p><code>_do_python_eval()</code>  方法</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">annopath = os.path.join(rootpath, <span class=\"string\">&quot;Annotations&quot;</span>, <span class=\"string\">&quot;&#123;:s&#125;.xml&quot;</span>)</span><br><span class=\"line\">修改为</span><br><span class=\"line\">annopath = os.path.join(rootpath, <span class=\"string\">&quot;Annotations&quot;</span>, <span class=\"string\">&quot;&#123;&#125;.xml&quot;</span>)</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>（4）  <code>exps/example/yolox_voc/yolox_voc_s.py</code></p>\n<ul>\n<li>\n<p>全局超参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改 self.num_classes = <span class=\"number\">172</span>   <span class=\"comment\"># 自定义的类别数</span></span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>get_data_loder</code>  方法</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改VOCDetection下的 image_sets=[(<span class=\"string\">&#x27;2007&#x27;</span>, <span class=\"string\">&#x27;trainval&#x27;</span>), (<span class=\"string\">&#x27;2012&#x27;</span>, <span class=\"string\">&#x27;trainval&#x27;</span>)],</span><br><span class=\"line\">修改为 image_sets=[(<span class=\"string\">&#x27;2007&#x27;</span>, <span class=\"string\">&#x27;train&#x27;</span>)]</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p><code>get_eval_loader</code>  方法</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">修改VOCDetection下的 image_sets=[(<span class=\"string\">&#x27;2007&#x27;</span>, <span class=\"string\">&#x27;test&#x27;</span>)],</span><br><span class=\"line\">修改为 image_sets=[(<span class=\"string\">&#x27;2007&#x27;</span>, <span class=\"string\">&#x27;val&#x27;</span>)]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>（5）  <code>tools/train.py</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">设置 default=<span class=\"string\">&quot;Animals&quot;</span>， 训练后结果就会保存在 tools/YOLOX_outputs/Animals下</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&quot;-expn&quot;</span>, <span class=\"string\">&quot;--experiment-name&quot;</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">str</span>, default=<span class=\"literal\">None</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">设置 model_name，我也不太清楚这是不是必须项 (我觉得不是)</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&quot;-n&quot;</span>, <span class=\"string\">&quot;--name&quot;</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">str</span>, default=<span class=\"string\">&quot;yolox-s&quot;</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;model name&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">设置 batch_size</span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&quot;-b&quot;</span>, <span class=\"string\">&quot;--batch-size&quot;</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>, default=<span class=\"number\">64</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;batch size&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">设置gpu，因为我只有一张卡，所以设 default=<span class=\"number\">0</span></span><br><span class=\"line\">parser.add_argument(</span><br><span class=\"line\">    <span class=\"string\">&quot;-d&quot;</span>, <span class=\"string\">&quot;--devices&quot;</span>, default=<span class=\"number\">0</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">int</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;device for training&quot;</span></span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">设置你的数据配置的路径，default=<span class=\"string\">&quot;../exps/example/yolox_voc/yolox_voc_s.py&quot;</span></span><br><span class=\"line\">parser.add_argument(</span><br><span class=\"line\">    <span class=\"string\">&quot;-f&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;--exp_file&quot;</span>,</span><br><span class=\"line\">    default=<span class=\"string\">&quot;../exps/example/yolox_voc/yolox_voc_s.py&quot;</span>,</span><br><span class=\"line\">    <span class=\"built_in\">type</span>=<span class=\"built_in\">str</span>,</span><br><span class=\"line\">    <span class=\"built_in\">help</span>=<span class=\"string\">&quot;plz input your expriment description file&quot;</span>,</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\">设置权重路径， default=<span class=\"string\">&quot;../weights/yolox_s.pth&quot;</span></span><br><span class=\"line\">parser.add_argument(<span class=\"string\">&quot;-c&quot;</span>, <span class=\"string\">&quot;--ckpt&quot;</span>, default=<span class=\"string\">&quot;../weights/yolox_s.pth&quot;</span>, <span class=\"built_in\">type</span>=<span class=\"built_in\">str</span>, <span class=\"built_in\">help</span>=<span class=\"string\">&quot;checkpoint file&quot;</span>)</span><br></pre></td></tr></table></figure>\n<p>（6）  <code>tools/demo.py</code></p>\n<ul>\n<li>\n<p>由于 <a href=\"http://demo.py\">demo.py</a> 默认调用的是 COCO_CLASSES，所以想要正确显示结果，就要把  <code>yolox/data/datasets/coco_classes.py</code>  下的 COCO_CLASSES 改成你的数据类别</p>\n</li>\n<li>\n<p>或者如果想修改为调用 VOC_CLASSES</p>\n<ul>\n<li>\n<p>在 <code>yolox/data/datasets/__init__.py</code>  里将 from .voc import VOCDetection 修改为 from .voc import VOCDetection, VOC_CLASSES</p>\n</li>\n<li>\n<p>在 <code>tools/demo.py</code></p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> yolox.data.datasets <span class=\"keyword\">import</span> COCO_CLASSES </span><br><span class=\"line\">修改为 </span><br><span class=\"line\"><span class=\"keyword\">from</span> yolox.data.datasets <span class=\"keyword\">import</span> COCO_CLASSES, VOC_CLASSES</span><br></pre></td></tr></table></figure>\n</li>\n<li>\n<p>将  <code>tools/demo.py</code>  里所有用到 COCO_CLASSES 的地方全部改为 VOC_CLASSES 即可</p>\n</li>\n</ul>\n</li>\n</ul>\n<h6><span id=\"lt2gt-模型训练\"> &lt;2&gt; 模型训练</span></h6>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 单GPU训练</span></span><br><span class=\"line\">python tools/train.py -n yolox-s -d <span class=\"number\">1</span> -b <span class=\"number\">16</span> --fp16 -c yolox/weights/yolox_s.pth -o [--cache]</span><br><span class=\"line\"></span><br><span class=\"line\">python tools/train.py -f exps/example/yolox_voc/yolox_voc_s.py -d <span class=\"number\">0</span> -b <span class=\"number\">16</span> -c yolox/weights/yolox_s.pth</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 多GPU训练</span></span><br><span class=\"line\">python tools/train.py -f exps/example/yolox_voc/yolox_voc_nano.py -d <span class=\"number\">4</span> -b <span class=\"number\">64</span> --fp16 -c yolox/weights/yolox_nano.pth</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#* -d: number of gpu devices</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#* -b: total batch size, the recommended number for -b is num-gpu * 8</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#* --fp16: mixed precision training</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#* --cache: caching imgs into RAM to accelarate training, which need large system RAM.</span></span><br></pre></td></tr></table></figure>\n<h6><span id=\"lt3gt-模型推理\"> &lt;3&gt; 模型推理</span></h6>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python tools/demo.py image -f exps/example/yolox_voc/yolox_voc_s.py -c YOLOX_outputs/yolox_s/best_ckpt.pth --path TestFiles/testimg1.jpg --conf <span class=\"number\">0.3</span> --nms <span class=\"number\">0.65</span> --tsize <span class=\"number\">640</span> --save_result --device cpu</span><br><span class=\"line\"></span><br><span class=\"line\">python tools/demo.py image -f exps/example/yolox_voc/yolox_voc_nano.py -c YOLOX_outputs/yolox_voc_nano/latest_ckpt.pth --path TestFiles/testimg1.jpg --conf <span class=\"number\">0.3</span> --nms <span class=\"number\">0.65</span> --tsize <span class=\"number\">640</span> --save_result --device cpu</span><br></pre></td></tr></table></figure>\n<h4><span id=\"二注意事项\"> （二）注意事项：</span></h4>\n<h5><span id=\"1多-gpu-训练问题可选\"> （1）多 GPU 训练问题（可选）</span></h5>\n<ul>\n<li>多 GPU 训练模型时，需将 os.environ [‘CUDA_VISIBLE_DEVICES’] 修改为实际需要的</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">os.environ[<span class=\"string\">&#x27;CUDA_VISIBLE_DEVICES&#x27;</span>] = <span class=\"string\">&#x27;0,1,2,3&#x27;</span></span><br></pre></td></tr></table></figure>\n<h5><span id=\"2训练中生成临时标签文件报错问题\"> （2）训练中生成临时标签文件报错问题</span></h5>\n<ul>\n<li>YOLOX 训练过程中出现验证生成临时标签 txt 文件时，因文件名中包含 “/”, 而无法生成临时标签 txt 文件的问题\n<ul>\n<li><strong>解决方法</strong>：重新生成标签文件，将 “/” 修改为 “_”\n<ul>\n<li>生成标签文件时将 object365_dict.txt 文件中对应标签的 “/” 修改为 “_”</li>\n<li>/YOLOX/yolox/data/dataset/voc_classes.py 中的 VOC_CLASSES 类别中的 “/” 修改为 “_”</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n",
            "tags": [
                "人工智能",
                "深度模型"
            ]
        }
    ]
}