{
    "version": "https://jsonfeed.org/version/1",
    "title": "且听风吟，御剑于心！ • All posts by \"nlp/数据增强工具\" tag",
    "description": "",
    "home_page_url": "https://leezhao415.github.io",
    "items": [
        {
            "id": "https://leezhao415.github.io/2021/08/08/NLP%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA%E5%B7%A5%E5%85%B7%E2%80%94jionlp/",
            "url": "https://leezhao415.github.io/2021/08/08/NLP%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA%E5%B7%A5%E5%85%B7%E2%80%94jionlp/",
            "title": "NLP数据增强工具—jionlp",
            "date_published": "2021-08-08T09:41:41.000Z",
            "content_html": "<meta name=\"referrer\" content=\"no-referrer\">\n<hr>\n<p><strong>文章目录</strong></p>\n<!-- toc -->\n<ul>\n<li><a href=\"#%E5%AE%89%E8%A3%85\">安装</a></li>\n<li><a href=\"#%E6%93%8D%E4%BD%9C%E8%AF%B4%E6%98%8E\">操作说明</a>\n<ul>\n<li><a href=\"#%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA%E6%96%B9%E6%B3%95%E5%AF%B9%E6%AF%94\">数据增强方法对比</a></li>\n<li><a href=\"#%E5%9B%9E%E8%AF%91%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA\">回译数据增强</a>\n<ul>\n<li><a href=\"#1-backtranslation\">1 BackTranslation</a></li>\n<li><a href=\"#2-baiduapi\">2 BaiduApi</a></li>\n<li><a href=\"#3-xunfeiapi\">3 XunfeiApi</a></li>\n<li><a href=\"#4-googleapi\">4 GoogleApi</a></li>\n<li><a href=\"#5-tecentapi\">5 TecentApi</a></li>\n<li><a href=\"#6-youdaoapi\">6 YoudaoApi</a></li>\n<li><a href=\"#7-youdaofreeapi\">7 YoudaoFreeApi</a></li>\n</ul>\n</li>\n<li><a href=\"#%E9%82%BB%E8%BF%91%E6%B1%89%E5%AD%97%E6%8D%A2%E4%BD%8D\">邻近汉字换位</a>\n<ul>\n<li><a href=\"#swap_char_position\">swap_char_position</a></li>\n</ul>\n</li>\n<li><a href=\"#%E5%90%8C%E9%9F%B3%E8%AF%8D%E6%9B%BF%E6%8D%A2\">同音词替换</a>\n<ul>\n<li><a href=\"#homophone_substitution\">homophone_substitution</a></li>\n</ul>\n</li>\n<li><a href=\"#%E9%9A%8F%E6%9C%BA%E5%A2%9E%E5%88%A0%E5%AD%97%E7%AC%A6\">随机增删字符</a>\n<ul>\n<li><a href=\"#random_add_delete\">random_add_delete</a></li>\n</ul>\n</li>\n<li><a href=\"#ner%E5%AE%9E%E4%BD%93%E6%9B%BF%E6%8D%A2\">NER 实体替换</a>\n<ul>\n<li><a href=\"#replaceentity\">ReplaceEntity</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<!-- tocstop -->\n<hr>\n<h2><span id> </span></h2>\n<h3><span id=\"安装\"> 安装</span></h3>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install jionlp</span><br></pre></td></tr></table></figure>\n<p>该如何使用呢？可以参考 Github 以下项目</p>\n<p><a href=\"https://link.zhihu.com/?target=https%3A//github.com/dongrixinyu/JioNLP\">https://github.com/dongrixinyu/JioNLPgithub.com/dongrixinyu/JioNLP</a></p>\n<h3><span id=\"操作说明\"> 操作说明</span></h3>\n<p>其中包含了<strong>回译、邻近汉字换位、同音词替换、随机增删字符</strong>等方法。具体使用样例如下：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import jionlp as jio</span><br><span class=\"line\">&gt;&gt;&gt; text = <span class=\"string\">&#x27;人口危机如果无法得到及时解决，80后、90后们将受到巨大的冲击。&#x27;</span></span><br><span class=\"line\">&gt;&gt;&gt; res1 = jio.swap_char_position(text)  <span class=\"comment\"># 邻近汉字换位</span></span><br><span class=\"line\">&gt;&gt;&gt; res2 = jio.homophone_substitution(text)  <span class=\"comment\"># 同音词替换</span></span><br><span class=\"line\">&gt;&gt;&gt; res3 = jio.random_add_delete(text)  <span class=\"comment\"># 随机增删字符</span></span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">print</span>(res1[0] + <span class=\"string\">&#x27;\\n&#x27;</span> + res2[0] + <span class=\"string\">&#x27;\\n&#x27;</span> + res3[0])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 人口危机如果无法得时及到解决，80后、90后们将受到巨大的冲击。</span></span><br><span class=\"line\"><span class=\"comment\"># 人口危机如果无法得到即时解决，80后、90后们将受到巨大的冲击。</span></span><br><span class=\"line\"><span class=\"comment\"># 人D口危机如果无法得到及时解决，80后90后们将到巨大的冲击。</span></span><br></pre></td></tr></table></figure>\n<h4><span id=\"数据增强方法对比\"> 数据增强方法对比</span></h4>\n<ul>\n<li>文本数据增强的两个前提：</li>\n<li>1、<strong>不干扰模型标签</strong>：文本增强后的语义不干扰模型训练，不会导致样本标签失效；如 “这个小吃真好吃。=&gt; 正面情绪” 增强为 “这个小吃真不好吃。=&gt; 正面情绪”，随机加字影响到了标签的正确性。</li>\n<li>2、<strong>人可理解</strong>：增强后文本，依然保持可读性，达到人可以理解文本的含义；如 “这个小吃真好吃。” 增强为 “斯口吃真好吃。”，其中 “这个” 替换为 “斯”，“小吃” 替换为 “口吃”，已经完全令人无法理解，模型训练也已偏离。此问题在 同义词替换上非常频繁与普遍。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>任务类型</th>\n<th>效果</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><a href=\"https://github.com/dongrixinyu/JioNLP/wiki/%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA-%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3#user-content-%E5%9B%9E%E8%AF%91%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA\">回译</a></td>\n<td>文本分类、序列标注、匹配、文本生成</td>\n<td>基于机翻效果决定，目前对新闻通用领域效果较好，专项领域视语料决定。长短文本均适合</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/dongrixinyu/JioNLP/wiki/%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA-%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3#user-content-%E9%82%BB%E8%BF%91%E6%B1%89%E5%AD%97%E6%8D%A2%E4%BD%8D\">邻近汉字换位</a></td>\n<td>文本分类、匹配</td>\n<td>汉字换位会影响具体实体的含义，在实体含义并不影响整体语义情况下适用。换位汉字占比不宜过大</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/dongrixinyu/JioNLP/wiki/%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA-%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3#user-content-%E5%90%8C%E9%9F%B3%E8%AF%8D%E6%9B%BF%E6%8D%A2\">同音词替换</a></td>\n<td>文本分类、匹配</td>\n<td>同音词替换会对局部语义产生影响，造成误差，但对整体语义理解并无干扰。替换词汇的占比不宜过大</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/dongrixinyu/JioNLP/wiki/%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA-%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3#user-content-%E9%9A%8F%E6%9C%BA%E5%A2%9E%E5%88%A0%E5%AD%97%E7%AC%A6\">随机增删符号</a></td>\n<td>文本分类、匹配</td>\n<td>在文本中随机增删不影响语义的额外非中文符号。增加比例不宜过大，若某类字符（数字、字母）对语义有影响，则应该规避此类字符</td>\n</tr>\n<tr>\n<td><a href=\"https://github.com/dongrixinyu/JioNLP/wiki/%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA-%E8%AF%B4%E6%98%8E%E6%96%87%E6%A1%A3#user-content-ner%E5%AE%9E%E4%BD%93%E6%9B%BF%E6%8D%A2\">NER 实体替换</a></td>\n<td>文本分类、匹配、序列标注</td>\n<td>在文本中随机替换不影响语义的实体。如人名、地名、机构等实体</td>\n</tr>\n<tr>\n<td>同义词替换</td>\n<td>-</td>\n<td>造成语言连贯性差，语义完全被曲解的概率非常大。<strong>此种方法作废，本工具包不支持</strong>。具体解释见 <code>jio.random_add_delete.__doc__</code></td>\n</tr>\n<tr>\n<td>语言模型预测</td>\n<td>分类、匹配、文本生成</td>\n<td>利用大型的语言模型如 bert 等，预测句子中空缺的词汇。<strong>此种方法依赖大型的语言模型参数，本工具暂不支持</strong></td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h4><span id=\"回译数据增强\"> 回译数据增强</span></h4>\n<h5><span id=\"1-backtranslation\"> 1 BackTranslation</span></h5>\n<h5><span id=\"2-baiduapi\"> 2 BaiduApi</span></h5>\n<h5><span id=\"3-xunfeiapi\"> 3 XunfeiApi</span></h5>\n<h5><span id=\"4-googleapi\"> 4 GoogleApi</span></h5>\n<h5><span id=\"5-tecentapi\"> 5 TecentApi</span></h5>\n<h5><span id=\"6-youdaoapi\"> 6 YoudaoApi</span></h5>\n<h5><span id=\"7-youdaofreeapi\"> 7 YoudaoFreeApi</span></h5>\n<p>给定一段文本，利用各类大厂公开的免费 api，对文本数据做增强。用户可在各大厂的云平台上自行申请密钥，填在接口的参数中。 各厂申请 API 地址如下：</p>\n<ul>\n<li><a href=\"https://api.fanyi.baidu.com/doc/21\">百度 BaiduApi</a></li>\n<li><a href=\"http://ai.youdao.com/DOCSIRMA/html/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E7%BF%BB%E8%AF%91/API%E6%96%87%E6%A1%A3/%E6%96%87%E6%9C%AC%E7%BF%BB%E8%AF%91%E6%9C%8D%E5%8A%A1/%E6%96%87%E6%9C%AC%E7%BF%BB%E8%AF%91%E6%9C%8D%E5%8A%A1-API%E6%96%87%E6%A1%A3.html\">有道 YoudaoApi</a></li>\n<li><a href=\"https://cloud.tencent.com/document/product/551/15619\">腾讯 TecentApi</a></li>\n<li><a href=\"https://www.xfyun.cn/doc/nlp/xftrans/API.html\">讯飞 XunfeiApi</a></li>\n<li><strong>请注意：样例中的 api 参数并非全都可用，请注册账号在各个厂官网申请自己的 api 参数</strong></li>\n</ul>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import jionlp as jio</span><br><span class=\"line\">&gt;&gt;&gt; xunfei_api = jio.XunfeiApi(</span><br><span class=\"line\">        [&#123;<span class=\"string\">&quot;appid&quot;</span>: <span class=\"string\">&quot;5f5846b1&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;api_key&quot;</span>: <span class=\"string\">&quot;52465bb3de9a258379e6909c4b1f2b4b&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;secret&quot;</span>: <span class=\"string\">&quot;b21fdc62a7ed0e287f31cdc4bf4ab9a3&quot;</span>&#125;])</span><br><span class=\"line\">&gt;&gt;&gt; tencent_api = jio.TencentApi(</span><br><span class=\"line\">        [&#123;<span class=\"string\">&quot;project_id&quot;</span>: <span class=\"string\">&quot;0&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;secret_id&quot;</span>: <span class=\"string\">&quot;AKID5zGGuInJwmLehbyKyYXGS3NXOXYLE96o&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;secret_key&quot;</span>: <span class=\"string\">&quot;buwiGXXifLt888rKQLwGH3dsfsdmeCX&quot;</span>&#125;,  <span class=\"comment\"># 错误的 api</span></span><br><span class=\"line\">         &#123;<span class=\"string\">&quot;project_id&quot;</span>: <span class=\"string\">&quot;0&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;secret_id&quot;</span>: <span class=\"string\">&quot;AKID5zGGuInJwmLehbyKyYXGS3NXOXYLE&quot;</span>,</span><br><span class=\"line\">          <span class=\"string\">&quot;secret_key&quot;</span>: <span class=\"string\">&quot;buwiGXXifLt888rKQLwGH3asuhFbmeCX&quot;</span>&#125;])  <span class=\"comment\"># 错误的 api</span></span><br><span class=\"line\">&gt;&gt;&gt; youdao_free_api = jio.YoudaoFreeApi()</span><br><span class=\"line\">&gt;&gt;&gt; youdao_api = jio.YoudaoApi(</span><br><span class=\"line\">        [&#123;<span class=\"string\">&#x27;appid&#x27;</span>: <span class=\"string\">&#x27;39856bd56b482cfc&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;app_secret&#x27;</span>: <span class=\"string\">&#x27;87XpTE63nBVnrR0b6Hy0aTDWlkoq2l4A&#x27;</span>&#125;])</span><br><span class=\"line\">&gt;&gt;&gt; google_api = jio.GoogleApi()</span><br><span class=\"line\">&gt;&gt;&gt; baidu_api = jio.BaiduApi(</span><br><span class=\"line\">        [&#123;<span class=\"string\">&#x27;appid&#x27;</span>: <span class=\"string\">&#x27;20200618000498778&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;secretKey&#x27;</span>: <span class=\"string\">&#x27;raHalLakgYitNuzGOoB2&#x27;</span>&#125;,  <span class=\"comment\"># 错误的密钥</span></span><br><span class=\"line\">         &#123;<span class=\"string\">&#x27;appid&#x27;</span>: <span class=\"string\">&#x27;20200618000498778&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;secretKey&#x27;</span>: <span class=\"string\">&#x27;raHalLakgYitNuzGdsoB2&#x27;</span>&#125;,  <span class=\"comment\"># 错误的密钥</span></span><br><span class=\"line\">         &#123;<span class=\"string\">&#x27;appid&#x27;</span>: <span class=\"string\">&#x27;20200618000498778&#x27;</span>,</span><br><span class=\"line\">          <span class=\"string\">&#x27;secretKey&#x27;</span>: <span class=\"string\">&#x27;raHalLakgYitNuzGOoBZ&#x27;</span>&#125;], gap_time=0.5)</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">print</span>(baidu_api.__doc__)  <span class=\"comment\"># 查看接口说明</span></span><br><span class=\"line\">&gt;&gt;&gt; apis = [baidu_api, youdao_api, google_api,</span><br><span class=\"line\">            youdao_free_api, tencent_api, xunfei_api]</span><br><span class=\"line\"></span><br><span class=\"line\">&gt;&gt;&gt; back_trans = jio.BackTranslation(mt_apis=apis)</span><br><span class=\"line\">&gt;&gt;&gt; text = <span class=\"string\">&#x27;饿了么凌晨发文将推出新功能，用户可选择是否愿意多等外卖员 5 分钟，你愿意多等这 5 分钟吗？&#x27;</span></span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">print</span>(youdao_api(text))  <span class=\"comment\"># 使用接口做单次调用</span></span><br><span class=\"line\">&gt;&gt;&gt; result = back_trans(text)</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">print</span>(result)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [&#x27;饿了么将在凌晨推出一项新功能。用户可以选择是否愿意额外等待外卖人员5分钟。您想多等5分钟吗？&#x27;, </span></span><br><span class=\"line\"><span class=\"comment\">#  &#x27;《饿了么》将在凌晨推出一档新节目。用户可以选择是否愿意等待餐饮人员多花5分钟。您愿意再等五分钟吗？&#x27;, </span></span><br><span class=\"line\"><span class=\"comment\">#  &#x27;Ele.me将在早晨的最初几个小时启动一个新的功能。用户可以选择是否准备好再等5分钟。你不想再等五分钟吗？&#x27;, </span></span><br><span class=\"line\"><span class=\"comment\">#  &#x27;Eleme将在清晨推出新的功能。用户可以选择是否愿意再等5分钟工作人员。你想再等五分钟吗？&#x27;]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>原理简述：利用公开的大厂 API 对文本数据做回译增强，即完成从 <strong>中文 -&gt; 外文 -&gt; 中文</strong> 的翻译过程。</p>\n</li>\n<li>\n<p>该框架考虑了对各 API 的<strong>语言种类支持</strong>问题；<strong>两次调用之间的等待时间</strong>问题；等待<strong>超时</strong>问题；支持在 API 接口中输入<strong>多个密钥</strong>（appkey_obj）。</p>\n</li>\n<li>\n<p>每一个 API 类提供了初始化  <code>lang_pool</code>  参数，用于指定翻译的语种。基于此种考虑：某些小语种的模型效果并不如英语理想，如上例 “饿了么” 句子的翻译，小语种的翻译质量不如英汉互译。</p>\n</li>\n<li>\n<p>该接口框架包括了常用的若干 API（BaiduApi、XunfeiApi、GoogleApi、TecentApi、YoudaoApi、YoudaoFreeApi），也支持</p>\n<p>自定义训练的模型 API 接口</p>\n<p>。具体见下。</p>\n<ul>\n<li>自定义 API 接口接收一个 str 格式文本输入，输出对应的 str 格式翻译文本；</li>\n<li>自定义 API 须指定文本的源语言和目标翻译语言，如 (zh, en) 和 (en, zh)；</li>\n<li>自定义 API 在请求调用报错后需要提供  <code>raise Exeption</code>  语句的异常抛出。</li>\n<li>自定义 API 接口可参考代码中的写法。</li>\n</ul>\n</li>\n<li>\n<p>API 接口<strong>支持多个密钥</strong>，即申请若干个某一厂商的 API，混合在一起调用。框架接口自动选择可用密钥，忽略掉无效密钥。如上例中腾讯和百度的多个密钥，以列表形式传入。</p>\n</li>\n<li>\n<p>您可自己登录对应大厂的云平台，机器翻译服务页面，<strong>申请属于自己的 API 的密钥</strong>。使用更高效。</p>\n</li>\n<li>\n<p>若某些 API 接口效果不理想，可以随意选定若干或指定某个厂商的 API。</p>\n</li>\n<li>\n<p>各厂机翻评价（个人使用体会，不完全客观）：</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>厂名</th>\n<th>翻译质量</th>\n<th>可免费调用数量</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>百度</td>\n<td>中上</td>\n<td>大</td>\n</tr>\n<tr>\n<td>腾讯</td>\n<td>较优</td>\n<td>小</td>\n</tr>\n<tr>\n<td>有道</td>\n<td>中上</td>\n<td>大</td>\n</tr>\n<tr>\n<td>讯飞</td>\n<td>中下</td>\n<td>小</td>\n</tr>\n<tr>\n<td>谷歌</td>\n<td>中上</td>\n<td>无穷多但有 ip 反爬限制</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h4><span id=\"邻近汉字换位\"> 邻近汉字换位</span></h4>\n<h5><span id=\"swap_char_position\"> swap_char_position</span></h5>\n<p>随机交换相邻近字符的位置，用以增强文本数据，理论依据为相邻近汉字顺序变动不影响人的阅读理解。 如 “民盟发言人：昂季素山目前情况良好”，“研表究明，汉字的序顺并不定一能影阅响读”。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import jionlp as jio</span><br><span class=\"line\">&gt;&gt;&gt; res = jio.swap_char_position(<span class=\"string\">&#x27;民盟发言人：昂山素季目前情况良好&#x27;</span>)</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">print</span>(res)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [&#x27;民盟发言人：昂季素山目前情况良好&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">#  &#x27;民盟发言人：昂山季素目前情况良好&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">#  &#x27;民盟发言人：素山昂季目前情况良好&#x27;]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>随机交换相近字符的位置，且交换位置的距离以正态分布得到，scale 参数为 1，默认比例为相邻字符交换占 76.4%，中间隔 1 个字符占比 21.8%，中间隔两个字符占比为 1.8%</li>\n<li><code>augmentation_num(int)</code>  参数控制返回几条增强后的数据</li>\n<li><code>swap_ratio(float)</code>  参数控制对每一个汉字的调整其位置概率</li>\n<li>其余参数参考 <code>jio.swap_char_position.__doc__</code></li>\n</ul>\n<hr>\n<h4><span id=\"同音词替换\"> 同音词替换</span></h4>\n<h5><span id=\"homophone_substitution\"> homophone_substitution</span></h5>\n<p>采用同音词汇进行原文替换，达到数据增强的目的。汉语输入法中，拼音输入法为目前使用最广泛的一种打字法，使用率占比约 97%。 在实际使用中，常常出现同音词的打字错误，例如：原句为</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 原句：“人口危机如果无法得到及时解决，80后、90后们将受到巨大的冲击”</span></span><br><span class=\"line\"><span class=\"comment\"># 拼输：“人口危机如果无法得到即时解决，80后、90后门将受到巨大的冲击”。</span></span><br></pre></td></tr></table></figure>\n<p>从输入的错误来看，完全不影响人的阅读理解。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import jionlp as jio</span><br><span class=\"line\">&gt;&gt;&gt; res = jio.homophone_substitution(<span class=\"string\">&#x27;中国驻英记者一向恪守新闻职业道德，为增进中英两国人民之间的了解和沟通发挥了积极作用。&#x27;</span>)</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">print</span>(res)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [&#x27;中国驻英记者一向刻手信问职业道德，为增进中英两国人民之间的了解和沟通发挥了积极作用。&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">#  &#x27;中国驻英记者一向恪守新闻职业道德，为增进中英两国人民指尖的了解和沟通发挥了积极作用。&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">#  &#x27;中国驻英记者一向恪守新闻职业道德，为增进中英两国人民之间的了解和沟通发挥了积积作用。&#x27;]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>不考虑拼音声调，考虑常见方言读音误读，如 zh 与 z 不分，eng 与 en 不分，f 与 h 不分，l 与 n 不分等情况</li>\n<li>替换时，优先使用常用词汇（依据词频而定）</li>\n<li><code>augmentation_num(int)</code>  参数控制返回几条增强后的数据</li>\n<li><code>homo_ratio(float)</code>  参数控制对每一个汉字的调整其位置概率</li>\n<li><code>allow_mispronounce(bool)</code>  控制是否允许方言读音误读，如 zh 与 z 卷舌不分，默认为 True，允许词汇错音</li>\n<li>其余参数参考 <code>jio.homophone_substitution.__doc__</code></li>\n</ul>\n<hr>\n<h4><span id=\"随机增删字符\"> 随机增删字符</span></h4>\n<h5><span id=\"random_add_delete\"> random_add_delete</span></h5>\n<p>随机在文本中增加、删除某个字符。不影响原意的字符，对文本语义不造成影响。例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 原句：“23日，山东省监狱管理局原副局长王文杰等5人玩忽职守”</span></span><br><span class=\"line\"><span class=\"comment\"># 增删：&quot;2日，山东监狱 管理局、原副局长文杰等5人玩忽职守..&quot;</span></span><br></pre></td></tr></table></figure>\n<p>随机增加的字符的选择，依据对海量文本统计字符分布规律的  <code>char_distribution.json</code>  文件得到，取其中的非中文字符进行添加。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import jionlp as jio</span><br><span class=\"line\">&gt;&gt;&gt; res = jio.random_add_delete(<span class=\"string\">&#x27;孙俪晒11年对比照庆领证纪念日，邓超被指沧桑。&#x27;</span>)</span><br><span class=\"line\">&gt;&gt;&gt; <span class=\"built_in\">print</span>(res)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># [&#x27;孙俪晒11年对比照庆领证纪念日，邓超被指沧。&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">#  &#x27;孙+俪晒11年对比照庆领证纪念日，邓超被指沧桑。&#x27;,</span></span><br><span class=\"line\"><span class=\"comment\">#  &#x27;孙俪晒 11年对比照庆领证纪念日，邓超被指沧/桑。&#x27;]</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>对于某些 NLP 任务，如抽取其中时间词汇，则以上方法很容易干扰关键时间信息，故方法失效。待后续优化，</li>\n<li>替换时，优先使用常用词汇（依据词频而定）</li>\n<li><code>augmentation_num(int)</code>  参数控制返回几条增强后的数据</li>\n<li><code>add_ratio(float)</code>  对每一个位置随机增加字符概率，默认为 0.02</li>\n<li><code>delete_ratio(float)</code>  对每一个汉字随机做删除的概率，默认为 0.02</li>\n<li>其余参数参考 <code>jio.random_add_delete.__doc__</code></li>\n</ul>\n<hr>\n<h4><span id=\"ner-实体替换\"> NER 实体替换</span></h4>\n<h5><span id=\"replaceentity\"> ReplaceEntity</span></h5>\n<p>根据实体词典，随机在文本中替换某个实体，对语义不造成影响。例如：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 原句：“坦桑尼亚现任总统马古富力病逝”# 增删：&quot;柬埔寨现任总统张达美病逝&quot;</span></span><br></pre></td></tr></table></figure>\n<p>该方法不仅仅用于<strong>实体识别</strong>数据增强，也可用于其他<strong>相似序列标注任务</strong>（如<strong>要素抽取</strong>等），也可用于<strong>文本分类、匹配</strong>等任务。 实体词典的获得，可用 <code>jio.ner.collect_dataset_entities</code>  工具使用。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&gt;&gt;&gt; import jionlp as jio&gt;&gt;&gt; <span class=\"comment\"># 从标注语料中获取实体词典&gt;&gt;&gt; dataset_y = [[&#123;&#x27;type&#x27;: &#x27;Person&#x27;, &#x27;text&#x27;: &#x27;马成宇&#x27;, &#x27;offset&#x27;: (0, 3)&#125;,                  &#123;&#x27;type&#x27;: &#x27;Company&#x27;, &#x27;text&#x27;: &#x27;百度&#x27;, &#x27;offset&#x27;: (10, 12)&#125;,                  &#123;&#x27;type&#x27;: &#x27;Company&#x27;, &#x27;text&#x27;: &#x27;百度&#x27;, &#x27;offset&#x27;: (20, 22)&#125;],                 [&#123;&#x27;type&#x27;: &#x27;Company&#x27;, &#x27;text&#x27;: &#x27;国力教育公司&#x27;, &#x27;offset&#x27;: (2, 8)&#125;],                 [&#123;&#x27;type&#x27;: &#x27;Organization&#x27;, &#x27;text&#x27;: &#x27;延平区人民法院&#x27;, &#x27;offset&#x27;: (0, 7)&#125;,                  &#123;&#x27;type&#x27;: &#x27;Company&#x27;, &#x27;text&#x27;: &#x27;百度&#x27;, &#x27;offset&#x27;: (10, 12)&#125;,                  &#123;&#x27;type&#x27;: &#x27;Company&#x27;, &#x27;text&#x27;: &#x27;百度&#x27;, &#x27;offset&#x27;: (20, 22)&#125;]]&gt;&gt;&gt; entity_dict = jio.ner.collect_dataset_entities(dataset_y)&gt;&gt;&gt; print(entity_dict)&gt;&gt;&gt; replace_entity = jio.ReplaceEntity(entity_dict)&gt;&gt;&gt; text = &#x27;腾讯致力于游戏，阿里巴巴致力于电商。小马会玩。&#x27;&gt;&gt;&gt; entities = [&#123;&#x27;type&#x27;: &#x27;Company&#x27;, &#x27;text&#x27;: &#x27;腾讯&#x27;, &#x27;offset&#x27;: (0, 2)&#125;,                &#123;&#x27;type&#x27;: &#x27;Company&#x27;, &#x27;text&#x27;: &#x27;阿里巴巴&#x27;, &#x27;offset&#x27;: (8, 12)&#125;,                &#123;&#x27;type&#x27;: &#x27;Person&#x27;, &#x27;text&#x27;: &#x27;小马&#x27;, &#x27;offset&#x27;: (18, 20)&#125;]&gt;&gt;&gt; aug_texts, aug_entities = replace_entity(text, entities)&gt;&gt;&gt; print(aug_texts, aug_entities)# entity_dict:# &#123;#     &quot;Person&quot;:&#123;#         &quot;马成宇&quot;:1#     &#125;,#     &quot;Company&quot;:&#123;#         &quot;百度&quot;:4,#         &quot;国力教育公司&quot;:1#     &#125;,#     &quot;Organization&quot;:&#123;#         &quot;延平区人民法院&quot;:1#     &#125;# &#125;# # aug_texts:# [&#x27;腾讯致力于解决冲突，国力教育公司致力于玩。小马爱玩。&#x27;, #  &#x27;百度致力于解决冲突，阿里巴巴致力于玩。小马爱玩。&#x27;,#  &#x27;腾讯致力于解决冲突，阿里巴巴致力于玩。马成宇爱玩。&#x27;]# aug_entities:# [[&#123;&#x27;type&#x27;: &#x27;Company&#x27;, &#x27;text&#x27;: &#x27;腾讯&#x27;, &#x27;offset&#x27;: (0, 2)&#125;, #   &#123;&#x27;text&#x27;: &#x27;国力教育公司&#x27;, &#x27;type&#x27;: &#x27;Company&#x27;, &#x27;offset&#x27;: [10, 16]&#125;,#   &#123;&#x27;text&#x27;: &#x27;小马&#x27;, &#x27;type&#x27;: &#x27;Person&#x27;, &#x27;offset&#x27;: (21, 23)&#125;],#  [&#123;&#x27;text&#x27;: &#x27;百度&#x27;, &#x27;type&#x27;: &#x27;Company&#x27;, &#x27;offset&#x27;: [0, 2]&#125;, #   &#123;&#x27;text&#x27;: &#x27;阿里巴巴&#x27;, &#x27;type&#x27;: &#x27;Company&#x27;, &#x27;offset&#x27;: (10, 14)&#125;,#   &#123;&#x27;text&#x27;: &#x27;小马&#x27;, &#x27;type&#x27;: &#x27;Person&#x27;, &#x27;offset&#x27;: (19, 21)&#125;],#  [&#123;&#x27;type&#x27;: &#x27;Company&#x27;, &#x27;text&#x27;: &#x27;腾讯&#x27;, &#x27;offset&#x27;: (0, 2)&#125;, #   &#123;&#x27;type&#x27;: &#x27;Company&#x27;, &#x27;text&#x27;: &#x27;阿里巴巴&#x27;, &#x27;offset&#x27;: (10, 14)&#125;, #   &#123;&#x27;text&#x27;: &#x27;马成宇&#x27;, &#x27;type&#x27;: &#x27;Person&#x27;, &#x27;offset&#x27;: [19, 22]&#125;]])</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>由此可以看到，该方法不仅仅可以用于序列标注的数据增强，同时可以用于文本分类：使用前须将文本做实体识别、序列标注，将相应的实体词典准备好，进行替换。</li>\n<li><code>augmentation_num(int)</code>  参数控制返回几条增强后的数据</li>\n<li><code>replace_ratio(float)</code>  对每一个实体做替换的概率，默认为 0.1</li>\n</ul>\n<p>这个工具包还有很多功能，在 Linux 系统里输入命令  <code>jionlp_help</code>  搜索看看吧！</p>\n",
            "tags": [
                "人工智能",
                "NLP/数据增强工具"
            ]
        }
    ]
}