{
    "version": "https://jsonfeed.org/version/1",
    "title": "且听风吟，御剑于心！ • All posts by \"网络编程\" tag",
    "description": "",
    "home_page_url": "https://leezhao415.github.io",
    "items": [
        {
            "id": "https://leezhao415.github.io/2021/04/20/%E9%9D%99%E6%80%81Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0-Python/",
            "url": "https://leezhao415.github.io/2021/04/20/%E9%9D%99%E6%80%81Web%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0-Python/",
            "title": "静态Web服务器搭建代码实现_Python",
            "date_published": "2021-04-20T12:04:55.000Z",
            "content_html": "<meta name=\"referrer\" content=\"no-referrer\">\n<hr>\n<p><strong>文章目录</strong></p>\n<!-- toc -->\n<ul>\n<li><a href=\"#1-%E6%B5%8F%E8%A7%88%E5%99%A8%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E6%B5%81%E7%A8%8B\">1 浏览器网络请求流程</a></li>\n<li><a href=\"#2-%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81web%E6%9C%8D%E5%8A%A1%E5%99%A8\">2 搭建静态 web 服务器</a>\n<ul>\n<li><a href=\"#21-web%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%BC%80%E5%8F%91%E6%B5%81%E7%A8%8B\">2.1 Web 服务器开发流程</a></li>\n<li><a href=\"#22-%E8%BF%94%E5%9B%9E%E6%8C%87%E5%AE%9A%E9%A1%B5%E9%9D%A2\">2.2 返回指定页面</a></li>\n<li><a href=\"#23-%E5%A4%9A%E4%BB%BB%E5%8A%A1%E7%89%88%E6%9C%8D%E5%8A%A1%E5%99%A8\">2.3 多任务版服务器</a></li>\n<li><a href=\"#24-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%9C%8D%E5%8A%A1%E7%AB%AF\">2.4 面向对象服务端</a></li>\n</ul>\n</li>\n<li><a href=\"#3-%E5%8A%A8%E6%80%81%E7%AB%AF%E5%8F%A3\">3 动态端口</a></li>\n</ul>\n<!-- tocstop -->\n<hr>\n<h3><span id=\"1-浏览器网络请求流程\"> 1 浏览器网络请求流程</span></h3>\n<ol>\n<li>\n<p>浏览器首先链接 DNS 服务器，获取域名对应的 ip 地址</p>\n</li>\n<li>\n<p>通过 ip 和 http 默认端口 80 链接服务器</p>\n</li>\n<li>\n<p>浏览器将请求数据组合成 http 协议的请求文本，发送给服务端</p>\n</li>\n<li>\n<p>服务端收到请求，需要解析请求文本，根据请求资源路径找到对应的资源</p>\n</li>\n<li>\n<p>把资源按照 http 响应格式组成响应文本发送给浏览器</p>\n</li>\n<li>\n<p>浏览器收到响应文本之后进行解析展示</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20210412123106595.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM2NzIyODg3,size_16,color_FFFFFF,t_70#pic_center\" alt=\"在这里插入图片描述\"></p>\n</li>\n</ol>\n<h3><span id=\"2-搭建静态-web-服务器\"> 2 搭建静态 web 服务器</span></h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python -m http.server </span><br><span class=\"line\"><span class=\"comment\"># linux</span></span><br><span class=\"line\">python3 -m http.server </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>-m  运行模块  __name_<em>以__main</em>_</p>\n</blockquote>\n<h4><span id=\"21-web-服务器开发流程\"> 2.1 Web 服务器开发流程</span></h4>\n<ol>\n<li>编写一个 TCP 服务端程序</li>\n<li>获取浏览器发送的 HTTP 请求报文数据</li>\n<li>读取固定页面数据，把页面数据组装成 HTTP 响应报文数据发送给浏览器。</li>\n<li>HTTP 响应报文数据发送完成以后，关闭服务于客户端的套接字。</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 1.编写一个TCP服务端程序</span></span><br><span class=\"line\">    <span class=\"comment\"># 创建socekt</span></span><br><span class=\"line\">    tcp_server_socekt = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">    <span class=\"comment\"># 设置端口复用　</span></span><br><span class=\"line\">    tcp_server_socekt.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 绑定地址</span></span><br><span class=\"line\">    tcp_server_socekt.bind((<span class=\"string\">&quot;&quot;</span>, <span class=\"number\">8080</span>))</span><br><span class=\"line\">    <span class=\"comment\"># 设置监听</span></span><br><span class=\"line\">    tcp_server_socekt.listen(<span class=\"number\">128</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 2.获取浏览器发送的HTTP请求报文数据</span></span><br><span class=\"line\">        <span class=\"comment\"># 建立链接 浏览器充当客户端 访问页面 访问服务端</span></span><br><span class=\"line\">        client_socekt, client_addr = tcp_server_socekt.accept()</span><br><span class=\"line\">        <span class=\"comment\"># 获取浏览器的请求信息</span></span><br><span class=\"line\">        client_request_data = client_socekt.recv(<span class=\"number\">1024</span>).decode()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(client_request_data)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\"># 3.读取固定页面数据，把页面数据组装成HTTP响应报文数据发送给浏览器</span></span><br><span class=\"line\">        <span class=\"comment\"># with open(&quot;./static/index.html&quot;, &quot;rb&quot;) as f:</span></span><br><span class=\"line\">        <span class=\"comment\">#     file_data = f.read()</span></span><br><span class=\"line\">        <span class=\"comment\"># 二进制读模式</span></span><br><span class=\"line\">        f = <span class=\"built_in\">open</span>(<span class=\"string\">&quot;./static/index.html&quot;</span>, <span class=\"string\">&quot;rb&quot;</span>)</span><br><span class=\"line\">        <span class=\"comment\"># f = open(&quot;./static/favicon.ico&quot;, &quot;rb&quot;)</span></span><br><span class=\"line\">        file_data = f.read()</span><br><span class=\"line\">        <span class=\"comment\"># 应答行</span></span><br><span class=\"line\">        response_line = <span class=\"string\">&quot;HTTP/1.1 200 OK\\r\\n&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 应答头</span></span><br><span class=\"line\">        response_header = <span class=\"string\">&quot;Server:haha\\r\\n&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 应答体</span></span><br><span class=\"line\">        response_body = file_data</span><br><span class=\"line\">        <span class=\"comment\"># 应答数据</span></span><br><span class=\"line\">        response_data = (response_line + response_header + <span class=\"string\">&quot;\\r\\n&quot;</span>).encode() + response_body</span><br><span class=\"line\">    </span><br><span class=\"line\">        client_socekt.send(response_data)</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"comment\"># 4.HTTP响应报文数据发送完成以后，关闭服务于客户端的套接字</span></span><br><span class=\"line\">        client_socekt.close()</span><br></pre></td></tr></table></figure>\n<h4><span id=\"22-返回指定页面\"> 2.2 返回指定页面</span></h4>\n<p>解析请求行中的资源路径</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取浏览器的请求信息</span></span><br><span class=\"line\">client_request_data = client_socekt.recv(<span class=\"number\">1024</span>).decode()</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(client_request_data) &lt;= <span class=\"number\">1</span>:</span><br><span class=\"line\">   <span class=\"built_in\">print</span>(<span class=\"string\">&quot;客户端已经关闭&quot;</span>)</span><br><span class=\"line\">   <span class=\"built_in\">print</span>(client_request_data)</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\"> <span class=\"comment\"># 获取用户请求资源的路径</span></span><br><span class=\"line\"> request_data = client_request_data.split(<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\"> <span class=\"built_in\">print</span>(request_data)</span><br><span class=\"line\"> <span class=\"comment\"># 求资源的路径</span></span><br><span class=\"line\"> request_path = request_data[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"keyword\">if</span> request_path == <span class=\"string\">&quot;/&quot;</span>:</span><br><span class=\"line\">     request_path = <span class=\"string\">&quot;/index.html&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"comment\"># 3.读取固定页面数据，把页面数据组装成HTTP响应报文数据发送给浏览器</span></span><br><span class=\"line\"> <span class=\"comment\"># 根据请求资源的路径，读取指定文件的数据</span></span><br><span class=\"line\"> <span class=\"keyword\">try</span>:</span><br><span class=\"line\">     <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;./static&quot;</span> + request_path, <span class=\"string\">&quot;rb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">         file_data = f.read()</span><br><span class=\"line\"> <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">     <span class=\"comment\"># 返回404错误数据</span></span><br><span class=\"line\">     <span class=\"comment\"># 应答行</span></span><br><span class=\"line\">     response_line = <span class=\"string\">&quot;HTTP/1.1 404 Not Found\\r\\n&quot;</span></span><br><span class=\"line\">     <span class=\"comment\"># 应答头</span></span><br><span class=\"line\">     response_header = <span class=\"string\">&quot;Server:pwb\\r\\n&quot;</span></span><br><span class=\"line\">     <span class=\"comment\"># 应答体</span></span><br><span class=\"line\">     response_body = <span class=\"string\">&quot;404 Not Found sorry&quot;</span></span><br><span class=\"line\">     <span class=\"comment\"># 应答数据</span></span><br><span class=\"line\">     <span class=\"comment\"># 组装指定文件数据的响应报文，发送给浏览器</span></span><br><span class=\"line\">     response_data = (response_line + response_header + <span class=\"string\">&quot;\\r\\n&quot;</span> + response_body).encode()</span><br><span class=\"line\"></span><br><span class=\"line\">     client_socket.send(response_data)</span><br><span class=\"line\"> <span class=\"keyword\">else</span>:</span><br><span class=\"line\">     <span class=\"comment\"># 应答行</span></span><br><span class=\"line\">     response_line = <span class=\"string\">&quot;HTTP/1.1 200 OK\\r\\n&quot;</span></span><br><span class=\"line\">     <span class=\"comment\"># 应答头</span></span><br><span class=\"line\">     response_header = <span class=\"string\">&quot;Server:pwb\\r\\n&quot;</span></span><br><span class=\"line\">     <span class=\"comment\"># 应答体</span></span><br><span class=\"line\">     response_body = file_data</span><br><span class=\"line\">     <span class=\"comment\"># 应答数据</span></span><br><span class=\"line\">     <span class=\"comment\"># 组装指定文件数据的响应报文，发送给浏览器</span></span><br><span class=\"line\">     response_data = (response_line + response_header + <span class=\"string\">&quot;\\r\\n&quot;</span>).encode() + response_body</span><br><span class=\"line\"></span><br><span class=\"line\">     client_socket.send(response_data)</span><br><span class=\"line\"> <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">     <span class=\"comment\"># 4.HTTP响应报文数据发送完成以后，关闭服务于客户端的套接字</span></span><br><span class=\"line\">     client_socket.close()</span><br></pre></td></tr></table></figure>\n<h4><span id=\"23-多任务版服务器\"> 2.3 多任务版服务器</span></h4>\n<p>开启多个线程处理接收和发送操作</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取用户请求资源的路径</span></span><br><span class=\"line\"><span class=\"comment\"># 根据请求资源的路径，读取指定文件的数据</span></span><br><span class=\"line\"><span class=\"comment\"># 组装指定文件数据的响应报文，发送给浏览器</span></span><br><span class=\"line\"><span class=\"comment\"># 判断请求的文件在服务端不存在，组装404状态的响应报文，发送给浏览器</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">handle_client_request</span>(<span class=\"params\">client_socekt</span>):</span></span><br><span class=\"line\">    <span class=\"comment\"># 获取浏览器的请求信息</span></span><br><span class=\"line\">    client_request_data = client_socekt.recv(<span class=\"number\">1024</span>).decode()</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(client_request_data)</span><br><span class=\"line\">    <span class=\"comment\"># 获取用户请求资源的路径</span></span><br><span class=\"line\">    requst_data = client_request_data.split(<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(requst_data)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 判断客户端是否关闭</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(requst_data) == <span class=\"number\">1</span>:</span><br><span class=\"line\">        client_socekt.close()</span><br><span class=\"line\">        <span class=\"keyword\">return</span></span><br><span class=\"line\">    <span class=\"comment\"># 求资源的路径</span></span><br><span class=\"line\">    request_path = requst_data[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> request_path == <span class=\"string\">&quot;/&quot;</span>:</span><br><span class=\"line\">        request_path = <span class=\"string\">&quot;/index.html&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># 3.读取固定页面数据，把页面数据组装成HTTP响应报文数据发送给浏览器</span></span><br><span class=\"line\">    <span class=\"comment\"># 根据请求资源的路径，读取指定文件的数据</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;./static&quot;</span> + request_path, <span class=\"string\">&quot;rb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            file_data = f.read()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"comment\"># 返回404错误数据</span></span><br><span class=\"line\">        <span class=\"comment\"># 应答行</span></span><br><span class=\"line\">        response_line = <span class=\"string\">&quot;HTTP/1.1 404 Not Found\\r\\n&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 应答头</span></span><br><span class=\"line\">        response_header = <span class=\"string\">&quot;Server:pwb\\r\\n&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 应答体</span></span><br><span class=\"line\">        response_body = <span class=\"string\">&quot;404 Not Found sorry&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 应答数据</span></span><br><span class=\"line\">        <span class=\"comment\"># 组装指定文件数据的响应报文，发送给浏览器</span></span><br><span class=\"line\">        response_data = (response_line + response_header + <span class=\"string\">&quot;\\r\\n&quot;</span> + response_body).encode()</span><br><span class=\"line\"></span><br><span class=\"line\">        client_socekt.send(response_data)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 应答行</span></span><br><span class=\"line\">        response_line = <span class=\"string\">&quot;HTTP/1.1 200 OK\\r\\n&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 应答头</span></span><br><span class=\"line\">        response_header = <span class=\"string\">&quot;Server:pwb\\r\\n&quot;</span></span><br><span class=\"line\">        <span class=\"comment\"># 应答体</span></span><br><span class=\"line\">        response_body = file_data</span><br><span class=\"line\">        <span class=\"comment\"># 应答数据</span></span><br><span class=\"line\">        <span class=\"comment\"># 组装指定文件数据的响应报文，发送给浏览器</span></span><br><span class=\"line\">        response_data = (response_line + response_header + <span class=\"string\">&quot;\\r\\n&quot;</span>).encode() + response_body</span><br><span class=\"line\"></span><br><span class=\"line\">        client_socekt.send(response_data)</span><br><span class=\"line\">    <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 4.HTTP响应报文数据发送完成以后，关闭服务于客户端的套接字</span></span><br><span class=\"line\">        client_socekt.close()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 1.编写一个TCP服务端程序</span></span><br><span class=\"line\">    <span class=\"comment\"># 创建socekt</span></span><br><span class=\"line\">    tcp_server_socekt = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">    <span class=\"comment\"># 设置端口复用　</span></span><br><span class=\"line\">    tcp_server_socekt.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class=\"literal\">True</span>)</span><br><span class=\"line\">    <span class=\"comment\"># 绑定地址</span></span><br><span class=\"line\">    tcp_server_socekt.bind((<span class=\"string\">&quot;&quot;</span>, <span class=\"number\">8080</span>))</span><br><span class=\"line\">    <span class=\"comment\"># 设置监听</span></span><br><span class=\"line\">    tcp_server_socekt.listen(<span class=\"number\">128</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"comment\"># 2.获取浏览器发送的HTTP请求报文数据</span></span><br><span class=\"line\">        <span class=\"comment\"># 建立链接</span></span><br><span class=\"line\">        client_socekt, client_addr = tcp_server_socekt.accept()</span><br><span class=\"line\">        <span class=\"comment\"># 创建子线程</span></span><br><span class=\"line\">        sub_thread = threading.Thread(target=handle_client_request, args=(client_socekt,))</span><br><span class=\"line\">        sub_thread.start()</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>关闭浏览器，服务端报错</p>\n<p>原因：客户端关闭，服务端 recv 方法不会阻塞，一直读取，读取空数据</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 获取浏览器的请求信息</span></span><br><span class=\"line\">client_request_data = client_socekt.recv(<span class=\"number\">1024</span>).decode()</span><br><span class=\"line\"><span class=\"comment\"># 客户端断开连接  需要停止</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">not</span> client_request_data:</span><br><span class=\"line\"><span class=\"keyword\">return</span></span><br></pre></td></tr></table></figure>\n</blockquote>\n<h4><span id=\"24-面向对象服务端\"> 2.4 面向对象服务端</span></h4>\n<ol>\n<li>定义 Server 类</li>\n<li>在__init__中创建 socket</li>\n<li>定义 start 开启接收客户端请求</li>\n<li>客户端请求接收到之后开启新线程执行后续的接收和发送数据操作</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> socket</span><br><span class=\"line\"><span class=\"keyword\">import</span> threading</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 获取用户请求资源的路径</span></span><br><span class=\"line\"><span class=\"comment\"># 根据请求资源的路径，读取指定文件的数据</span></span><br><span class=\"line\"><span class=\"comment\"># 组装指定文件数据的响应报文，发送给浏览器</span></span><br><span class=\"line\"><span class=\"comment\"># 判断请求的文件在服务端不存在，组装404状态的响应报文，发送给浏览器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">HttpWebServer</span>:</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># 1.编写一个TCP服务端程序</span></span><br><span class=\"line\">        <span class=\"comment\"># 创建socekt</span></span><br><span class=\"line\">        self.tcp_server_socekt = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class=\"line\">        <span class=\"comment\"># 设置端口复用　</span></span><br><span class=\"line\">        self.tcp_server_socekt.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, <span class=\"literal\">True</span>)</span><br><span class=\"line\">        <span class=\"comment\"># 绑定地址</span></span><br><span class=\"line\">        self.tcp_server_socekt.bind((<span class=\"string\">&quot;&quot;</span>, <span class=\"number\">8080</span>))</span><br><span class=\"line\">        <span class=\"comment\"># 设置监听</span></span><br><span class=\"line\">        self.tcp_server_socekt.listen(<span class=\"number\">128</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">handle_client_request</span>(<span class=\"params\">self, client_socekt</span>):</span></span><br><span class=\"line\">        <span class=\"comment\"># while True:</span></span><br><span class=\"line\">        <span class=\"comment\"># 获取浏览器的请求信息</span></span><br><span class=\"line\">        client_request_data = client_socekt.recv(<span class=\"number\">1024</span>).decode()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(client_request_data)</span><br><span class=\"line\">        <span class=\"comment\"># 获取用户请求资源的路径</span></span><br><span class=\"line\">        request_data = client_request_data.split(<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(request_data)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 判断客户端是否关闭</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(request_data) == <span class=\"number\">1</span>:</span><br><span class=\"line\">            client_socekt.close()</span><br><span class=\"line\">            <span class=\"keyword\">return</span></span><br><span class=\"line\">        <span class=\"comment\"># 求资源的路径</span></span><br><span class=\"line\">        request_path = request_data[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> request_path == <span class=\"string\">&quot;/&quot;</span>:</span><br><span class=\"line\">            request_path = <span class=\"string\">&quot;/index.html&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\"># 3.读取固定页面数据，把页面数据组装成HTTP响应报文数据发送给浏览器</span></span><br><span class=\"line\">        <span class=\"comment\"># 根据请求资源的路径，读取指定文件的数据</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(<span class=\"string\">&quot;./static&quot;</span> + request_path, <span class=\"string\">&quot;rb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">                file_data = f.read()</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">            <span class=\"comment\"># 返回404错误数据</span></span><br><span class=\"line\">            <span class=\"comment\"># 应答行</span></span><br><span class=\"line\">            response_line = <span class=\"string\">&quot;HTTP/1.1 404 Not Found\\r\\n&quot;</span></span><br><span class=\"line\">            <span class=\"comment\"># 应答头</span></span><br><span class=\"line\">            response_header = <span class=\"string\">&quot;Server:pwb\\r\\n&quot;</span></span><br><span class=\"line\">            <span class=\"comment\"># 应答体</span></span><br><span class=\"line\">            response_body = <span class=\"string\">&quot;404 Not Found sorry&quot;</span></span><br><span class=\"line\">            <span class=\"comment\"># 应答数据</span></span><br><span class=\"line\">            <span class=\"comment\"># 组装指定文件数据的响应报文，发送给浏览器</span></span><br><span class=\"line\">            response_data = (response_line + response_header + <span class=\"string\">&quot;\\r\\n&quot;</span> + response_body).encode()</span><br><span class=\"line\"></span><br><span class=\"line\">            client_socekt.send(response_data)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 应答行</span></span><br><span class=\"line\">            response_line = <span class=\"string\">&quot;HTTP/1.1 200 OK\\r\\n&quot;</span></span><br><span class=\"line\">            <span class=\"comment\"># 应答头</span></span><br><span class=\"line\">            response_header = <span class=\"string\">&quot;Server:pwb\\r\\n&quot;</span></span><br><span class=\"line\">            <span class=\"comment\"># 应答体</span></span><br><span class=\"line\">            response_body = file_data</span><br><span class=\"line\">            <span class=\"comment\"># 应答数据</span></span><br><span class=\"line\">            <span class=\"comment\"># 组装指定文件数据的响应报文，发送给浏览器</span></span><br><span class=\"line\">            response_data = (response_line + response_header + <span class=\"string\">&quot;\\r\\n&quot;</span>).encode() + response_body</span><br><span class=\"line\"></span><br><span class=\"line\">            client_socekt.send(response_data)</span><br><span class=\"line\">        <span class=\"keyword\">finally</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 4.HTTP响应报文数据发送完成以后，关闭服务于客户端的套接字</span></span><br><span class=\"line\">            client_socekt.close()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">start</span>(<span class=\"params\">self</span>):</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">            <span class=\"comment\"># 2.获取浏览器发送的HTTP请求报文数据</span></span><br><span class=\"line\">            <span class=\"comment\"># 建立链接</span></span><br><span class=\"line\">            client_socekt, client_addr = self.tcp_server_socekt.accept()</span><br><span class=\"line\">            <span class=\"comment\"># 创建子线程</span></span><br><span class=\"line\">            sub_thread = threading.Thread(target=self.handle_client_request, args=(client_socekt,))</span><br><span class=\"line\">            sub_thread.start()</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    <span class=\"comment\"># 创建服务器对象</span></span><br><span class=\"line\">    my_web_server = HttpWebServer()</span><br><span class=\"line\">    <span class=\"comment\"># 启动服务器</span></span><br><span class=\"line\">    my_web_server.start()</span><br></pre></td></tr></table></figure>\n<h3><span id=\"3-动态端口\"> 3 动态端口</span></h3>\n<p>获取通过命令行执行 python 文件传递的参数</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"comment\"># 没有传参数  默认就是模块名</span></span><br><span class=\"line\">argv = sys.argv</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(argv)==<span class=\"number\">2</span> <span class=\"keyword\">and</span> argv[<span class=\"number\">1</span>].isdigit():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(argv[<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>默认没有传递参数，只有一个元素  文件名</p>\n</blockquote>\n<pre><code> sub_thread.start()\n</code></pre>\n<p>if <strong>name</strong> == ‘<strong>main</strong>’:<br>\n# 创建服务器对象<br>\n my_web_server = HttpWebServer ()<br>\n# 启动服务器<br>\n my_web_server.start ()</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## 动态端口</span></span><br><span class=\"line\"></span><br><span class=\"line\">获取通过命令行执行python文件传递的参数</span><br><span class=\"line\"></span><br><span class=\"line\">​```python</span><br><span class=\"line\"><span class=\"keyword\">import</span> sys</span><br><span class=\"line\"><span class=\"comment\"># 没有传参数  默认就是模块名</span></span><br><span class=\"line\">argv = sys.argv</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(argv)==<span class=\"number\">2</span> <span class=\"keyword\">and</span> argv[<span class=\"number\">1</span>].isdigit():</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(argv[<span class=\"number\">1</span>])</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>默认没有传递参数，只有一个元素  文件名</p>\n</blockquote>\n",
            "tags": [
                "人工智能",
                "网络编程"
            ]
        }
    ]
}